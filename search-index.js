var searchIndex = {};
searchIndex["wayland_client"] = {"doc":"Client-side Wayland connector","items":[[5,"downcast_impl","wayland_client","Attempt to downcast a boxed `Implementation` trait object.",null,{"inputs":[{"generics":["implementation"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[3,"AnonymousObject","","Anonymous interface",null,null],[8,"Implementation","","Trait representing implementations for wayland objects",null,null],[10,"receive","","Receive a message",0,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",1,null],[16,"Event","","Set of events associated to this interface",1,null],[18,"NAME","","Name of this interface",1,null],[18,"VERSION","","Maximum supported version of this interface",1,null],[10,"c_interface","","Pointer to the C representation of this interface",1,null],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",2,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",2,null],[10,"is_destructor","","Whether this message is a destructor",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"child","","Retrieve the child `Object` associated with this message if any",2,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[10,"from_raw","","Construct a message from its raw representation",2,null],[10,"into_raw","","Turn this message into its raw representation",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[10,"from_raw_c","","Construct a message of this group from its C representation",2,null],[10,"as_raw_c_in","","Build a C representation of this message",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"Display","","A connection to a wayland server",null,null],[3,"EventQueue","","An event queue for protocol messages",null,null],[3,"QueueToken","","A token representing this event queue",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[3,"GlobalManager","","An utility to manage global objects",null,null],[3,"NewProxy","","A newly-created proxy that needs implementation",null,null],[3,"Proxy","","An handle to a wayland proxy",null,null],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",null,null],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",3,null],[13,"XdgRuntimeDirNotSet","","The `XDG_RUNTIME_DIR` variable is not set while it should be",3,null],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",3,null],[13,"InvalidName","","The provided socket name is invalid",3,null],[13,"InvalidFd","","The FD provided in `WAYLAND_SOCKET` was invalid",3,null],[4,"GlobalError","","An error that occured trying to bind a global",null,null],[13,"Missing","","The requested global was missing",4,null],[13,"VersionTooLow","","The global abvertized by the server has a lower version number than the one requested",4,null],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",null,null],[13,"New","","A new global was created",5,null],[12,"id","wayland_client::GlobalEvent","Id of the new global",5,null],[12,"interface","","Interface of the new global",5,null],[12,"version","","Maximum supported version of the new global",5,null],[13,"Removed","wayland_client","A global was removed",5,null],[12,"id","wayland_client::GlobalEvent","Id of the removed global",5,null],[12,"interface","","Interface of the removed global",5,null],[4,"ProxyMap","wayland_client","This type only exists for type-level compatibility with the rust implementation.",null,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents of the environment variables",6,{"inputs":[],"output":{"generics":["connecterror"],"name":"result"}}],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given name",6,{"inputs":[{"name":"s"}],"output":{"generics":["connecterror"],"name":"result"}}],[11,"from_fd","","Attempt to use an already connected unix socket on given FD to start a wayland connection",6,{"inputs":[{"name":"rawfd"}],"output":{"generics":["connecterror"],"name":"result"}}],[11,"flush","","Non-blocking write to the server",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"create_event_queue","","Create a new event queue associated with this wayland connection",6,{"inputs":[{"name":"self"}],"output":{"name":"eventqueue"}}],[11,"from_external_display","","Create a Display and Event Queue from an external display",6,null],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"proxy"}}],[11,"dispatch","","Dispatches events from the internal buffer.",7,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",7,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"sync_roundtrip","","Synchronous roundtrip",7,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"get_token","","Create a new token associated with this event queue",7,{"inputs":[{"name":"self"}],"output":{"name":"queuetoken"}}],[11,"prepare_read","","Prepare an conccurent read",7,{"inputs":[{"name":"self"}],"output":{"generics":["readeventsguard"],"name":"option"}}],[11,"read_events","","Read events",8,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"cancel","","Cancel the read",8,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"globalmanager"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"globalerror"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"globalerror"}],"output":{"name":"bool"}}],[11,"new","","Create a global manager handling a registry",9,{"inputs":[{"name":"proxy"}],"output":{"name":"globalmanager"}}],[11,"new_with_cb","","Create a global manager handling a registry with a callback",9,{"inputs":[{"name":"proxy"},{"name":"impl"}],"output":{"name":"globalmanager"}}],[11,"instantiate_auto","","Instanciate a global with highest available version",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy","globalerror"],"name":"result"}}],[11,"instantiate_exact","","Instanciate a global with a specific version",9,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f"}],"output":{"generics":["proxy","globalerror"],"name":"result"}}],[11,"list","","Retrieve the list of currently known globals",9,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"proxy"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"proxy"}],"output":{"name":"bool"}}],[11,"send","","Send a request through this object",10,null],[11,"is_alive","","Check if the object associated with this proxy is still alive",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"version","","Retrieve the interface version of this wayland object instance",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"id","","Retrieve the object id of this wayland object",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_user_data","","Associate an arbitrary payload to this object",10,null],[11,"get_user_data","","Retrieve the arbitrary payload associated to this object",10,null],[11,"equals","","Check if the other proxy refers to the same underlying wayland object",10,{"inputs":[{"name":"self"},{"name":"proxy"}],"output":{"name":"bool"}}],[11,"child","","Create a new child object",10,{"inputs":[{"name":"self"}],"output":{"name":"newproxy"}}],[11,"anonymize","","Creates a handle of this proxy with its actual type erased",10,{"inputs":[{"name":"self"}],"output":{"generics":["anonymousobject"],"name":"proxy"}}],[11,"is_implemented_with","","Check whether this proxy has been implemented with given type",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"make_wrapper","","Create a wrapper for this object for queue management",10,{"inputs":[{"name":"self"},{"name":"queuetoken"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"is_external","","Check whether this proxy is managed by the library or not",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",10,null],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",10,null],[11,"implement","","Implement this proxy using given function and implementation data.",11,{"inputs":[{"name":"self"},{"name":"impl"}],"output":{"name":"proxy"}}],[11,"implement_nonsend","","Implement this proxy using given function and implementation data.",11,{"inputs":[{"name":"self"},{"name":"impl"},{"name":"queuetoken"}],"output":{"name":"proxy"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",11,null],[11,"from_c_ptr","","Create a `NewProxy` instance from a C pointer.",11,null],[0,"cursor","","Cursor utilities",null,null],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_theme","","Attempts to load a cursor theme from given name.",null,{"inputs":[{"generics":["str"],"name":"option"},{"name":"u32"},{"name":"proxy"}],"output":{"name":"cursortheme"}}],[11,"get_cursor","","Retrieve a cursor from the theme.",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["cursor"],"name":"option"}}],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"name","","Retrieve the name of this cursor.",13,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"image_count","","Retrieve the number of images contained in this animated cursor",13,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"frame","","Retrieve the image number of cursor animation.",13,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"usize"}}],[11,"frame_and_duration","","Retrieve the image number and its duration.",13,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["cursorimagebuffer"],"name":"option"}}],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"proxy"}}],[0,"egl","wayland_client","EGL utilities",null,null],[3,"WlEglSurface","wayland_client::egl","EGL surface",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","Create an EGL surface from a wayland surface",15,{"inputs":[{"name":"proxy"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",15,null],[11,"get_size","","Fetch current size of the EGL surface",15,null],[11,"resize","","Resize the EGL surface",15,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","Raw pointer to the EGL surface",15,null],[11,"drop","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"get","wayland_client","Unusable method only existing for type-level compatibility",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["proxy"],"name":"option"}}],[11,"get_new","","Unusable method only existing for type-level compatibility",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["newproxy"],"name":"option"}}],[0,"sys","","C-associated types",null,null],[0,"client","wayland_client::sys","Bindings to the client library `libwayland-client.so`",null,null],[4,"wl_proxy","wayland_client::sys::client","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[3,"WaylandClient","","",null,null],[12,"wl_display_connect_to_fd","","",17,null],[12,"wl_display_connect","","",17,null],[12,"wl_display_disconnect","","",17,null],[12,"wl_display_get_fd","","",17,null],[12,"wl_display_roundtrip","","",17,null],[12,"wl_display_read_events","","",17,null],[12,"wl_display_prepare_read","","",17,null],[12,"wl_display_cancel_read","","",17,null],[12,"wl_display_dispatch","","",17,null],[12,"wl_display_dispatch_pending","","",17,null],[12,"wl_display_get_error","","",17,null],[12,"wl_display_get_protocol_error","","",17,null],[12,"wl_display_flush","","",17,null],[12,"wl_event_queue_destroy","","",17,null],[12,"wl_display_create_queue","","",17,null],[12,"wl_display_roundtrip_queue","","",17,null],[12,"wl_display_prepare_read_queue","","",17,null],[12,"wl_display_dispatch_queue","","",17,null],[12,"wl_display_dispatch_queue_pending","","",17,null],[12,"wl_proxy_create","","",17,null],[12,"wl_proxy_destroy","","",17,null],[12,"wl_proxy_add_listener","","",17,null],[12,"wl_proxy_get_listener","","",17,null],[12,"wl_proxy_add_dispatcher","","",17,null],[12,"wl_proxy_marshal_array_constructor","","",17,null],[12,"wl_proxy_marshal_array_constructor_versioned","","",17,null],[12,"wl_proxy_marshal_array","","",17,null],[12,"wl_proxy_set_user_data","","",17,null],[12,"wl_proxy_get_user_data","","",17,null],[12,"wl_proxy_get_id","","",17,null],[12,"wl_proxy_get_class","","",17,null],[12,"wl_proxy_set_queue","","",17,null],[12,"wl_proxy_get_version","","",17,null],[12,"wl_proxy_create_wrapper","","",17,null],[12,"wl_proxy_wrapper_destroy","","",17,null],[12,"wl_log_set_handler_client","","",17,null],[12,"wl_list_init","","",17,null],[12,"wl_list_insert","","",17,null],[12,"wl_list_remove","","",17,null],[12,"wl_list_length","","",17,null],[12,"wl_list_empty","","",17,null],[12,"wl_list_insert_list","","",17,null],[12,"wl_array_init","","",17,null],[12,"wl_array_release","","",17,null],[12,"wl_array_add","","",17,null],[12,"wl_array_copy","","",17,null],[12,"wl_proxy_marshal_constructor","","",17,null],[12,"wl_proxy_marshal_constructor_versioned","","",17,null],[12,"wl_proxy_marshal","","",17,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"common","wayland_client::sys","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_client::sys::common","",null,null],[12,"name","","",18,null],[12,"signature","","",18,null],[12,"types","","",18,null],[3,"wl_interface","","",null,null],[12,"name","","",19,null],[12,"version","","",19,null],[12,"request_count","","",19,null],[12,"requests","","",19,null],[12,"event_count","","",19,null],[12,"events","","",19,null],[3,"wl_list","","",null,null],[12,"prev","","",20,null],[12,"next","","",20,null],[3,"wl_array","","",null,null],[12,"size","","",21,null],[12,"alloc","","",21,null],[12,"data","","",21,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"i32"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[19,"wl_argument","","",null,null],[12,"i","","",22,null],[12,"u","","",22,null],[12,"f","","",22,null],[12,"s","","",22,null],[12,"o","","",22,null],[12,"n","","",22,null],[12,"a","","",22,null],[12,"h","","",22,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"protocol_interfaces","wayland_client::sys","",null,null],[7,"wl_display_requests","wayland_client::sys::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[0,"protocol","wayland_client","Generated interfaces for the core wayland protocol",null,null],[0,"wl_display","wayland_client::protocol","core global object",null,null],[3,"WlDisplay","wayland_client::protocol::wl_display","",null,null],[4,"Error","","global error values",null,null],[13,"InvalidObject","","server couldn't find object",23,null],[13,"InvalidMethod","","method doesn't exist on the specified interface",23,null],[13,"NoMemory","","server is out of memory",23,null],[4,"Request","","",null,null],[13,"Sync","","asynchronous roundtrip",24,null],[12,"callback","wayland_client::protocol::wl_display::Request","",24,null],[13,"GetRegistry","wayland_client::protocol::wl_display","get global registry object",24,null],[12,"registry","wayland_client::protocol::wl_display::Request","",24,null],[4,"Event","wayland_client::protocol::wl_display","",null,null],[13,"Error","","fatal error event",25,null],[12,"object_id","wayland_client::protocol::wl_display::Event","",25,null],[12,"code","","",25,null],[12,"message","","",25,null],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",25,null],[12,"id","wayland_client::protocol::wl_display::Event","",25,null],[8,"RequestsTrait","wayland_client::protocol::wl_display","",null,null],[10,"sync","","asynchronous roundtrip",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_registry","","get global registry object",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wl_registry","wayland_client::protocol","global registry object",null,null],[3,"WlRegistry","wayland_client::protocol::wl_registry","",null,null],[4,"Request","","",null,null],[13,"Bind","","bind an object to the display",27,null],[12,"name","wayland_client::protocol::wl_registry::Request","",27,null],[12,"id","","",27,null],[4,"Event","wayland_client::protocol::wl_registry","",null,null],[13,"Global","","announce global object",28,null],[12,"name","wayland_client::protocol::wl_registry::Event","",28,null],[12,"interface","","",28,null],[12,"version","","",28,null],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",28,null],[12,"name","wayland_client::protocol::wl_registry::Event","",28,null],[8,"RequestsTrait","wayland_client::protocol::wl_registry","",null,null],[10,"bind","","bind an object to the display",29,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wl_callback","wayland_client::protocol","callback object",null,null],[3,"WlCallback","wayland_client::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",30,null],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",30,null],[8,"RequestsTrait","wayland_client::protocol::wl_callback","",null,null],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",31,null],[12,"id","wayland_client::protocol::wl_compositor::Request","",31,null],[13,"CreateRegion","wayland_client::protocol::wl_compositor","create new region",31,null],[12,"id","wayland_client::protocol::wl_compositor::Request","",31,null],[4,"Event","wayland_client::protocol::wl_compositor","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_surface","","create new surface",32,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"create_region","","create new region",32,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",33,null],[12,"id","wayland_client::protocol::wl_shm_pool::Request","",33,null],[12,"offset","","",33,null],[12,"width","","",33,null],[12,"height","","",33,null],[12,"stride","","",33,null],[12,"format","","",33,null],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",33,null],[13,"Resize","","change the size of the pool mapping",33,null],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",33,null],[4,"Event","wayland_client::protocol::wl_shm_pool","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_buffer","","create a buffer from the pool",34,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"format"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"destroy","","destroy the pool",34,null],[10,"resize","","change the size of the pool mapping",34,null],[0,"wl_shm","wayland_client::protocol","shared memory support",null,null],[3,"WlShm","wayland_client::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",35,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",35,null],[13,"InvalidFd","","mmapping the file descriptor failed",35,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",36,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",36,null],[13,"C8","","8-bit color index format, [7:0] C",36,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",36,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",36,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",36,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",36,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",36,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",36,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",36,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",36,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",36,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",36,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",36,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",36,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",36,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",36,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",36,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",36,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",36,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",36,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",36,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",36,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",36,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",36,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",36,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",36,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",36,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",36,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",36,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",36,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",36,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",36,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",36,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",36,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",36,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",36,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",36,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",36,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",36,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",36,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",36,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",36,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",36,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",36,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",36,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",36,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",36,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",36,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",36,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",36,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",36,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",36,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",36,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",36,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",36,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",36,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",36,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",37,null],[12,"id","wayland_client::protocol::wl_shm::Request","",37,null],[12,"fd","","",37,null],[12,"size","","",37,null],[4,"Event","wayland_client::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",38,null],[12,"format","wayland_client::protocol::wl_shm::Event","",38,null],[8,"RequestsTrait","wayland_client::protocol::wl_shm","",null,null],[10,"create_pool","","create a shm pool",39,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"i32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",40,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",41,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy a buffer",42,null],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",43,null],[13,"InvalidActionMask","","action mask contains invalid values",43,null],[13,"InvalidAction","","action argument has an invalid value",43,null],[13,"InvalidOffer","","offer doesn't accept this request",43,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",44,null],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",44,null],[12,"mime_type","","",44,null],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",44,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",44,null],[12,"fd","","",44,null],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",44,null],[13,"Finish","","the offer will no longer be used",44,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",44,null],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",44,null],[12,"preferred_action","","",44,null],[4,"Event","wayland_client::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",45,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",45,null],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",45,null],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",45,null],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",45,null],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",45,null],[8,"RequestsTrait","wayland_client::protocol::wl_data_offer","",null,null],[10,"accept","","accept one of the offered mime types",46,null],[10,"receive","","request that the data is transferred",46,null],[10,"destroy","","destroy data offer",46,null],[10,"finish","","the offer will no longer be used",46,null],[10,"set_actions","","set the available/preferred drag-and-drop actions",46,null],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",47,null],[13,"InvalidSource","","source doesn't accept this request",47,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",48,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",48,null],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",48,null],[13,"SetActions","","set the available drag-and-drop actions",48,null],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",48,null],[4,"Event","wayland_client::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",49,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",49,null],[13,"Send","wayland_client::protocol::wl_data_source","send the data",49,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",49,null],[12,"fd","","",49,null],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",49,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",49,null],[13,"DndFinished","","the drag-and-drop operation concluded",49,null],[13,"Action","","notify the selected action",49,null],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",49,null],[8,"RequestsTrait","wayland_client::protocol::wl_data_source","",null,null],[10,"offer","","add an offered mime type",50,null],[10,"destroy","","destroy the data source",50,null],[10,"set_actions","","set the available drag-and-drop actions",50,null],[0,"wl_data_device","wayland_client::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",51,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",52,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",52,null],[12,"origin","","",52,null],[12,"icon","","",52,null],[12,"serial","","",52,null],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",52,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",52,null],[12,"serial","","",52,null],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",52,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",53,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",53,null],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",53,null],[12,"serial","wayland_client::protocol::wl_data_device::Event","",53,null],[12,"surface","","",53,null],[12,"x","","",53,null],[12,"y","","",53,null],[12,"id","","",53,null],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",53,null],[13,"Motion","","drag-and-drop session motion",53,null],[12,"time","wayland_client::protocol::wl_data_device::Event","",53,null],[12,"x","","",53,null],[12,"y","","",53,null],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",53,null],[13,"Selection","","advertise new selection",53,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",53,null],[8,"RequestsTrait","wayland_client::protocol::wl_data_device","",null,null],[10,"start_drag","","start drag-and-drop operation",54,null],[10,"set_selection","","copy data to the selection",54,null],[10,"release","","destroy data device",54,null],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",null,null],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",55,null],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",55,null],[13,"GetDataDevice","wayland_client::protocol::wl_data_device_manager","create a new data device",55,null],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",55,null],[12,"seat","","",55,null],[4,"Event","wayland_client::protocol::wl_data_device_manager","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_data_source","","create a new data source",56,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_data_device","","create a new data device",56,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_client::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",57,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",58,null],[12,"id","wayland_client::protocol::wl_shell::Request","",58,null],[12,"surface","","",58,null],[4,"Event","wayland_client::protocol::wl_shell","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_shell_surface","","create a shell surface from a surface",59,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",60,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",60,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",60,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",60,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",61,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",61,null],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",61,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",61,null],[12,"serial","","",61,null],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",61,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",61,null],[12,"serial","","",61,null],[12,"edges","","",61,null],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",61,null],[13,"SetTransient","","make the surface a transient surface",61,null],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",61,null],[12,"x","","",61,null],[12,"y","","",61,null],[12,"flags","","",61,null],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",61,null],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",61,null],[12,"framerate","","",61,null],[12,"output","","",61,null],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",61,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",61,null],[12,"serial","","",61,null],[12,"parent","","",61,null],[12,"x","","",61,null],[12,"y","","",61,null],[12,"flags","","",61,null],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",61,null],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",61,null],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",61,null],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",61,null],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",61,null],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",61,null],[4,"Event","wayland_client::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",62,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",62,null],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",62,null],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",62,null],[12,"width","","",62,null],[12,"height","","",62,null],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",62,null],[8,"RequestsTrait","","",null,null],[10,"pong","","respond to a ping event",63,null],[10,"_move","","start an interactive move",63,null],[10,"resize","","start an interactive resize",63,null],[10,"set_toplevel","","make the surface a toplevel surface",63,null],[10,"set_transient","","make the surface a transient surface",63,null],[10,"set_fullscreen","","make the surface a fullscreen surface",63,null],[10,"set_popup","","make the surface a popup surface",63,null],[10,"set_maximized","","make the surface a maximized surface",63,null],[10,"set_title","","set surface title",63,null],[10,"set_class","","set surface class",63,null],[0,"wl_surface","wayland_client::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_client::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",64,null],[13,"InvalidTransform","","buffer transform value is invalid",64,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",65,null],[13,"Attach","","set the surface contents",65,null],[12,"buffer","wayland_client::protocol::wl_surface::Request","",65,null],[12,"x","","",65,null],[12,"y","","",65,null],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",65,null],[12,"x","wayland_client::protocol::wl_surface::Request","",65,null],[12,"y","","",65,null],[12,"width","","",65,null],[12,"height","","",65,null],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",65,null],[12,"callback","wayland_client::protocol::wl_surface::Request","",65,null],[13,"SetOpaqueRegion","wayland_client::protocol::wl_surface","set opaque region",65,null],[12,"region","wayland_client::protocol::wl_surface::Request","",65,null],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",65,null],[12,"region","wayland_client::protocol::wl_surface::Request","",65,null],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",65,null],[13,"SetBufferTransform","","sets the buffer transformation",65,null],[12,"transform","wayland_client::protocol::wl_surface::Request","",65,null],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",65,null],[12,"scale","wayland_client::protocol::wl_surface::Request","",65,null],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",65,null],[12,"x","wayland_client::protocol::wl_surface::Request","",65,null],[12,"y","","",65,null],[12,"width","","",65,null],[12,"height","","",65,null],[4,"Event","wayland_client::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",66,null],[12,"output","wayland_client::protocol::wl_surface::Event","",66,null],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",66,null],[12,"output","wayland_client::protocol::wl_surface::Event","",66,null],[8,"RequestsTrait","wayland_client::protocol::wl_surface","",null,null],[10,"destroy","","delete surface",67,null],[10,"attach","","set the surface contents",67,null],[10,"damage","","mark part of the surface damaged",67,null],[10,"frame","","request a frame throttling hint",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"set_opaque_region","","set opaque region",67,null],[10,"set_input_region","","set input region",67,null],[10,"commit","","commit pending surface state",67,null],[10,"set_buffer_transform","","sets the buffer transformation",67,null],[10,"set_buffer_scale","","sets the buffer scaling factor",67,null],[10,"damage_buffer","","mark part of the surface damaged using buffer coordinates",67,null],[0,"wl_seat","wayland_client::protocol","group of input devices",null,null],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",68,null],[12,"id","wayland_client::protocol::wl_seat::Request","",68,null],[13,"GetKeyboard","wayland_client::protocol::wl_seat","return keyboard object",68,null],[12,"id","wayland_client::protocol::wl_seat::Request","",68,null],[13,"GetTouch","wayland_client::protocol::wl_seat","return touch object",68,null],[12,"id","wayland_client::protocol::wl_seat::Request","",68,null],[13,"Release","wayland_client::protocol::wl_seat","release the seat object",68,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",69,null],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",69,null],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",69,null],[12,"name","wayland_client::protocol::wl_seat::Event","",69,null],[8,"RequestsTrait","wayland_client::protocol::wl_seat","",null,null],[10,"get_pointer","","return pointer object",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_keyboard","","return keyboard object",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_touch","","return touch object",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"release","","release the seat object",70,null],[0,"wl_pointer","wayland_client::protocol","pointer input device",null,null],[3,"WlPointer","wayland_client::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",71,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",72,null],[13,"Pressed","","the button is pressed",72,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",73,null],[13,"HorizontalScroll","","horizontal axis",73,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel",74,null],[13,"Finger","","finger on a touch surface",74,null],[13,"Continuous","","continuous coordinate space",74,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",75,null],[12,"serial","wayland_client::protocol::wl_pointer::Request","",75,null],[12,"surface","","",75,null],[12,"hotspot_x","","",75,null],[12,"hotspot_y","","",75,null],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",75,null],[4,"Event","","",null,null],[13,"Enter","","enter event",76,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",76,null],[12,"surface","","",76,null],[12,"surface_x","","",76,null],[12,"surface_y","","",76,null],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",76,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",76,null],[12,"surface","","",76,null],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",76,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",76,null],[12,"surface_x","","",76,null],[12,"surface_y","","",76,null],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",76,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",76,null],[12,"time","","",76,null],[12,"button","","",76,null],[12,"state","","",76,null],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",76,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",76,null],[12,"axis","","",76,null],[12,"value","","",76,null],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",76,null],[13,"AxisSource","","axis source event",76,null],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",76,null],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",76,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",76,null],[12,"axis","","",76,null],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",76,null],[12,"axis","wayland_client::protocol::wl_pointer::Event","",76,null],[12,"discrete","","",76,null],[8,"RequestsTrait","wayland_client::protocol::wl_pointer","",null,null],[10,"set_cursor","","set the pointer surface",77,null],[10,"release","","release the pointer object",77,null],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",78,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",78,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",79,null],[13,"Pressed","","key is pressed",79,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",80,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",81,null],[12,"format","wayland_client::protocol::wl_keyboard::Event","",81,null],[12,"fd","","",81,null],[12,"size","","",81,null],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",81,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",81,null],[12,"surface","","",81,null],[12,"keys","","",81,null],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",81,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",81,null],[12,"surface","","",81,null],[13,"Key","wayland_client::protocol::wl_keyboard","key event",81,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",81,null],[12,"time","","",81,null],[12,"key","","",81,null],[12,"state","","",81,null],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",81,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",81,null],[12,"mods_depressed","","",81,null],[12,"mods_latched","","",81,null],[12,"mods_locked","","",81,null],[12,"group","","",81,null],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",81,null],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",81,null],[12,"delay","","",81,null],[8,"RequestsTrait","wayland_client::protocol::wl_keyboard","",null,null],[10,"release","","release the keyboard object",82,null],[0,"wl_touch","wayland_client::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_client::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",83,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",84,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",84,null],[12,"time","","",84,null],[12,"surface","","",84,null],[12,"id","","",84,null],[12,"x","","",84,null],[12,"y","","",84,null],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",84,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",84,null],[12,"time","","",84,null],[12,"id","","",84,null],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",84,null],[12,"time","wayland_client::protocol::wl_touch::Event","",84,null],[12,"id","","",84,null],[12,"x","","",84,null],[12,"y","","",84,null],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",84,null],[13,"Cancel","","touch session cancelled",84,null],[8,"RequestsTrait","","",null,null],[10,"release","","release the touch object",85,null],[0,"wl_output","wayland_client::protocol","compositor output region",null,null],[3,"Mode","wayland_client::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",86,null],[13,"None","","no geometry",86,null],[13,"HorizontalRgb","","horizontal RGB",86,null],[13,"HorizontalBgr","","horizontal BGR",86,null],[13,"VerticalRgb","","vertical RGB",86,null],[13,"VerticalBgr","","vertical BGR",86,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",87,null],[13,"_90","","90 degrees counter-clockwise",87,null],[13,"_180","","180 degrees counter-clockwise",87,null],[13,"_270","","270 degrees counter-clockwise",87,null],[13,"Flipped","","180 degree flip around a vertical axis",87,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",87,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",87,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",87,null],[4,"Request","","",null,null],[13,"Release","","release the output object",88,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",89,null],[12,"x","wayland_client::protocol::wl_output::Event","",89,null],[12,"y","","",89,null],[12,"physical_width","","",89,null],[12,"physical_height","","",89,null],[12,"subpixel","","",89,null],[12,"make","","",89,null],[12,"model","","",89,null],[12,"transform","","",89,null],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",89,null],[12,"flags","wayland_client::protocol::wl_output::Event","",89,null],[12,"width","","",89,null],[12,"height","","",89,null],[12,"refresh","","",89,null],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",89,null],[13,"Scale","","output scaling properties",89,null],[12,"factor","wayland_client::protocol::wl_output::Event","",89,null],[8,"RequestsTrait","wayland_client::protocol::wl_output","",null,null],[10,"release","","release the output object",90,null],[0,"wl_region","wayland_client::protocol","region interface",null,null],[3,"WlRegion","wayland_client::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",91,null],[13,"Add","","add rectangle to region",91,null],[12,"x","wayland_client::protocol::wl_region::Request","",91,null],[12,"y","","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",91,null],[12,"x","wayland_client::protocol::wl_region::Request","",91,null],[12,"y","","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[4,"Event","wayland_client::protocol::wl_region","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy region",92,null],[10,"add","","add rectangle to region",92,null],[10,"subtract","","subtract rectangle from region",92,null],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",93,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",94,null],[13,"GetSubsurface","","give a surface the role sub-surface",94,null],[12,"id","wayland_client::protocol::wl_subcompositor::Request","",94,null],[12,"surface","","",94,null],[12,"parent","","",94,null],[4,"Event","wayland_client::protocol::wl_subcompositor","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","unbind from the subcompositor interface",95,null],[10,"get_subsurface","","give a surface the role sub-surface",95,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",96,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",97,null],[13,"SetPosition","","reposition the sub-surface",97,null],[12,"x","wayland_client::protocol::wl_subsurface::Request","",97,null],[12,"y","","",97,null],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",97,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",97,null],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",97,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",97,null],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",97,null],[13,"SetDesync","","set sub-surface to desynchronized mode",97,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove sub-surface interface",98,null],[10,"set_position","","reposition the sub-surface",98,null],[10,"place_above","","restack the sub-surface",98,null],[10,"place_below","","restack the sub-surface",98,null],[10,"set_sync","","set sub-surface to synchronized mode",98,null],[10,"set_desync","","set sub-surface to desynchronized mode",98,null],[11,"clone","wayland_client::protocol::wl_display","",23,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",23,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",24,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",24,null],[11,"into_raw","","",24,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",24,null],[11,"as_raw_c_in","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",25,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",25,null],[11,"into_raw","","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",25,null],[11,"as_raw_c_in","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",99,null],[11,"sync","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"get_registry","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_registry","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",27,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",27,null],[11,"into_raw","","",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",27,null],[11,"as_raw_c_in","","",27,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",28,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",28,null],[11,"into_raw","","",28,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",28,null],[11,"as_raw_c_in","","",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",100,null],[11,"bind","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_callback","",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",101,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",101,null],[11,"into_raw","","",101,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",101,null],[11,"as_raw_c_in","","",101,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",30,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",30,null],[11,"into_raw","","",30,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",30,null],[11,"as_raw_c_in","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",102,null],[11,"is_destructor","wayland_client::protocol::wl_compositor","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",31,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",31,null],[11,"into_raw","","",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",31,null],[11,"as_raw_c_in","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",103,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",103,null],[11,"into_raw","","",103,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",103,null],[11,"as_raw_c_in","","",103,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",104,null],[11,"create_surface","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"create_region","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",33,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",33,null],[11,"into_raw","","",33,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",33,null],[11,"as_raw_c_in","","",33,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",105,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",105,null],[11,"into_raw","","",105,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",105,null],[11,"as_raw_c_in","","",105,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",106,null],[11,"create_buffer","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"format"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"destroy","","",10,null],[11,"resize","","",10,null],[11,"clone","wayland_client::protocol::wl_shm","",35,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",35,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"from_raw","","",36,{"inputs":[{"name":"u32"}],"output":{"generics":["format"],"name":"option"}}],[11,"to_raw","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",37,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",37,null],[11,"into_raw","","",37,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",37,null],[11,"as_raw_c_in","","",37,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",38,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",38,null],[11,"into_raw","","",38,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",38,null],[11,"as_raw_c_in","","",38,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",107,null],[11,"create_pool","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"i32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_buffer","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",40,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",40,null],[11,"into_raw","","",40,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",40,null],[11,"as_raw_c_in","","",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",41,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",41,null],[11,"into_raw","","",41,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",41,null],[11,"as_raw_c_in","","",41,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",108,null],[11,"destroy","wayland_client","",10,null],[11,"clone","wayland_client::protocol::wl_data_offer","",43,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",43,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",43,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",44,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",44,null],[11,"into_raw","","",44,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",44,null],[11,"as_raw_c_in","","",44,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",45,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",45,null],[11,"into_raw","","",45,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",45,null],[11,"as_raw_c_in","","",45,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",109,null],[11,"accept","wayland_client","",10,null],[11,"receive","","",10,null],[11,"destroy","","",10,null],[11,"finish","","",10,null],[11,"set_actions","","",10,null],[11,"clone","wayland_client::protocol::wl_data_source","",47,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",47,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",48,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",48,null],[11,"into_raw","","",48,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",48,null],[11,"as_raw_c_in","","",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",49,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",49,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",49,null],[11,"into_raw","","",49,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",49,null],[11,"as_raw_c_in","","",49,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",110,null],[11,"offer","wayland_client","",10,null],[11,"destroy","","",10,null],[11,"set_actions","","",10,null],[11,"clone","wayland_client::protocol::wl_data_device","",51,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",51,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",52,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",52,null],[11,"into_raw","","",52,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",52,null],[11,"as_raw_c_in","","",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",53,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",53,null],[11,"into_raw","","",53,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",53,null],[11,"as_raw_c_in","","",53,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",111,null],[11,"start_drag","wayland_client","",10,null],[11,"set_selection","","",10,null],[11,"release","","",10,null],[11,"eq","wayland_client::protocol::wl_data_device_manager","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"cmp","","",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"ordering"}}],[11,"hash","","",112,null],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no action",112,null],[18,"Copy","","copy action",112,null],[18,"Move","","move action",112,null],[18,"Ask","","ask action",112,null],[11,"empty","","Returns an empty set of flags.",112,{"inputs":[],"output":{"name":"dndaction"}}],[11,"all","","Returns the set containing all flags.",112,{"inputs":[],"output":{"name":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",112,{"inputs":[{"name":"u32"}],"output":{"generics":["dndaction"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",112,{"inputs":[{"name":"u32"}],"output":{"name":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",112,{"inputs":[{"name":"self"},{"name":"dndaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",112,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",112,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"extend","","",112,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",112,{"inputs":[{"name":"t"}],"output":{"name":"dndaction"}}],[11,"from_raw","","",112,{"inputs":[{"name":"u32"}],"output":{"generics":["dndaction"],"name":"option"}}],[11,"to_raw","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",55,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",55,null],[11,"into_raw","","",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",55,null],[11,"as_raw_c_in","","",55,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",113,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",113,null],[11,"into_raw","","",113,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",113,null],[11,"as_raw_c_in","","",113,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",114,null],[11,"create_data_source","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"get_data_device","","",10,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"clone","wayland_client::protocol::wl_shell","",57,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",57,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",58,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",58,null],[11,"into_raw","","",58,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",58,null],[11,"as_raw_c_in","","",58,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",115,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",115,null],[11,"into_raw","","",115,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",115,null],[11,"as_raw_c_in","","",115,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",116,null],[11,"get_shell_surface","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"eq","wayland_client::protocol::wl_shell_surface","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"le","","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"gt","","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ge","","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"cmp","","",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"ordering"}}],[11,"hash","","",117,null],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no edge",117,null],[18,"Top","","top edge",117,null],[18,"Bottom","","bottom edge",117,null],[18,"Left","","left edge",117,null],[18,"TopLeft","","top and left edges",117,null],[18,"BottomLeft","","bottom and left edges",117,null],[18,"Right","","right edge",117,null],[18,"TopRight","","top and right edges",117,null],[18,"BottomRight","","bottom and right edges",117,null],[11,"empty","","Returns an empty set of flags.",117,{"inputs":[],"output":{"name":"resize"}}],[11,"all","","Returns the set containing all flags.",117,{"inputs":[],"output":{"name":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",117,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",117,{"inputs":[{"name":"u32"}],"output":{"generics":["resize"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",117,{"inputs":[{"name":"u32"}],"output":{"name":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",117,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",117,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",117,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"extend","","",117,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",117,{"inputs":[{"name":"t"}],"output":{"name":"resize"}}],[11,"from_raw","","",117,{"inputs":[{"name":"u32"}],"output":{"generics":["resize"],"name":"option"}}],[11,"to_raw","","",117,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"le","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"gt","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ge","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"cmp","","",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"ordering"}}],[11,"hash","","",118,null],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Inactive","","do not set keyboard focus",118,null],[11,"empty","","Returns an empty set of flags.",118,{"inputs":[],"output":{"name":"transient"}}],[11,"all","","Returns the set containing all flags.",118,{"inputs":[],"output":{"name":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",118,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",118,{"inputs":[{"name":"u32"}],"output":{"generics":["transient"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",118,{"inputs":[{"name":"u32"}],"output":{"name":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",118,{"inputs":[{"name":"self"},{"name":"transient"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",118,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",118,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"extend","","",118,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",118,{"inputs":[{"name":"t"}],"output":{"name":"transient"}}],[11,"from_raw","","",118,{"inputs":[{"name":"u32"}],"output":{"generics":["transient"],"name":"option"}}],[11,"to_raw","","",118,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmethod"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",60,{"inputs":[{"name":"u32"}],"output":{"generics":["fullscreenmethod"],"name":"option"}}],[11,"to_raw","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",61,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",61,null],[11,"into_raw","","",61,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",61,null],[11,"as_raw_c_in","","",61,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",62,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",62,null],[11,"into_raw","","",62,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",62,null],[11,"as_raw_c_in","","",62,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",119,null],[11,"pong","wayland_client","",10,null],[11,"_move","","",10,null],[11,"resize","","",10,null],[11,"set_toplevel","","",10,null],[11,"set_transient","","",10,null],[11,"set_fullscreen","","",10,null],[11,"set_popup","","",10,null],[11,"set_maximized","","",10,null],[11,"set_title","","",10,null],[11,"set_class","","",10,null],[11,"clone","wayland_client::protocol::wl_surface","",64,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",64,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",65,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",65,null],[11,"into_raw","","",65,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",65,null],[11,"as_raw_c_in","","",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",66,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",66,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",66,null],[11,"into_raw","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",66,null],[11,"as_raw_c_in","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",120,null],[11,"destroy","wayland_client","",10,null],[11,"attach","","",10,null],[11,"damage","","",10,null],[11,"frame","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"set_opaque_region","","",10,null],[11,"set_input_region","","",10,null],[11,"commit","","",10,null],[11,"set_buffer_transform","","",10,null],[11,"set_buffer_scale","","",10,null],[11,"damage_buffer","","",10,null],[11,"eq","wayland_client::protocol::wl_seat","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"partial_cmp","","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"le","","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"gt","","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ge","","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"cmp","","",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"ordering"}}],[11,"hash","","",121,null],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Pointer","","the seat has pointer devices",121,null],[18,"Keyboard","","the seat has one or more keyboards",121,null],[18,"Touch","","the seat has touch devices",121,null],[11,"empty","","Returns an empty set of flags.",121,{"inputs":[],"output":{"name":"capability"}}],[11,"all","","Returns the set containing all flags.",121,{"inputs":[],"output":{"name":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",121,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",121,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",121,{"inputs":[{"name":"u32"}],"output":{"name":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",121,{"inputs":[{"name":"self"},{"name":"capability"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",121,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",121,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"extend","","",121,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",121,{"inputs":[{"name":"t"}],"output":{"name":"capability"}}],[11,"from_raw","","",121,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",121,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",68,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",68,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",68,null],[11,"into_raw","","",68,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",68,null],[11,"as_raw_c_in","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",69,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",69,null],[11,"into_raw","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",69,null],[11,"as_raw_c_in","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",122,null],[11,"get_pointer","wayland_client","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"get_keyboard","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"get_touch","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"release","","",10,null],[11,"clone","wayland_client::protocol::wl_pointer","",71,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",71,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",71,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",72,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"from_raw","","",73,{"inputs":[{"name":"u32"}],"output":{"generics":["axis"],"name":"option"}}],[11,"to_raw","","",73,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"axissource"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"bool"}}],[11,"from_raw","","",74,{"inputs":[{"name":"u32"}],"output":{"generics":["axissource"],"name":"option"}}],[11,"to_raw","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",75,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",75,null],[11,"into_raw","","",75,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",75,null],[11,"as_raw_c_in","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",76,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",76,null],[11,"into_raw","","",76,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",76,null],[11,"as_raw_c_in","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",123,null],[11,"set_cursor","wayland_client","",10,null],[11,"release","","",10,null],[11,"clone","wayland_client::protocol::wl_keyboard","",78,{"inputs":[{"name":"self"}],"output":{"name":"keymapformat"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"from_raw","","",78,{"inputs":[{"name":"u32"}],"output":{"generics":["keymapformat"],"name":"option"}}],[11,"to_raw","","",78,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"keystate"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"from_raw","","",79,{"inputs":[{"name":"u32"}],"output":{"generics":["keystate"],"name":"option"}}],[11,"to_raw","","",79,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",80,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",80,null],[11,"into_raw","","",80,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",80,null],[11,"as_raw_c_in","","",80,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",81,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",81,null],[11,"into_raw","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",81,null],[11,"as_raw_c_in","","",81,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",124,null],[11,"release","wayland_client","",10,null],[11,"is_destructor","wayland_client::protocol::wl_touch","",83,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",83,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",83,null],[11,"into_raw","","",83,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",83,null],[11,"as_raw_c_in","","",83,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",84,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",84,null],[11,"into_raw","","",84,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",84,null],[11,"as_raw_c_in","","",84,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",125,null],[11,"release","wayland_client","",10,null],[11,"clone","wayland_client::protocol::wl_output","",86,{"inputs":[{"name":"self"}],"output":{"name":"subpixel"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"subpixel"}],"output":{"name":"bool"}}],[11,"from_raw","","",86,{"inputs":[{"name":"u32"}],"output":{"generics":["subpixel"],"name":"option"}}],[11,"to_raw","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_raw","","",87,{"inputs":[{"name":"u32"}],"output":{"generics":["transform"],"name":"option"}}],[11,"to_raw","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",126,null],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Current","","indicates this is the current mode",126,null],[18,"Preferred","","indicates this is the preferred mode",126,null],[11,"empty","","Returns an empty set of flags.",126,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",126,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",126,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",126,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",126,{"inputs":[{"name":"u32"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",126,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",126,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",126,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",126,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",126,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[11,"from_raw","","",126,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"to_raw","","",126,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",88,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",88,null],[11,"into_raw","","",88,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",88,null],[11,"as_raw_c_in","","",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",89,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",89,null],[11,"into_raw","","",89,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",89,null],[11,"as_raw_c_in","","",89,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",127,null],[11,"release","wayland_client","",10,null],[11,"is_destructor","wayland_client::protocol::wl_region","",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",91,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",91,null],[11,"into_raw","","",91,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",91,null],[11,"as_raw_c_in","","",91,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",128,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",128,null],[11,"into_raw","","",128,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",128,null],[11,"as_raw_c_in","","",128,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",129,null],[11,"destroy","wayland_client","",10,null],[11,"add","","",10,null],[11,"subtract","","",10,null],[11,"clone","wayland_client::protocol::wl_subcompositor","",93,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",93,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",94,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",94,null],[11,"into_raw","","",94,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",94,null],[11,"as_raw_c_in","","",94,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",130,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",130,null],[11,"into_raw","","",130,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",130,null],[11,"as_raw_c_in","","",130,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",131,null],[11,"destroy","wayland_client","",10,null],[11,"get_subsurface","","",10,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[11,"clone","wayland_client::protocol::wl_subsurface","",96,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",96,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",97,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",97,null],[11,"into_raw","","",97,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",97,null],[11,"as_raw_c_in","","",97,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",132,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",132,null],[11,"into_raw","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",132,null],[11,"as_raw_c_in","","",132,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",133,null],[11,"destroy","wayland_client","",10,null],[11,"set_position","","",10,null],[11,"place_above","","",10,null],[11,"place_below","","",10,null],[11,"set_sync","","",10,null],[11,"set_desync","","",10,null],[8,"GlobalImplementor","","A trait for implementation of the global advertizement",null,null],[10,"new_global","","A new global of given interface has been instanciated and you are supposed to provide an implementation for it.",134,{"inputs":[{"name":"self"},{"name":"newproxy"}],"output":{"name":"proxy"}}],[11,"error","","A global was advertized but its version was lower than the minimal version you requested.",134,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",null,null],[11,"is_destructor","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",135,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"m"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",135,null],[11,"into_raw","","",135,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",135,null],[11,"as_raw_c_in","","",135,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",136,null],[11,"deref","wayland_client::sys::client","",137,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deref","","",138,{"inputs":[{"name":"self"}],"output":{"name":"waylandclient"}}],[11,"initialize","","",137,null],[11,"initialize","","",138,null],[11,"is","wayland_client","Returns true if the trait object wraps an object of type `__T`.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast","","Returns a boxed object from a boxed trait object if the underlying object is of type `__T`. Returns the original boxed trait if it isn't.",0,{"inputs":[{"generics":["implementation"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[11,"downcast_ref","","Returns a reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns a mutable reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"error","","A global was advertized but its version was lower than the minimal version you requested.",134,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"open","wayland_client::sys::client","",17,{"inputs":[{"name":"str"}],"output":{"generics":["waylandclient","dlerror"],"name":"result"}}]],"paths":[[8,"Implementation"],[8,"Interface"],[8,"MessageGroup"],[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"NewProxy"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"WlEglSurface"],[4,"ProxyMap"],[3,"WaylandClient"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[3,"WlDisplay"],[3,"WlRegistry"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[8,"GlobalImplementor"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"]]};
searchIndex["wayland_commons"] = {"doc":"Common definitions for wayland","items":[[3,"AnonymousObject","wayland_commons","Anonymous interface",null,null],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[5,"downcast_impl","","Attempt to downcast a boxed `Implementation` trait object.",null,{"inputs":[{"generics":["implementation"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[0,"map","","Wayland objects map",null,null],[3,"Object","wayland_commons::map","The representation of a protocol object",null,null],[12,"interface","","Interface name of this object",0,null],[12,"version","","Version of this object",0,null],[12,"requests","","Description of the requests of this object",0,null],[12,"events","","Description of the events of this object",0,null],[12,"meta","","Metadata associated to this object (ex: its event queue client side)",0,null],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this event if any",0,null],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this request if any",0,null],[3,"ObjectMap","","A holder for the object store of a connection",null,null],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created objects IDs in the namespace",null,null],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation may attach to an object.",null,null],[10,"child","","Create the metadata for a child object",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"object"}}],[11,"from_interface","","Create an Object corresponding to given interface and version",0,{"inputs":[{"name":"u32"},{"name":"meta"}],"output":{"name":"object"}}],[11,"event_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given event opcode",0,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"generics":["object"],"name":"option"}}],[11,"request_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given request opcode",0,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"generics":["object"],"name":"option"}}],[11,"is_interface","","Check whether this object is of given interface",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Create a new empty object map",2,{"inputs":[],"output":{"name":"objectmap"}}],[11,"find","","Find an object in the store",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["object"],"name":"option"}}],[11,"remove","","Remove an object from the store",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"insert_at","","Insert given object for given id",2,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"object"}],"output":{"name":"result"}}],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",2,{"inputs":[{"name":"self"},{"name":"object"}],"output":{"name":"u32"}}],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",2,{"inputs":[{"name":"self"},{"name":"object"}],"output":{"name":"u32"}}],[11,"with","","Mutably access an object of the map",2,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f"}],"output":{"name":"result"}}],[11,"with_all","","Mutably access all objects of the map in sequence",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[0,"socket","wayland_commons","Wayland socket manipulation",null,null],[3,"Socket","wayland_commons::socket","A wayland socket",null,null],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles buffering and conversion from/to wayland messages",null,null],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket message",null,null],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single socket message",null,null],[11,"send_msg","","Send a single message to the socket",3,null],[11,"rcv_msg","","Receive a single message from the socket",3,null],[11,"from_raw_fd","","",3,{"inputs":[{"name":"rawfd"}],"output":{"name":"socket"}}],[11,"as_raw_fd","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"into_raw_fd","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Wrap a Socket into a Buffered Socket",4,{"inputs":[{"name":"socket"}],"output":{"name":"bufferedsocket"}}],[11,"get_socket","","Get direct access to the underlying socket",4,{"inputs":[{"name":"self"}],"output":{"name":"socket"}}],[11,"into_socket","","Retreive ownership of the underlying Socket",4,{"inputs":[{"name":"self"}],"output":{"name":"socket"}}],[11,"flush","","Flush the contents of the outgoing buffer into the socket",4,{"inputs":[{"name":"self"}],"output":{"name":"nixresult"}}],[11,"write_message","","Write a message to the outgoing buffer",4,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"nixresult"}}],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to prepare a new round of parsing.",4,{"inputs":[{"name":"self"}],"output":{"name":"nixresult"}}],[11,"read_one_message","","Read and deserialize a single message from the incoming buffers socket",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["message","messageparseerror"],"name":"result"}}],[11,"read_messages","","Read and deserialize messages from the socket",4,{"inputs":[{"name":"self"},{"name":"f1"},{"name":"f2"}],"output":{"generics":["result"],"name":"nixresult"}}],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the wire format",null,null],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",null,null],[12,"name","","Name of this message",5,null],[12,"signature","","Signature of the message",5,null],[12,"since","","Minimum required version of the interface",5,null],[3,"Message","","A wire message",null,null],[12,"sender_id","","ID of the object sending this message",6,null],[12,"opcode","","Opcode of the message",6,null],[12,"args","","Arguments of the message",6,null],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",null,null],[13,"Int","","i32",7,null],[13,"Uint","","u32",7,null],[13,"Fixed","","fixed point, 1/256 precision",7,null],[13,"Str","","CString",7,null],[13,"Object","","id of a wayland object",7,null],[13,"NewId","","id of a newly created wayland object",7,null],[13,"Array","","Vec",7,null],[13,"Fd","","RawFd",7,null],[4,"Argument","","Enum of possible argument as recognized by the wire, including values",null,null],[13,"Int","","i32",8,null],[13,"Uint","","u32",8,null],[13,"Fixed","","fixed point, 1/256 precision",8,null],[13,"Str","","CString",8,null],[13,"Object","","id of a wayland object",8,null],[13,"NewId","","id of a newly created wayland object",8,null],[13,"Array","","Vec",8,null],[13,"Fd","","RawFd",8,null],[4,"MessageWriteError","","Error generated when trying to serialize a message into buffers",null,null],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",9,null],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",9,null],[4,"MessageParseError","","Error generated when trying to deserialize a message from buffers",null,null],[13,"MissingFD","","The message references a FD but the buffer FD is empty",10,null],[13,"MissingData","","More data is nedded to deserialize the message",10,null],[13,"Malformed","","The message is malformed and cannot be parsed",10,null],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["rawfd"],"name":"nixresult"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"argumenttype"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"argumenttype"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"argument"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"argument"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_type","","Retrieve the type of a given argument isntance",8,{"inputs":[{"name":"self"}],"output":{"name":"argumenttype"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"message"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"messagewriteerror"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"messageparseerror"}}],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",6,null],[11,"from_raw","","Attempts to parse a single wayland message with the given signature.",6,null],[8,"MessageGroup","wayland_commons","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",11,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",11,null],[10,"is_destructor","","Whether this message is a destructor",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"child","","Retrieve the child `Object` associated with this message if any",11,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[10,"from_raw","","Construct a message from its raw representation",11,null],[10,"into_raw","","Turn this message into its raw representation",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[10,"from_raw_c","","Construct a message of this group from its C representation",11,null],[10,"as_raw_c_in","","Build a C representation of this message",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",12,null],[16,"Event","","Set of events associated to this interface",12,null],[18,"NAME","","Name of this interface",12,null],[18,"VERSION","","Maximum supported version of this interface",12,null],[10,"c_interface","","Pointer to the C representation of this interface",12,null],[8,"Implementation","","Trait representing implementations for wayland objects",null,null],[10,"receive","","Receive a message",13,{"inputs":[{"name":"self"},{"name":"msg"},{"name":"meta"}],"output":null}],[11,"is","","Returns true if the trait object wraps an object of type `__T`.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast","","Returns a boxed object from a boxed trait object if the underlying object is of type `__T`. Returns the original boxed trait if it isn't.",13,{"inputs":[{"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[11,"downcast_ref","","Returns a reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns a mutable reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"c_interface","","",14,null],[11,"is_destructor","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",15,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"m"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",15,null],[11,"into_raw","","",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",15,null],[11,"as_raw_c_in","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}]],"paths":[[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[8,"Implementation"],[3,"AnonymousObject"],[4,"NoMessage"]]};
searchIndex["wayland_protocols"] = {"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"wall","wayland_protocols","Protocols from the wayland-wall repository",null,null],[0,"unstable","wayland_protocols::wall","This module hosts the unstable wayland-wall protocols",null,null],[0,"background","wayland_protocols::wall::unstable","This protocol will allow clients to display a surface as your screen background",null,null],[0,"v1","wayland_protocols::wall::unstable::background","",null,null],[0,"client","wayland_protocols::wall::unstable::background::v1","Client-side API of this protocol",null,null],[0,"zww_background_v1","wayland_protocols::wall::unstable::background::v1::client","singleton for background management",null,null],[3,"ZwwBackgroundV1","wayland_protocols::wall::unstable::background::v1::client::zww_background_v1","",null,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",0,null],[13,"Role","","given wl_surface has another role",0,null],[4,"FitMethod","","ww_background fit method values",null,null],[13,"Default","","the compositor will use its own default",1,null],[13,"Crop","","the surface will be cropped",1,null],[13,"Scale","","the surface will be scaled",1,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",2,null],[13,"SetBackground","","sets the wl_surface as the wl_output background",2,null],[12,"surface","wayland_protocols::wall::unstable::background::v1::client::zww_background_v1::Request","",2,null],[12,"output","","",2,null],[12,"fit_method","","",2,null],[4,"Event","wayland_protocols::wall::unstable::background::v1::client::zww_background_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",3,null],[10,"set_background","","sets the wl_surface as the wl_output background",3,null],[0,"server","wayland_protocols::wall::unstable::background::v1","Server-side API of this protocol",null,null],[0,"zww_background_v1","wayland_protocols::wall::unstable::background::v1::server","singleton for background management",null,null],[3,"ZwwBackgroundV1","wayland_protocols::wall::unstable::background::v1::server::zww_background_v1","",null,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",4,null],[13,"Role","","given wl_surface has another role",4,null],[4,"FitMethod","","ww_background fit method values",null,null],[13,"Default","","the compositor will use its own default",5,null],[13,"Crop","","the surface will be cropped",5,null],[13,"Scale","","the surface will be scaled",5,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",6,null],[13,"SetBackground","","sets the wl_surface as the wl_output background",6,null],[12,"surface","wayland_protocols::wall::unstable::background::v1::server::zww_background_v1::Request","",6,null],[12,"output","","",6,null],[12,"fit_method","","",6,null],[4,"Event","wayland_protocols::wall::unstable::background::v1::server::zww_background_v1","",null,null],[0,"c_interfaces","wayland_protocols::wall::unstable::background::v1","C interfaces for this protocol",null,null],[7,"wl_output_interface","wayland_protocols::wall::unstable::background::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zww_background_v1_requests","","",null,null],[7,"zww_background_v1_interface","","",null,null],[11,"clone","wayland_protocols::wall::unstable::background::v1::client::zww_background_v1","",0,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",0,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"fitmethod"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"fitmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",1,{"inputs":[{"name":"u32"}],"output":{"generics":["fitmethod"],"name":"option"}}],[11,"to_raw","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",2,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",2,null],[11,"into_raw","","",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",2,null],[11,"as_raw_c_in","","",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",7,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",7,null],[11,"into_raw","","",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",7,null],[11,"as_raw_c_in","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",8,null],[11,"clone","wayland_protocols::wall::unstable::background::v1::server::zww_background_v1","",4,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",4,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"fitmethod"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"fitmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",5,{"inputs":[{"name":"u32"}],"output":{"generics":["fitmethod"],"name":"option"}}],[11,"to_raw","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",6,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",6,null],[11,"into_raw","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",6,null],[11,"as_raw_c_in","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",9,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",9,null],[11,"into_raw","","",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",9,null],[11,"as_raw_c_in","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",10,null],[0,"v2","wayland_protocols::wall::unstable::background","",null,null],[0,"client","wayland_protocols::wall::unstable::background::v2","Client-side API of this protocol",null,null],[0,"zww_background_v2","wayland_protocols::wall::unstable::background::v2::client","singleton for background management",null,null],[3,"ZwwBackgroundV2","wayland_protocols::wall::unstable::background::v2::client::zww_background_v2","",null,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",11,null],[13,"Role","","given wl_surface has another role",11,null],[13,"Size","","given wl_surface does not match output size",11,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",12,null],[13,"SetBackground","","sets the wl_surface as the wl_output background",12,null],[12,"surface","wayland_protocols::wall::unstable::background::v2::client::zww_background_v2::Request","",12,null],[12,"output","","",12,null],[4,"Event","wayland_protocols::wall::unstable::background::v2::client::zww_background_v2","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",13,null],[10,"set_background","","sets the wl_surface as the wl_output background",13,null],[0,"server","wayland_protocols::wall::unstable::background::v2","Server-side API of this protocol",null,null],[0,"zww_background_v2","wayland_protocols::wall::unstable::background::v2::server","singleton for background management",null,null],[3,"ZwwBackgroundV2","wayland_protocols::wall::unstable::background::v2::server::zww_background_v2","",null,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",14,null],[13,"Role","","given wl_surface has another role",14,null],[13,"Size","","given wl_surface does not match output size",14,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",15,null],[13,"SetBackground","","sets the wl_surface as the wl_output background",15,null],[12,"surface","wayland_protocols::wall::unstable::background::v2::server::zww_background_v2::Request","",15,null],[12,"output","","",15,null],[4,"Event","wayland_protocols::wall::unstable::background::v2::server::zww_background_v2","",null,null],[0,"c_interfaces","wayland_protocols::wall::unstable::background::v2","C interfaces for this protocol",null,null],[7,"wl_output_interface","wayland_protocols::wall::unstable::background::v2::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zww_background_v2_requests","","",null,null],[7,"zww_background_v2_interface","","",null,null],[11,"clone","wayland_protocols::wall::unstable::background::v2::client::zww_background_v2","",11,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",11,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",12,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",12,null],[11,"into_raw","","",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",12,null],[11,"as_raw_c_in","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",16,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",16,null],[11,"into_raw","","",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",16,null],[11,"as_raw_c_in","","",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",17,null],[11,"clone","wayland_protocols::wall::unstable::background::v2::server::zww_background_v2","",14,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",14,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",15,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",15,null],[11,"into_raw","","",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",15,null],[11,"as_raw_c_in","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",18,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",18,null],[11,"into_raw","","",18,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",18,null],[11,"as_raw_c_in","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",19,null],[0,"dock_manager","wayland_protocols::wall::unstable","This protocol will allow clients to dock surfaces on screen edges",null,null],[0,"v1","wayland_protocols::wall::unstable::dock_manager","",null,null],[0,"client","wayland_protocols::wall::unstable::dock_manager::v1","Client-side API of this protocol",null,null],[0,"zww_dock_manager_v1","wayland_protocols::wall::unstable::dock_manager::v1::client","singleton for dock management",null,null],[3,"ZwwDockManagerV1","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_manager_v1","",null,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",20,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",21,null],[13,"Top","","the dock will be at the top of the output",21,null],[13,"Bottom","","the dock will be at the top of the output",21,null],[13,"Left","","the dock will be at the top of the output",21,null],[13,"Right","","the dock will be at the top of the output",21,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",22,null],[13,"CreateDock","","create a dock from a wl_surface",22,null],[12,"id","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_manager_v1::Request","",22,null],[12,"surface","","",22,null],[12,"output","","",22,null],[12,"position","","",22,null],[4,"Event","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",23,null],[10,"create_dock","","create a dock from a wl_surface",23,{"inputs":[{"name":"self"},{"name":"proxy"},{"generics":["proxy"],"name":"option"},{"name":"position"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zww_dock_v1","wayland_protocols::wall::unstable::dock_manager::v1::client","a dock",null,null],[3,"ZwwDockV1","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",24,null],[13,"Show","","ask the compositor to show the dock",24,null],[4,"Event","","",null,null],[13,"Configure","","the dock has a size",25,null],[12,"min_width","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_v1::Event","",25,null],[12,"min_height","","",25,null],[12,"max_width","","",25,null],[12,"max_height","","",25,null],[12,"position","","",25,null],[13,"Visible","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_v1","the dock becomes visible",25,null],[13,"Hidden","","the dock is no longer visible",25,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",26,null],[10,"show","","ask the compositor to show the dock",26,null],[0,"server","wayland_protocols::wall::unstable::dock_manager::v1","Server-side API of this protocol",null,null],[0,"zww_dock_manager_v1","wayland_protocols::wall::unstable::dock_manager::v1::server","singleton for dock management",null,null],[3,"ZwwDockManagerV1","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_manager_v1","",null,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",27,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",28,null],[13,"Top","","the dock will be at the top of the output",28,null],[13,"Bottom","","the dock will be at the top of the output",28,null],[13,"Left","","the dock will be at the top of the output",28,null],[13,"Right","","the dock will be at the top of the output",28,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",29,null],[13,"CreateDock","","create a dock from a wl_surface",29,null],[12,"id","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_manager_v1::Request","",29,null],[12,"surface","","",29,null],[12,"output","","",29,null],[12,"position","","",29,null],[4,"Event","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_manager_v1","",null,null],[0,"zww_dock_v1","wayland_protocols::wall::unstable::dock_manager::v1::server","a dock",null,null],[3,"ZwwDockV1","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",30,null],[13,"Show","","ask the compositor to show the dock",30,null],[4,"Event","","",null,null],[13,"Configure","","the dock has a size",31,null],[12,"min_width","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_v1::Event","",31,null],[12,"min_height","","",31,null],[12,"max_width","","",31,null],[12,"max_height","","",31,null],[12,"position","","",31,null],[13,"Visible","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_v1","the dock becomes visible",31,null],[13,"Hidden","","the dock is no longer visible",31,null],[0,"c_interfaces","wayland_protocols::wall::unstable::dock_manager::v1","C interfaces for this protocol",null,null],[7,"wl_output_interface","wayland_protocols::wall::unstable::dock_manager::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zww_dock_manager_v1_requests","","",null,null],[7,"zww_dock_manager_v1_interface","","",null,null],[7,"zww_dock_v1_requests","","",null,null],[7,"zww_dock_v1_events","","",null,null],[7,"zww_dock_v1_interface","","",null,null],[11,"clone","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_manager_v1","",20,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",20,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",21,{"inputs":[{"name":"u32"}],"output":{"generics":["position"],"name":"option"}}],[11,"to_raw","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",22,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",22,null],[11,"into_raw","","",22,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",22,null],[11,"as_raw_c_in","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",32,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",32,null],[11,"into_raw","","",32,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",32,null],[11,"as_raw_c_in","","",32,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",33,null],[11,"is_destructor","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_v1","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",24,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",24,null],[11,"into_raw","","",24,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",24,null],[11,"as_raw_c_in","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",25,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",25,null],[11,"into_raw","","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",25,null],[11,"as_raw_c_in","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",34,null],[11,"clone","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_manager_v1","",27,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",27,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",28,{"inputs":[{"name":"u32"}],"output":{"generics":["position"],"name":"option"}}],[11,"to_raw","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",29,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",29,null],[11,"into_raw","","",29,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",29,null],[11,"as_raw_c_in","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",35,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",35,null],[11,"into_raw","","",35,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",35,null],[11,"as_raw_c_in","","",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",36,null],[11,"is_destructor","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_v1","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",30,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",30,null],[11,"into_raw","","",30,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",30,null],[11,"as_raw_c_in","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",31,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",31,null],[11,"into_raw","","",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",31,null],[11,"as_raw_c_in","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",37,null],[0,"v2","wayland_protocols::wall::unstable::dock_manager","",null,null],[0,"client","wayland_protocols::wall::unstable::dock_manager::v2","Client-side API of this protocol",null,null],[0,"zww_dock_manager_v2","wayland_protocols::wall::unstable::dock_manager::v2::client","singleton for dock management",null,null],[3,"ZwwDockManagerV2","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_manager_v2","",null,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",38,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",39,null],[13,"Top","","the dock will be at the top of the output",39,null],[13,"Bottom","","the dock will be at the top of the output",39,null],[13,"Left","","the dock will be at the top of the output",39,null],[13,"Right","","the dock will be at the top of the output",39,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",40,null],[13,"CreateDock","","create a dock from a wl_surface",40,null],[12,"id","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_manager_v2::Request","",40,null],[12,"surface","","",40,null],[12,"output","","",40,null],[12,"position","","",40,null],[4,"Event","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_manager_v2","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",41,null],[10,"create_dock","","create a dock from a wl_surface",41,{"inputs":[{"name":"self"},{"name":"proxy"},{"generics":["proxy"],"name":"option"},{"name":"position"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zww_dock_v2","wayland_protocols::wall::unstable::dock_manager::v2::client","a dock",null,null],[3,"ZwwDockV2","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",42,null],[13,"Show","","ask the compositor to show the dock",42,null],[4,"Event","","",null,null],[13,"Configure","","the dock has a size",43,null],[12,"min_width","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_v2::Event","",43,null],[12,"min_height","","",43,null],[12,"max_width","","",43,null],[12,"max_height","","",43,null],[12,"position","","",43,null],[8,"RequestsTrait","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_v2","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",44,null],[10,"show","","ask the compositor to show the dock",44,null],[0,"server","wayland_protocols::wall::unstable::dock_manager::v2","Server-side API of this protocol",null,null],[0,"zww_dock_manager_v2","wayland_protocols::wall::unstable::dock_manager::v2::server","singleton for dock management",null,null],[3,"ZwwDockManagerV2","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_manager_v2","",null,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",45,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",46,null],[13,"Top","","the dock will be at the top of the output",46,null],[13,"Bottom","","the dock will be at the top of the output",46,null],[13,"Left","","the dock will be at the top of the output",46,null],[13,"Right","","the dock will be at the top of the output",46,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",47,null],[13,"CreateDock","","create a dock from a wl_surface",47,null],[12,"id","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_manager_v2::Request","",47,null],[12,"surface","","",47,null],[12,"output","","",47,null],[12,"position","","",47,null],[4,"Event","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_manager_v2","",null,null],[0,"zww_dock_v2","wayland_protocols::wall::unstable::dock_manager::v2::server","a dock",null,null],[3,"ZwwDockV2","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",48,null],[13,"Show","","ask the compositor to show the dock",48,null],[4,"Event","","",null,null],[13,"Configure","","the dock has a size",49,null],[12,"min_width","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_v2::Event","",49,null],[12,"min_height","","",49,null],[12,"max_width","","",49,null],[12,"max_height","","",49,null],[12,"position","","",49,null],[0,"c_interfaces","wayland_protocols::wall::unstable::dock_manager::v2","C interfaces for this protocol",null,null],[7,"wl_output_interface","wayland_protocols::wall::unstable::dock_manager::v2::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zww_dock_manager_v2_requests","","",null,null],[7,"zww_dock_manager_v2_interface","","",null,null],[7,"zww_dock_v2_requests","","",null,null],[7,"zww_dock_v2_events","","",null,null],[7,"zww_dock_v2_interface","","",null,null],[11,"clone","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_manager_v2","",38,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",38,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",39,{"inputs":[{"name":"u32"}],"output":{"generics":["position"],"name":"option"}}],[11,"to_raw","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",40,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",40,null],[11,"into_raw","","",40,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",40,null],[11,"as_raw_c_in","","",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",50,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",50,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",50,null],[11,"into_raw","","",50,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",50,null],[11,"as_raw_c_in","","",50,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",51,null],[11,"is_destructor","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_v2","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",42,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",42,null],[11,"into_raw","","",42,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",42,null],[11,"as_raw_c_in","","",42,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",43,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",43,null],[11,"into_raw","","",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",43,null],[11,"as_raw_c_in","","",43,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",52,null],[11,"clone","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_manager_v2","",45,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",45,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",46,{"inputs":[{"name":"u32"}],"output":{"generics":["position"],"name":"option"}}],[11,"to_raw","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",47,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",47,null],[11,"into_raw","","",47,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",47,null],[11,"as_raw_c_in","","",47,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",53,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",53,null],[11,"into_raw","","",53,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",53,null],[11,"as_raw_c_in","","",53,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",54,null],[11,"is_destructor","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_v2","",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",48,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",48,null],[11,"into_raw","","",48,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",48,null],[11,"as_raw_c_in","","",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",49,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",49,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",49,null],[11,"into_raw","","",49,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",49,null],[11,"as_raw_c_in","","",49,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",55,null],[0,"launcher_menu","wayland_protocols::wall::unstable","This protocol will allow launcher and menu clients, with a proper implicit grab",null,null],[0,"v1","wayland_protocols::wall::unstable::launcher_menu","",null,null],[0,"client","wayland_protocols::wall::unstable::launcher_menu::v1","Client-side API of this protocol",null,null],[0,"zww_launcher_menu_v1","wayland_protocols::wall::unstable::launcher_menu::v1::client","singleton for launchers and menus",null,null],[3,"ZwwLauncherMenuV1","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1","",null,null],[4,"Error","","ww_launcher_menu error values",null,null],[13,"Bound","","ww_launcher_menu is already bound",56,null],[13,"Role","","given wl_surface has another role",56,null],[13,"Unique","","another wl_surface has this role already",56,null],[13,"Serial","","given serial is no longer valid",56,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",57,null],[13,"Show","","show the launcher/menu surface",57,null],[12,"surface","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1::Request","",57,null],[13,"ShowAtPointer","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1","show the launcher/menu surface at the pointer position",57,null],[12,"surface","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1::Request","",57,null],[12,"seat","","",57,null],[12,"serial","","",57,null],[13,"ShowAtSurface","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1","show the launcher/menu surface at the focused surface position",57,null],[12,"surface","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1::Request","",57,null],[12,"seat","","",57,null],[12,"serial","","",57,null],[12,"x","","",57,null],[12,"y","","",57,null],[12,"width","","",57,null],[12,"height","","",57,null],[4,"Event","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1","",null,null],[13,"Dismiss","","the surface is dismissed and must be destroyed",58,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",59,null],[10,"show","","show the launcher/menu surface",59,null],[10,"show_at_pointer","","show the launcher/menu surface at the pointer position",59,null],[10,"show_at_surface","","show the launcher/menu surface at the focused surface position",59,null],[0,"server","wayland_protocols::wall::unstable::launcher_menu::v1","Server-side API of this protocol",null,null],[0,"zww_launcher_menu_v1","wayland_protocols::wall::unstable::launcher_menu::v1::server","singleton for launchers and menus",null,null],[3,"ZwwLauncherMenuV1","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1","",null,null],[4,"Error","","ww_launcher_menu error values",null,null],[13,"Bound","","ww_launcher_menu is already bound",60,null],[13,"Role","","given wl_surface has another role",60,null],[13,"Unique","","another wl_surface has this role already",60,null],[13,"Serial","","given serial is no longer valid",60,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",61,null],[13,"Show","","show the launcher/menu surface",61,null],[12,"surface","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1::Request","",61,null],[13,"ShowAtPointer","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1","show the launcher/menu surface at the pointer position",61,null],[12,"surface","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1::Request","",61,null],[12,"seat","","",61,null],[12,"serial","","",61,null],[13,"ShowAtSurface","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1","show the launcher/menu surface at the focused surface position",61,null],[12,"surface","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1::Request","",61,null],[12,"seat","","",61,null],[12,"serial","","",61,null],[12,"x","","",61,null],[12,"y","","",61,null],[12,"width","","",61,null],[12,"height","","",61,null],[4,"Event","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1","",null,null],[13,"Dismiss","","the surface is dismissed and must be destroyed",62,null],[0,"c_interfaces","wayland_protocols::wall::unstable::launcher_menu::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::wall::unstable::launcher_menu::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zww_launcher_menu_v1_requests","","",null,null],[7,"zww_launcher_menu_v1_events","","",null,null],[7,"zww_launcher_menu_v1_interface","","",null,null],[11,"clone","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1","",56,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",56,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",57,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",57,null],[11,"into_raw","","",57,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",57,null],[11,"as_raw_c_in","","",57,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",58,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",58,null],[11,"into_raw","","",58,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",58,null],[11,"as_raw_c_in","","",58,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",63,null],[11,"clone","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1","",60,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",60,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",61,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",61,null],[11,"into_raw","","",61,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",61,null],[11,"as_raw_c_in","","",61,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",62,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",62,null],[11,"into_raw","","",62,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",62,null],[11,"as_raw_c_in","","",62,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",64,null],[0,"notification_area","wayland_protocols::wall::unstable","This protocol will allow notification daemons to display their notifications using Wayland",null,null],[0,"v1","wayland_protocols::wall::unstable::notification_area","",null,null],[0,"client","wayland_protocols::wall::unstable::notification_area::v1","Client-side API of this protocol",null,null],[0,"zww_notification_area_v1","wayland_protocols::wall::unstable::notification_area::v1::client","singleton for notification daemons",null,null],[3,"ZwwNotificationAreaV1","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1","",null,null],[4,"Error","","ww_notification_area error values",null,null],[13,"Bound","","ww_notification_area is already bound",65,null],[13,"Role","","given wl_surface has another role",65,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",66,null],[13,"CreateNotification","","create a notification from a wl_surface",66,null],[12,"id","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1::Request","",66,null],[12,"surface","","",66,null],[4,"Event","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1","",null,null],[13,"Geometry","","create a notification from a wl_surface",67,null],[12,"width","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1::Event","",67,null],[12,"height","","",67,null],[12,"scale","","",67,null],[8,"RequestsTrait","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",68,null],[10,"create_notification","","create a notification from a wl_surface",68,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zww_notification_v1","wayland_protocols::wall::unstable::notification_area::v1::client","a notification bubble",null,null],[3,"ZwwNotificationV1","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_v1","",null,null],[4,"Error","","ww_notification error values",null,null],[13,"OutsideArea","","notification would be rendered outside the area",69,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",70,null],[13,"Move","","create a notification from a wl_surface",70,null],[12,"x","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_v1::Request","",70,null],[12,"y","","",70,null],[4,"Event","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",71,null],[10,"_move","","create a notification from a wl_surface",71,null],[0,"server","wayland_protocols::wall::unstable::notification_area::v1","Server-side API of this protocol",null,null],[0,"zww_notification_area_v1","wayland_protocols::wall::unstable::notification_area::v1::server","singleton for notification daemons",null,null],[3,"ZwwNotificationAreaV1","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_area_v1","",null,null],[4,"Error","","ww_notification_area error values",null,null],[13,"Bound","","ww_notification_area is already bound",72,null],[13,"Role","","given wl_surface has another role",72,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",73,null],[13,"CreateNotification","","create a notification from a wl_surface",73,null],[12,"id","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_area_v1::Request","",73,null],[12,"surface","","",73,null],[4,"Event","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_area_v1","",null,null],[13,"Geometry","","create a notification from a wl_surface",74,null],[12,"width","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_area_v1::Event","",74,null],[12,"height","","",74,null],[12,"scale","","",74,null],[0,"zww_notification_v1","wayland_protocols::wall::unstable::notification_area::v1::server","a notification bubble",null,null],[3,"ZwwNotificationV1","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_v1","",null,null],[4,"Error","","ww_notification error values",null,null],[13,"OutsideArea","","notification would be rendered outside the area",75,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",76,null],[13,"Move","","create a notification from a wl_surface",76,null],[12,"x","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_v1::Request","",76,null],[12,"y","","",76,null],[4,"Event","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_v1","",null,null],[0,"c_interfaces","wayland_protocols::wall::unstable::notification_area::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::wall::unstable::notification_area::v1::c_interfaces","",null,null],[7,"zww_notification_area_v1_requests","","",null,null],[7,"zww_notification_area_v1_events","","",null,null],[7,"zww_notification_area_v1_interface","","",null,null],[7,"zww_notification_v1_requests","","",null,null],[7,"zww_notification_v1_interface","","",null,null],[11,"clone","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1","",65,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",65,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",66,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",66,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",66,null],[11,"into_raw","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",66,null],[11,"as_raw_c_in","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",67,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",67,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",67,null],[11,"into_raw","","",67,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",67,null],[11,"as_raw_c_in","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",77,null],[11,"clone","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_v1","",69,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",69,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",70,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",70,null],[11,"into_raw","","",70,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",70,null],[11,"as_raw_c_in","","",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",78,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",78,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",78,null],[11,"into_raw","","",78,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",78,null],[11,"as_raw_c_in","","",78,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",79,null],[11,"clone","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_area_v1","",72,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",72,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",73,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",73,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",73,null],[11,"into_raw","","",73,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",73,null],[11,"as_raw_c_in","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",74,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",74,null],[11,"into_raw","","",74,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",74,null],[11,"as_raw_c_in","","",74,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",80,null],[11,"clone","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_v1","",75,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",75,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",75,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",76,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",76,null],[11,"into_raw","","",76,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",76,null],[11,"as_raw_c_in","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",81,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",81,null],[11,"into_raw","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",81,null],[11,"as_raw_c_in","","",81,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",82,null],[0,"window_switcher","wayland_protocols::wall::unstable","This protocol will allow privileged clients to list, switch to and close other clients surfaces",null,null],[0,"v1","wayland_protocols::wall::unstable::window_switcher","",null,null],[0,"client","wayland_protocols::wall::unstable::window_switcher::v1","Client-side API of this protocol",null,null],[0,"zww_window_switcher_v1","wayland_protocols::wall::unstable::window_switcher::v1::client","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherV1","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_v1","",null,null],[4,"Error","","ww_window_switcher error values",null,null],[13,"Bound","","ww_window_switcher is already bound",83,null],[13,"Role","","given wl_surface has another role",83,null],[13,"Unique","","another wl_surface has this role already",83,null],[13,"Serial","","given serial is no longer valid",83,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",84,null],[4,"Event","","",null,null],[13,"Window","","the surface is dismissed and must be destroyed",85,null],[12,"window","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_v1::Event","",85,null],[8,"RequestsTrait","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_v1","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",86,null],[0,"zww_window_switcher_window_v1","wayland_protocols::wall::unstable::window_switcher::v1::client","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherWindowV1","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","",null,null],[4,"Error","","ww_window_switcher_window error values",null,null],[13,"InvalidRectangle","","invalid rectangle values",87,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",88,null],[13,"SwitchTo","","switch to this window",88,null],[12,"seat","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1::Request","",88,null],[12,"serial","","",88,null],[13,"Close","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","close this window",88,null],[12,"seat","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1::Request","",88,null],[12,"serial","","",88,null],[13,"Show","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","show a window thumbnail at given position",88,null],[12,"surface","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1::Request","",88,null],[12,"x","","",88,null],[12,"y","","",88,null],[12,"width","","",88,null],[12,"height","","",88,null],[4,"Event","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","",null,null],[13,"Title","","the window title",89,null],[12,"title","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1::Event","",89,null],[13,"AppId","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","the window app_id",89,null],[12,"app_id","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1::Event","",89,null],[13,"Workspace","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","the workspace name the window is on",89,null],[12,"workspace","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1::Event","",89,null],[13,"Done","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","all window data has been transmitted",89,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",90,null],[10,"switch_to","","switch to this window",90,null],[10,"close","","close this window",90,null],[10,"show","","show a window thumbnail at given position",90,null],[0,"server","wayland_protocols::wall::unstable::window_switcher::v1","Server-side API of this protocol",null,null],[0,"zww_window_switcher_v1","wayland_protocols::wall::unstable::window_switcher::v1::server","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherV1","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_v1","",null,null],[4,"Error","","ww_window_switcher error values",null,null],[13,"Bound","","ww_window_switcher is already bound",91,null],[13,"Role","","given wl_surface has another role",91,null],[13,"Unique","","another wl_surface has this role already",91,null],[13,"Serial","","given serial is no longer valid",91,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",92,null],[4,"Event","","",null,null],[13,"Window","","the surface is dismissed and must be destroyed",93,null],[12,"window","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_v1::Event","",93,null],[0,"zww_window_switcher_window_v1","wayland_protocols::wall::unstable::window_switcher::v1::server","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherWindowV1","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","",null,null],[4,"Error","","ww_window_switcher_window error values",null,null],[13,"InvalidRectangle","","invalid rectangle values",94,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",95,null],[13,"SwitchTo","","switch to this window",95,null],[12,"seat","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1::Request","",95,null],[12,"serial","","",95,null],[13,"Close","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","close this window",95,null],[12,"seat","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1::Request","",95,null],[12,"serial","","",95,null],[13,"Show","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","show a window thumbnail at given position",95,null],[12,"surface","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1::Request","",95,null],[12,"x","","",95,null],[12,"y","","",95,null],[12,"width","","",95,null],[12,"height","","",95,null],[4,"Event","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","",null,null],[13,"Title","","the window title",96,null],[12,"title","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1::Event","",96,null],[13,"AppId","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","the window app_id",96,null],[12,"app_id","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1::Event","",96,null],[13,"Workspace","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","the workspace name the window is on",96,null],[12,"workspace","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1::Event","",96,null],[13,"Done","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","all window data has been transmitted",96,null],[0,"c_interfaces","wayland_protocols::wall::unstable::window_switcher::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::wall::unstable::window_switcher::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zww_window_switcher_v1_requests","","",null,null],[7,"zww_window_switcher_v1_events","","",null,null],[7,"zww_window_switcher_v1_interface","","",null,null],[7,"zww_window_switcher_window_v1_requests","","",null,null],[7,"zww_window_switcher_window_v1_events","","",null,null],[7,"zww_window_switcher_window_v1_interface","","",null,null],[11,"clone","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_v1","",83,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",83,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",83,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",84,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",84,null],[11,"into_raw","","",84,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",84,null],[11,"as_raw_c_in","","",84,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",85,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",85,null],[11,"into_raw","","",85,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",85,null],[11,"as_raw_c_in","","",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",97,null],[11,"clone","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","",87,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",87,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",88,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",88,null],[11,"into_raw","","",88,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",88,null],[11,"as_raw_c_in","","",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",89,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",89,null],[11,"into_raw","","",89,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",89,null],[11,"as_raw_c_in","","",89,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",98,null],[11,"clone","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_v1","",91,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",91,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",92,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",92,null],[11,"into_raw","","",92,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",92,null],[11,"as_raw_c_in","","",92,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",93,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",93,null],[11,"into_raw","","",93,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",93,null],[11,"as_raw_c_in","","",93,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",99,null],[11,"clone","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","",94,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",94,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",95,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",95,null],[11,"into_raw","","",95,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",95,null],[11,"as_raw_c_in","","",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",96,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",96,null],[11,"into_raw","","",96,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",96,null],[11,"as_raw_c_in","","",96,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",100,null],[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",null,null],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",null,null],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",null,null],[0,"client","wayland_protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","compositor is capable of almost any output mode",101,null],[13,"CursorPlane","","compositor has a separate cursor plane",101,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",102,null],[13,"Center","","center the surface on the output",102,null],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",102,null],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",102,null],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",102,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","present_method is not known",103,null],[4,"Request","","",null,null],[13,"Release","","release the wl_fullscreen_shell interface",104,null],[13,"PresentSurface","","present surface for display",104,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",104,null],[12,"method","","",104,null],[12,"output","","",104,null],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","present surface for display at a particular mode",104,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",104,null],[12,"output","","",104,null],[12,"framerate","","",104,null],[12,"feedback","","",104,null],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",null,null],[13,"Capability","","advertises a capability of the compositor",105,null],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event","",105,null],[8,"RequestsTrait","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",null,null],[10,"release","","release the wl_fullscreen_shell interface",106,null],[10,"present_surface","","present surface for display",106,null],[10,"present_surface_for_mode","","present surface for display at a particular mode",106,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"name":"i32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"ModeSuccessful","","mode switch succeeded",107,null],[13,"ModeFailed","","mode switch failed",107,null],[13,"PresentCancelled","","mode switch cancelled",107,null],[8,"RequestsTrait","","",null,null],[0,"server","wayland_protocols::unstable::fullscreen_shell::v1","Server-side API of this protocol",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","compositor is capable of almost any output mode",108,null],[13,"CursorPlane","","compositor has a separate cursor plane",108,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",109,null],[13,"Center","","center the surface on the output",109,null],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",109,null],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",109,null],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",109,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","present_method is not known",110,null],[4,"Request","","",null,null],[13,"Release","","release the wl_fullscreen_shell interface",111,null],[13,"PresentSurface","","present surface for display",111,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",111,null],[12,"method","","",111,null],[12,"output","","",111,null],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","present surface for display at a particular mode",111,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",111,null],[12,"output","","",111,null],[12,"framerate","","",111,null],[12,"feedback","","",111,null],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",null,null],[13,"Capability","","advertises a capability of the compositor",112,null],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Event","",112,null],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"ModeSuccessful","","mode switch succeeded",113,null],[13,"ModeFailed","","mode switch failed",113,null],[13,"PresentCancelled","","mode switch cancelled",113,null],[0,"c_interfaces","wayland_protocols::unstable::fullscreen_shell::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::fullscreen_shell::v1::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"zwp_fullscreen_shell_v1_requests","","",null,null],[7,"zwp_fullscreen_shell_v1_events","","",null,null],[7,"zwp_fullscreen_shell_v1_interface","","",null,null],[7,"zwp_fullscreen_shell_mode_feedback_v1_events","","",null,null],[7,"zwp_fullscreen_shell_mode_feedback_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",101,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",101,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"presentmethod"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"presentmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",102,{"inputs":[{"name":"u32"}],"output":{"generics":["presentmethod"],"name":"option"}}],[11,"to_raw","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",103,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",104,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",104,null],[11,"into_raw","","",104,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",104,null],[11,"as_raw_c_in","","",104,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",105,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",105,null],[11,"into_raw","","",105,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",105,null],[11,"as_raw_c_in","","",105,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",114,null],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",115,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",115,null],[11,"into_raw","","",115,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",115,null],[11,"as_raw_c_in","","",115,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",107,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",107,null],[11,"into_raw","","",107,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",107,null],[11,"as_raw_c_in","","",107,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",116,null],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",108,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",108,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",108,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"presentmethod"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"presentmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",109,{"inputs":[{"name":"u32"}],"output":{"generics":["presentmethod"],"name":"option"}}],[11,"to_raw","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",110,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",110,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",111,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",111,null],[11,"into_raw","","",111,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",111,null],[11,"as_raw_c_in","","",111,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",112,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",112,null],[11,"into_raw","","",112,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",112,null],[11,"as_raw_c_in","","",112,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",117,null],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",118,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",118,null],[11,"into_raw","","",118,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",118,null],[11,"as_raw_c_in","","",118,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",113,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",113,null],[11,"into_raw","","",113,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",113,null],[11,"as_raw_c_in","","",113,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",119,null],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",null,null],[0,"v1","wayland_protocols::unstable::idle_inhibit","",null,null],[0,"client","wayland_protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",120,null],[13,"CreateInhibitor","","create a new inhibitor object",120,null],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request","",120,null],[12,"surface","","",120,null],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the idle inhibitor object",121,null],[10,"create_inhibitor","","create a new inhibitor object",121,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",122,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the idle inhibitor object",123,null],[0,"server","wayland_protocols::unstable::idle_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::server","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",124,null],[13,"CreateInhibitor","","create a new inhibitor object",124,null],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1::Request","",124,null],[12,"surface","","",124,null],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",null,null],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::server","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",125,null],[4,"Event","","",null,null],[0,"c_interfaces","wayland_protocols::unstable::idle_inhibit::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::idle_inhibit::v1::c_interfaces","",null,null],[7,"zwp_idle_inhibit_manager_v1_requests","","",null,null],[7,"zwp_idle_inhibit_manager_v1_interface","","",null,null],[7,"zwp_idle_inhibitor_v1_requests","","",null,null],[7,"zwp_idle_inhibitor_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",120,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",120,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",120,null],[11,"into_raw","","",120,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",120,null],[11,"as_raw_c_in","","",120,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",126,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",126,null],[11,"into_raw","","",126,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",126,null],[11,"as_raw_c_in","","",126,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",127,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",122,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",122,null],[11,"into_raw","","",122,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",122,null],[11,"as_raw_c_in","","",122,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",128,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",128,null],[11,"into_raw","","",128,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",128,null],[11,"as_raw_c_in","","",128,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",129,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",124,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",124,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",124,null],[11,"into_raw","","",124,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",124,null],[11,"as_raw_c_in","","",124,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",130,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",130,null],[11,"into_raw","","",130,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",130,null],[11,"as_raw_c_in","","",130,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",131,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",125,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",125,null],[11,"into_raw","","",125,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",125,null],[11,"as_raw_c_in","","",125,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",132,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",132,null],[11,"into_raw","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",132,null],[11,"as_raw_c_in","","",132,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",133,null],[0,"input_method","wayland_protocols::unstable","Input method protocol",null,null],[0,"v1","wayland_protocols::unstable::input_method","",null,null],[0,"client","wayland_protocols::unstable::input_method::v1","Client-side API of this protocol",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::client","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",134,null],[13,"CommitString","","commit string",134,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"text","","",134,null],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit string",134,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"text","","",134,null],[12,"commit","","",134,null],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit styling",134,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"length","","",134,null],[12,"style","","",134,null],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit cursor",134,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","delete text",134,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"length","","",134,null],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","set cursor to a new position",134,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"anchor","","",134,null],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",134,null],[12,"map","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[13,"Keysym","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","keysym",134,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"time","","",134,null],[12,"sym","","",134,null],[12,"state","","",134,null],[12,"modifiers","","",134,null],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","grab hardware keyboard",134,null],[12,"keyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[13,"Key","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward key event",134,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"time","","",134,null],[12,"key","","",134,null],[12,"state","","",134,null],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward modifiers event",134,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"mods_depressed","","",134,null],[12,"mods_latched","","",134,null],[12,"mods_locked","","",134,null],[12,"group","","",134,null],[13,"Language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",134,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"language","","",134,null],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",134,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",134,null],[12,"direction","","",134,null],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",null,null],[13,"SurroundingText","","surrounding text event",135,null],[12,"text","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",135,null],[12,"cursor","","",135,null],[12,"anchor","","",135,null],[13,"Reset","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",135,null],[13,"ContentType","","",135,null],[12,"hint","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",135,null],[12,"purpose","","",135,null],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",135,null],[12,"button","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",135,null],[12,"index","","",135,null],[13,"CommitState","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",135,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",135,null],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",135,null],[12,"language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",135,null],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",136,null],[10,"commit_string","","commit string",136,null],[10,"preedit_string","","pre-edit string",136,null],[10,"preedit_styling","","pre-edit styling",136,null],[10,"preedit_cursor","","pre-edit cursor",136,null],[10,"delete_surrounding_text","","delete text",136,null],[10,"cursor_position","","set cursor to a new position",136,null],[10,"modifiers_map","","",136,null],[10,"keysym","","keysym",136,null],[10,"grab_keyboard","","grab hardware keyboard",136,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"key","","forward key event",136,null],[10,"modifiers","","forward modifiers event",136,null],[10,"language","","",136,null],[10,"text_direction","","",136,null],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::client","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Activate","","activate event",137,null],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",137,null],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","deactivate event",137,null],[12,"context","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",137,null],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",null,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::client","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",null,null],[4,"Request","","",null,null],[13,"GetInputPanelSurface","","",138,null],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request","",138,null],[12,"surface","","",138,null],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_input_panel_surface","","",139,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::client","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",140,null],[4,"Request","","",null,null],[13,"SetToplevel","","set the surface type as a keyboard",141,null],[12,"output","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request","",141,null],[12,"position","","",141,null],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","set the surface type as an overlay panel",141,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"set_toplevel","","set the surface type as a keyboard",142,null],[10,"set_overlay_panel","","set the surface type as an overlay panel",142,null],[0,"server","wayland_protocols::unstable::input_method::v1","Server-side API of this protocol",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::server","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",143,null],[13,"CommitString","","commit string",143,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"text","","",143,null],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit string",143,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"text","","",143,null],[12,"commit","","",143,null],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit styling",143,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"length","","",143,null],[12,"style","","",143,null],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit cursor",143,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","delete text",143,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"length","","",143,null],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","set cursor to a new position",143,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"anchor","","",143,null],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",143,null],[12,"map","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[13,"Keysym","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","keysym",143,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"time","","",143,null],[12,"sym","","",143,null],[12,"state","","",143,null],[12,"modifiers","","",143,null],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","grab hardware keyboard",143,null],[12,"keyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[13,"Key","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward key event",143,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"time","","",143,null],[12,"key","","",143,null],[12,"state","","",143,null],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward modifiers event",143,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"mods_depressed","","",143,null],[12,"mods_latched","","",143,null],[12,"mods_locked","","",143,null],[12,"group","","",143,null],[13,"Language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",143,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"language","","",143,null],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",143,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",143,null],[12,"direction","","",143,null],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",null,null],[13,"SurroundingText","","surrounding text event",144,null],[12,"text","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",144,null],[12,"cursor","","",144,null],[12,"anchor","","",144,null],[13,"Reset","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",144,null],[13,"ContentType","","",144,null],[12,"hint","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",144,null],[12,"purpose","","",144,null],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",144,null],[12,"button","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",144,null],[12,"index","","",144,null],[13,"CommitState","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",144,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",144,null],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",144,null],[12,"language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",144,null],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::server","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Activate","","activate event",145,null],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",145,null],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","deactivate event",145,null],[12,"context","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",145,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::server","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",null,null],[4,"Request","","",null,null],[13,"GetInputPanelSurface","","",146,null],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1::Request","",146,null],[12,"surface","","",146,null],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",null,null],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::server","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",147,null],[4,"Request","","",null,null],[13,"SetToplevel","","set the surface type as a keyboard",148,null],[12,"output","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1::Request","",148,null],[12,"position","","",148,null],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","set the surface type as an overlay panel",148,null],[4,"Event","","",null,null],[0,"c_interfaces","wayland_protocols::unstable::input_method::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::input_method::v1::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"zwp_input_method_context_v1_requests","","",null,null],[7,"zwp_input_method_context_v1_events","","",null,null],[7,"zwp_input_method_context_v1_interface","","",null,null],[7,"zwp_input_method_v1_events","","",null,null],[7,"zwp_input_method_v1_interface","","",null,null],[7,"zwp_input_panel_v1_requests","","",null,null],[7,"zwp_input_panel_v1_interface","","",null,null],[7,"zwp_input_panel_surface_v1_requests","","",null,null],[7,"zwp_input_panel_surface_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",134,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",134,null],[11,"into_raw","","",134,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",134,null],[11,"as_raw_c_in","","",134,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",135,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",135,null],[11,"into_raw","","",135,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",135,null],[11,"as_raw_c_in","","",135,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",149,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",150,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",150,null],[11,"into_raw","","",150,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",150,null],[11,"as_raw_c_in","","",150,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",137,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",137,null],[11,"into_raw","","",137,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",137,null],[11,"as_raw_c_in","","",137,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",151,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",138,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",138,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",138,null],[11,"into_raw","","",138,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",138,null],[11,"as_raw_c_in","","",138,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",152,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",152,null],[11,"into_raw","","",152,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",152,null],[11,"as_raw_c_in","","",152,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",153,null],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",140,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",140,{"inputs":[{"name":"u32"}],"output":{"generics":["position"],"name":"option"}}],[11,"to_raw","","",140,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",141,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",141,null],[11,"into_raw","","",141,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",141,null],[11,"as_raw_c_in","","",141,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",154,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",154,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",154,null],[11,"into_raw","","",154,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",154,null],[11,"as_raw_c_in","","",154,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",155,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",143,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",143,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",143,null],[11,"into_raw","","",143,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",143,null],[11,"as_raw_c_in","","",143,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",144,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",144,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",144,null],[11,"into_raw","","",144,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",144,null],[11,"as_raw_c_in","","",144,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",156,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",157,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",157,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",157,null],[11,"into_raw","","",157,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",157,null],[11,"as_raw_c_in","","",157,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",145,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",145,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",145,null],[11,"into_raw","","",145,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",145,null],[11,"as_raw_c_in","","",145,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",158,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",146,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",146,null],[11,"into_raw","","",146,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",146,null],[11,"as_raw_c_in","","",146,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",159,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",159,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",159,null],[11,"into_raw","","",159,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",159,null],[11,"as_raw_c_in","","",159,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",160,null],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",147,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",147,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",147,{"inputs":[{"name":"u32"}],"output":{"generics":["position"],"name":"option"}}],[11,"to_raw","","",147,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",148,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",148,null],[11,"into_raw","","",148,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",148,null],[11,"as_raw_c_in","","",148,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",161,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",161,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",161,null],[11,"into_raw","","",161,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",161,null],[11,"as_raw_c_in","","",161,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",162,null],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",null,null],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",null,null],[0,"client","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",null,null],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",null,null],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",163,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",164,null],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",164,null],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",164,null],[12,"surface","","",164,null],[12,"seat","","",164,null],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",165,null],[10,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",165,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",null,null],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",166,null],[4,"Event","","",null,null],[13,"Active","","shortcuts are inhibited",167,null],[13,"Inactive","","shortcuts are restored",167,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",168,null],[0,"server","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard grab_manager",null,null],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",169,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",170,null],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",170,null],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",170,null],[12,"surface","","",170,null],[12,"seat","","",170,null],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard shortcuts inhibitor",null,null],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",171,null],[4,"Event","","",null,null],[13,"Active","","shortcuts are inhibited",172,null],[13,"Inactive","","shortcuts are restored",172,null],[0,"c_interfaces","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","","",null,null],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","","",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_requests","","",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_events","","",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",163,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",163,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",164,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",164,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",164,null],[11,"into_raw","","",164,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",164,null],[11,"as_raw_c_in","","",164,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",173,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",173,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",173,null],[11,"into_raw","","",173,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",173,null],[11,"as_raw_c_in","","",173,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",174,null],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",166,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",166,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",166,null],[11,"into_raw","","",166,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",166,null],[11,"as_raw_c_in","","",166,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",167,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",167,null],[11,"into_raw","","",167,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",167,null],[11,"as_raw_c_in","","",167,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",175,null],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",169,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",169,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",170,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",170,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",170,null],[11,"into_raw","","",170,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",170,null],[11,"as_raw_c_in","","",170,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",176,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",176,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",176,null],[11,"into_raw","","",176,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",176,null],[11,"as_raw_c_in","","",176,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",177,null],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",171,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",171,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",171,null],[11,"into_raw","","",171,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",171,null],[11,"as_raw_c_in","","",171,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",172,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",172,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",172,null],[11,"into_raw","","",172,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",172,null],[11,"as_raw_c_in","","",172,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",178,null],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",null,null],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",null,null],[0,"client","wayland_protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unbind the factory",179,null],[13,"CreateParams","","create a temporary object for buffer parameters",179,null],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Request","",179,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",null,null],[13,"Format","","supported buffer format",180,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",180,null],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format modifier",180,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",180,null],[12,"modifier_hi","","",180,null],[12,"modifier_lo","","",180,null],[8,"RequestsTrait","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",null,null],[10,"destroy","","unbind the factory",181,null],[10,"create_params","","create a temporary object for buffer parameters",181,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",182,null],[13,"PlaneIdx","","plane index out of bounds",182,null],[13,"PlaneSet","","the plane index was already set",182,null],[13,"Incomplete","","missing or too many planes to create a buffer",182,null],[13,"InvalidFormat","","format not supported",182,null],[13,"InvalidDimensions","","invalid width or height",182,null],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",182,null],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",182,null],[4,"Flags","","",null,null],[13,"YInvert","","contents are y-inverted",183,null],[13,"Interlaced","","content is interlaced",183,null],[13,"BottomFirst","","bottom field first",183,null],[4,"Request","","",null,null],[13,"Destroy","","delete this object, used or not",184,null],[13,"Add","","add a dmabuf to the temporary set",184,null],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",184,null],[12,"plane_idx","","",184,null],[12,"offset","","",184,null],[12,"stride","","",184,null],[12,"modifier_hi","","",184,null],[12,"modifier_lo","","",184,null],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",184,null],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",184,null],[12,"height","","",184,null],[12,"format","","",184,null],[12,"flags","","",184,null],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",184,null],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",184,null],[12,"width","","",184,null],[12,"height","","",184,null],[12,"format","","",184,null],[12,"flags","","",184,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",null,null],[13,"Created","","buffer creation succeeded",185,null],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event","",185,null],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation failed",185,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","delete this object, used or not",186,null],[10,"add","","add a dmabuf to the temporary set",186,null],[10,"create","","create a wl_buffer from the given dmabufs",186,null],[10,"create_immed","","immediately create a wl_buffer from the given dmabufs",186,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"server","wayland_protocols::unstable::linux_dmabuf::v1","Server-side API of this protocol",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unbind the factory",187,null],[13,"CreateParams","","create a temporary object for buffer parameters",187,null],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Request","",187,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",null,null],[13,"Format","","supported buffer format",188,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",188,null],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","supported buffer format modifier",188,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",188,null],[12,"modifier_hi","","",188,null],[12,"modifier_lo","","",188,null],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",189,null],[13,"PlaneIdx","","plane index out of bounds",189,null],[13,"PlaneSet","","the plane index was already set",189,null],[13,"Incomplete","","missing or too many planes to create a buffer",189,null],[13,"InvalidFormat","","format not supported",189,null],[13,"InvalidDimensions","","invalid width or height",189,null],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",189,null],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",189,null],[4,"Flags","","",null,null],[13,"YInvert","","contents are y-inverted",190,null],[13,"Interlaced","","content is interlaced",190,null],[13,"BottomFirst","","bottom field first",190,null],[4,"Request","","",null,null],[13,"Destroy","","delete this object, used or not",191,null],[13,"Add","","add a dmabuf to the temporary set",191,null],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",191,null],[12,"plane_idx","","",191,null],[12,"offset","","",191,null],[12,"stride","","",191,null],[12,"modifier_hi","","",191,null],[12,"modifier_lo","","",191,null],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",191,null],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",191,null],[12,"height","","",191,null],[12,"format","","",191,null],[12,"flags","","",191,null],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",191,null],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",191,null],[12,"width","","",191,null],[12,"height","","",191,null],[12,"format","","",191,null],[12,"flags","","",191,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",null,null],[13,"Created","","buffer creation succeeded",192,null],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Event","",192,null],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","buffer creation failed",192,null],[0,"c_interfaces","wayland_protocols::unstable::linux_dmabuf::v1","C interfaces for this protocol",null,null],[7,"wl_buffer_interface","wayland_protocols::unstable::linux_dmabuf::v1::c_interfaces","",null,null],[7,"zwp_linux_dmabuf_v1_requests","","",null,null],[7,"zwp_linux_dmabuf_v1_events","","",null,null],[7,"zwp_linux_dmabuf_v1_interface","","",null,null],[7,"zwp_linux_buffer_params_v1_requests","","",null,null],[7,"zwp_linux_buffer_params_v1_events","","",null,null],[7,"zwp_linux_buffer_params_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",179,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",179,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",179,null],[11,"into_raw","","",179,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",179,null],[11,"as_raw_c_in","","",179,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",180,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",180,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",180,null],[11,"into_raw","","",180,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",180,null],[11,"as_raw_c_in","","",180,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",193,null],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",182,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",182,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",182,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",182,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",182,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",183,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",183,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",183,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"from_raw","","",183,{"inputs":[{"name":"u32"}],"output":{"generics":["flags"],"name":"option"}}],[11,"to_raw","","",183,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",184,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",184,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",184,null],[11,"into_raw","","",184,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",184,null],[11,"as_raw_c_in","","",184,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",185,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",185,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",185,null],[11,"into_raw","","",185,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",185,null],[11,"as_raw_c_in","","",185,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",194,null],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",187,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",187,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",187,null],[11,"into_raw","","",187,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",187,null],[11,"as_raw_c_in","","",187,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",188,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",188,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",188,null],[11,"into_raw","","",188,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",188,null],[11,"as_raw_c_in","","",188,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",195,null],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",189,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",189,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",189,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",189,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",189,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",190,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"from_raw","","",190,{"inputs":[{"name":"u32"}],"output":{"generics":["flags"],"name":"option"}}],[11,"to_raw","","",190,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",191,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",191,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",191,null],[11,"into_raw","","",191,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",191,null],[11,"as_raw_c_in","","",191,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",192,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",192,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",192,null],[11,"into_raw","","",192,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",192,null],[11,"as_raw_c_in","","",192,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",196,null],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",null,null],[0,"v1","wayland_protocols::unstable::pointer_constraints","",null,null],[0,"client","wayland_protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",197,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",198,null],[13,"Persistent","","the pointer constraint may reactivate",198,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer constraints manager object",199,null],[13,"LockPointer","","lock pointer to a position",199,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",199,null],[12,"surface","","",199,null],[12,"pointer","","",199,null],[12,"region","","",199,null],[12,"lifetime","","",199,null],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","confine pointer to a region",199,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",199,null],[12,"surface","","",199,null],[12,"pointer","","",199,null],[12,"region","","",199,null],[12,"lifetime","","",199,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the pointer constraints manager object",200,null],[10,"lock_pointer","","lock pointer to a position",200,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"generics":["proxy"],"name":"option"},{"name":"u32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"confine_pointer","","confine pointer to a region",200,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"generics":["proxy"],"name":"option"},{"name":"u32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the locked pointer object",201,null],[13,"SetCursorPositionHint","","set the pointer cursor position hint",201,null],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",201,null],[12,"surface_y","","",201,null],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","set a new lock region",201,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",201,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",null,null],[13,"Locked","","lock activation event",202,null],[13,"Unlocked","","lock deactivation event",202,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the locked pointer object",203,null],[10,"set_cursor_position_hint","","set the pointer cursor position hint",203,null],[10,"set_region","","set a new lock region",203,null],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the confined pointer object",204,null],[13,"SetRegion","","set a new confine region",204,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request","",204,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",null,null],[13,"Confined","","pointer confined",205,null],[13,"Unconfined","","pointer unconfined",205,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the confined pointer object",206,null],[10,"set_region","","set a new confine region",206,null],[0,"server","wayland_protocols::unstable::pointer_constraints::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::server","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",207,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",208,null],[13,"Persistent","","the pointer constraint may reactivate",208,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer constraints manager object",209,null],[13,"LockPointer","","lock pointer to a position",209,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",209,null],[12,"surface","","",209,null],[12,"pointer","","",209,null],[12,"region","","",209,null],[12,"lifetime","","",209,null],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","confine pointer to a region",209,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",209,null],[12,"surface","","",209,null],[12,"pointer","","",209,null],[12,"region","","",209,null],[12,"lifetime","","",209,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",null,null],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the locked pointer object",210,null],[13,"SetCursorPositionHint","","set the pointer cursor position hint",210,null],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",210,null],[12,"surface_y","","",210,null],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","set a new lock region",210,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",210,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",null,null],[13,"Locked","","lock activation event",211,null],[13,"Unlocked","","lock deactivation event",211,null],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the confined pointer object",212,null],[13,"SetRegion","","set a new confine region",212,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1::Request","",212,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",null,null],[13,"Confined","","pointer confined",213,null],[13,"Unconfined","","pointer unconfined",213,null],[0,"c_interfaces","wayland_protocols::unstable::pointer_constraints::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_constraints::v1::c_interfaces","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_region_interface","","",null,null],[7,"zwp_pointer_constraints_v1_requests","","",null,null],[7,"zwp_pointer_constraints_v1_interface","","",null,null],[7,"zwp_locked_pointer_v1_requests","","",null,null],[7,"zwp_locked_pointer_v1_events","","",null,null],[7,"zwp_locked_pointer_v1_interface","","",null,null],[7,"zwp_confined_pointer_v1_requests","","",null,null],[7,"zwp_confined_pointer_v1_events","","",null,null],[7,"zwp_confined_pointer_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",197,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",197,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",197,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",198,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"fmt","","",198,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",198,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"from_raw","","",198,{"inputs":[{"name":"u32"}],"output":{"generics":["lifetime"],"name":"option"}}],[11,"to_raw","","",198,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",199,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",199,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",199,null],[11,"into_raw","","",199,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",199,null],[11,"as_raw_c_in","","",199,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",214,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",214,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",214,null],[11,"into_raw","","",214,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",214,null],[11,"as_raw_c_in","","",214,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",215,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",201,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",201,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",201,null],[11,"into_raw","","",201,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",201,null],[11,"as_raw_c_in","","",201,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",202,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",202,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",202,null],[11,"into_raw","","",202,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",202,null],[11,"as_raw_c_in","","",202,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",216,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",204,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",204,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",204,null],[11,"into_raw","","",204,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",204,null],[11,"as_raw_c_in","","",204,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",205,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",205,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",205,null],[11,"into_raw","","",205,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",205,null],[11,"as_raw_c_in","","",205,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",217,null],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",207,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",207,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",207,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",207,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",207,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",208,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"fmt","","",208,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",208,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"from_raw","","",208,{"inputs":[{"name":"u32"}],"output":{"generics":["lifetime"],"name":"option"}}],[11,"to_raw","","",208,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",209,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",209,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",209,null],[11,"into_raw","","",209,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",209,null],[11,"as_raw_c_in","","",209,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",218,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",218,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",218,null],[11,"into_raw","","",218,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",218,null],[11,"as_raw_c_in","","",218,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",219,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",210,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",210,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",210,null],[11,"into_raw","","",210,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",210,null],[11,"as_raw_c_in","","",210,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",211,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",211,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",211,null],[11,"into_raw","","",211,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",211,null],[11,"as_raw_c_in","","",211,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",220,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",212,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",212,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",212,null],[11,"into_raw","","",212,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",212,null],[11,"as_raw_c_in","","",212,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",213,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",213,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",213,null],[11,"into_raw","","",213,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",213,null],[11,"as_raw_c_in","","",213,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",221,null],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",null,null],[0,"v1","wayland_protocols::unstable::pointer_gestures","",null,null],[0,"client","wayland_protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::client","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",null,null],[4,"Request","","",null,null],[13,"GetSwipeGesture","","get swipe gesture",222,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",222,null],[12,"pointer","","",222,null],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get pinch gesture",222,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",222,null],[12,"pointer","","",222,null],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_swipe_gesture","","get swipe gesture",223,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_pinch_gesture","","get pinch gesture",223,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer swipe gesture object",224,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger swipe begin",225,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",225,null],[12,"time","","",225,null],[12,"surface","","",225,null],[12,"fingers","","",225,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",225,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",225,null],[12,"dx","","",225,null],[12,"dy","","",225,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",225,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",225,null],[12,"time","","",225,null],[12,"cancelled","","",225,null],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",null,null],[10,"destroy","","destroy the pointer swipe gesture object",226,null],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pinch gesture object",227,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger pinch begin",228,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",228,null],[12,"time","","",228,null],[12,"surface","","",228,null],[12,"fingers","","",228,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",228,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",228,null],[12,"dx","","",228,null],[12,"dy","","",228,null],[12,"scale","","",228,null],[12,"rotation","","",228,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",228,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",228,null],[12,"time","","",228,null],[12,"cancelled","","",228,null],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",null,null],[10,"destroy","","destroy the pinch gesture object",229,null],[0,"server","wayland_protocols::unstable::pointer_gestures::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::server","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",null,null],[4,"Request","","",null,null],[13,"GetSwipeGesture","","get swipe gesture",230,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",230,null],[12,"pointer","","",230,null],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","get pinch gesture",230,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",230,null],[12,"pointer","","",230,null],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",null,null],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer swipe gesture object",231,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger swipe begin",232,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",232,null],[12,"time","","",232,null],[12,"surface","","",232,null],[12,"fingers","","",232,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",232,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",232,null],[12,"dx","","",232,null],[12,"dy","","",232,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",232,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",232,null],[12,"time","","",232,null],[12,"cancelled","","",232,null],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pinch gesture object",233,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger pinch begin",234,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",234,null],[12,"time","","",234,null],[12,"surface","","",234,null],[12,"fingers","","",234,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",234,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",234,null],[12,"dx","","",234,null],[12,"dy","","",234,null],[12,"scale","","",234,null],[12,"rotation","","",234,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",234,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",234,null],[12,"time","","",234,null],[12,"cancelled","","",234,null],[0,"c_interfaces","wayland_protocols::unstable::pointer_gestures::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_gestures::v1::c_interfaces","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"zwp_pointer_gestures_v1_requests","","",null,null],[7,"zwp_pointer_gestures_v1_interface","","",null,null],[7,"zwp_pointer_gesture_swipe_v1_requests","","",null,null],[7,"zwp_pointer_gesture_swipe_v1_events","","",null,null],[7,"zwp_pointer_gesture_swipe_v1_interface","","",null,null],[7,"zwp_pointer_gesture_pinch_v1_requests","","",null,null],[7,"zwp_pointer_gesture_pinch_v1_events","","",null,null],[7,"zwp_pointer_gesture_pinch_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",222,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",222,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",222,null],[11,"into_raw","","",222,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",222,null],[11,"as_raw_c_in","","",222,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",235,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",235,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",235,null],[11,"into_raw","","",235,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",235,null],[11,"as_raw_c_in","","",235,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",236,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",224,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",224,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",224,null],[11,"into_raw","","",224,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",224,null],[11,"as_raw_c_in","","",224,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",225,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",225,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",225,null],[11,"into_raw","","",225,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",225,null],[11,"as_raw_c_in","","",225,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",237,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",227,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",227,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",227,null],[11,"into_raw","","",227,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",227,null],[11,"as_raw_c_in","","",227,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",228,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",228,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",228,null],[11,"into_raw","","",228,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",228,null],[11,"as_raw_c_in","","",228,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",238,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",230,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",230,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",230,null],[11,"into_raw","","",230,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",230,null],[11,"as_raw_c_in","","",230,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",239,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",239,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",239,null],[11,"into_raw","","",239,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",239,null],[11,"as_raw_c_in","","",239,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",240,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",231,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",231,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",231,null],[11,"into_raw","","",231,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",231,null],[11,"as_raw_c_in","","",231,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",232,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",232,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",232,null],[11,"into_raw","","",232,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",232,null],[11,"as_raw_c_in","","",232,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",241,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",233,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",233,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",233,null],[11,"into_raw","","",233,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",233,null],[11,"as_raw_c_in","","",233,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",234,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",234,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",234,null],[11,"into_raw","","",234,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",234,null],[11,"as_raw_c_in","","",234,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",242,null],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",null,null],[0,"v1","wayland_protocols::unstable::relative_pointer","",null,null],[0,"client","wayland_protocols::unstable::relative_pointer::v1","Client-side API of this protocol",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::client","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the relative pointer manager object",243,null],[13,"GetRelativePointer","","get a relative pointer object",243,null],[12,"id","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request","",243,null],[12,"pointer","","",243,null],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the relative pointer manager object",244,null],[10,"get_relative_pointer","","get a relative pointer object",244,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::client","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the relative pointer object",245,null],[4,"Event","","",null,null],[13,"RelativeMotion","","relative pointer motion",246,null],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event","",246,null],[12,"utime_lo","","",246,null],[12,"dx","","",246,null],[12,"dy","","",246,null],[12,"dx_unaccel","","",246,null],[12,"dy_unaccel","","",246,null],[8,"RequestsTrait","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",null,null],[10,"destroy","","release the relative pointer object",247,null],[0,"server","wayland_protocols::unstable::relative_pointer::v1","Server-side API of this protocol",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::server","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the relative pointer manager object",248,null],[13,"GetRelativePointer","","get a relative pointer object",248,null],[12,"id","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1::Request","",248,null],[12,"pointer","","",248,null],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",null,null],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::server","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the relative pointer object",249,null],[4,"Event","","",null,null],[13,"RelativeMotion","","relative pointer motion",250,null],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1::Event","",250,null],[12,"utime_lo","","",250,null],[12,"dx","","",250,null],[12,"dy","","",250,null],[12,"dx_unaccel","","",250,null],[12,"dy_unaccel","","",250,null],[0,"c_interfaces","wayland_protocols::unstable::relative_pointer::v1","C interfaces for this protocol",null,null],[7,"wl_pointer_interface","wayland_protocols::unstable::relative_pointer::v1::c_interfaces","",null,null],[7,"zwp_relative_pointer_manager_v1_requests","","",null,null],[7,"zwp_relative_pointer_manager_v1_interface","","",null,null],[7,"zwp_relative_pointer_v1_requests","","",null,null],[7,"zwp_relative_pointer_v1_events","","",null,null],[7,"zwp_relative_pointer_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",243,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",243,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",243,null],[11,"into_raw","","",243,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",243,null],[11,"as_raw_c_in","","",243,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",251,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",251,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",251,null],[11,"into_raw","","",251,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",251,null],[11,"as_raw_c_in","","",251,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",252,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",245,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",245,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",245,null],[11,"into_raw","","",245,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",245,null],[11,"as_raw_c_in","","",245,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",246,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",246,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",246,null],[11,"into_raw","","",246,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",246,null],[11,"as_raw_c_in","","",246,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",253,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",248,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",248,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",248,null],[11,"into_raw","","",248,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",248,null],[11,"as_raw_c_in","","",248,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",254,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",254,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",254,null],[11,"into_raw","","",254,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",254,null],[11,"as_raw_c_in","","",254,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",255,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",249,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",249,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",249,null],[11,"into_raw","","",249,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",249,null],[11,"as_raw_c_in","","",249,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",250,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",250,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",250,null],[11,"into_raw","","",250,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",250,null],[11,"as_raw_c_in","","",250,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",256,null],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",null,null],[0,"v1","wayland_protocols::unstable::tablet","",null,null],[0,"client","wayland_protocols::unstable::tablet::v1","Client-side API of this protocol",null,null],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",257,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request","",257,null],[12,"seat","","",257,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","release the memory for the tablet manager object",257,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_tablet_seat","","get the tablet seat",258,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"destroy","","release the memory for the tablet manager object",258,null],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",259,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",260,null],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",260,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","a new tool has been used with a tablet",260,null],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",260,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",null,null],[10,"destroy","","release the memory for the tablet seat object",261,null],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",262,null],[13,"Eraser","","Eraser",262,null],[13,"Brush","","Brush",262,null],[13,"Pencil","","Pencil",262,null],[13,"Airbrush","","Airbrush",262,null],[13,"Finger","","Finger",262,null],[13,"Mouse","","Mouse",262,null],[13,"Lens","","Lens",262,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",263,null],[13,"Pressure","","Pressure axis",263,null],[13,"Distance","","Distance axis",263,null],[13,"Rotation","","Z-rotation axis",263,null],[13,"Slider","","Slider axis",263,null],[13,"Wheel","","Wheel axis",263,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",264,null],[13,"Pressed","","button is pressed",264,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",265,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",266,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request","",266,null],[12,"surface","","",266,null],[12,"hotspot_x","","",266,null],[12,"hotspot_y","","",266,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","destroy the tool object",266,null],[4,"Event","","",null,null],[13,"Type","","tool type",267,null],[12,"tool_type","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","unique hardware serial number of the tool",267,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[12,"hardware_serial_lo","","",267,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","hardware id notification in Wacom's format",267,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[12,"hardware_id_lo","","",267,null],[13,"Capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool capability notification",267,null],[12,"capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool description events sequence complete",267,null],[13,"Removed","","tool removed",267,null],[13,"ProximityIn","","proximity in event",267,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[12,"tablet","","",267,null],[12,"surface","","",267,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","proximity out event",267,null],[13,"Down","","tablet tool is making contact",267,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[13,"Up","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tablet tool is no longer making contact",267,null],[13,"Motion","","motion event",267,null],[12,"x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[12,"y","","",267,null],[13,"Pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","pressure change event",267,null],[12,"pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[13,"Distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","distance change event",267,null],[12,"distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[13,"Tilt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tilt change event",267,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[12,"tilt_y","","",267,null],[13,"Rotation","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","z-rotation change event",267,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[13,"Slider","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Slider position change event",267,null],[12,"position","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[13,"Wheel","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Wheel delta event",267,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[12,"clicks","","",267,null],[13,"Button","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","button event",267,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[12,"button","","",267,null],[12,"state","","",267,null],[13,"Frame","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","frame event",267,null],[12,"time","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",267,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",null,null],[10,"set_cursor","","set the tablet tool's surface",268,null],[10,"destroy","","destroy the tool object",268,null],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::client","graphics tablet device",null,null],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",269,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",270,null],[12,"name","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",270,null],[13,"Id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device USB vendor/product id",270,null],[12,"vid","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",270,null],[12,"pid","","",270,null],[13,"Path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","path to the device",270,null],[12,"path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",270,null],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet description events sequence complete",270,null],[13,"Removed","","tablet removed event",270,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the tablet object",271,null],[0,"server","wayland_protocols::unstable::tablet::v1","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",272,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1::Request","",272,null],[12,"seat","","",272,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","release the memory for the tablet manager object",272,null],[4,"Event","","",null,null],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",273,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",274,null],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",274,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","a new tool has been used with a tablet",274,null],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",274,null],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",275,null],[13,"Eraser","","Eraser",275,null],[13,"Brush","","Brush",275,null],[13,"Pencil","","Pencil",275,null],[13,"Airbrush","","Airbrush",275,null],[13,"Finger","","Finger",275,null],[13,"Mouse","","Mouse",275,null],[13,"Lens","","Lens",275,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",276,null],[13,"Pressure","","Pressure axis",276,null],[13,"Distance","","Distance axis",276,null],[13,"Rotation","","Z-rotation axis",276,null],[13,"Slider","","Slider axis",276,null],[13,"Wheel","","Wheel axis",276,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",277,null],[13,"Pressed","","button is pressed",277,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",278,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",279,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Request","",279,null],[12,"surface","","",279,null],[12,"hotspot_x","","",279,null],[12,"hotspot_y","","",279,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","destroy the tool object",279,null],[4,"Event","","",null,null],[13,"Type","","tool type",280,null],[12,"tool_type","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","unique hardware serial number of the tool",280,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[12,"hardware_serial_lo","","",280,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","hardware id notification in Wacom's format",280,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[12,"hardware_id_lo","","",280,null],[13,"Capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool capability notification",280,null],[12,"capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool description events sequence complete",280,null],[13,"Removed","","tool removed",280,null],[13,"ProximityIn","","proximity in event",280,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[12,"tablet","","",280,null],[12,"surface","","",280,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","proximity out event",280,null],[13,"Down","","tablet tool is making contact",280,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[13,"Up","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tablet tool is no longer making contact",280,null],[13,"Motion","","motion event",280,null],[12,"x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[12,"y","","",280,null],[13,"Pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","pressure change event",280,null],[12,"pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[13,"Distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","distance change event",280,null],[12,"distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[13,"Tilt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tilt change event",280,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[12,"tilt_y","","",280,null],[13,"Rotation","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","z-rotation change event",280,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[13,"Slider","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Slider position change event",280,null],[12,"position","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[13,"Wheel","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Wheel delta event",280,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[12,"clicks","","",280,null],[13,"Button","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","button event",280,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[12,"button","","",280,null],[12,"state","","",280,null],[13,"Frame","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","frame event",280,null],[12,"time","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",280,null],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::server","graphics tablet device",null,null],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",281,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",282,null],[12,"name","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",282,null],[13,"Id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet device USB vendor/product id",282,null],[12,"vid","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",282,null],[12,"pid","","",282,null],[13,"Path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","path to the device",282,null],[12,"path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",282,null],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet description events sequence complete",282,null],[13,"Removed","","tablet removed event",282,null],[0,"c_interfaces","wayland_protocols::unstable::tablet::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_tablet_manager_v1_requests","","",null,null],[7,"zwp_tablet_manager_v1_interface","","",null,null],[7,"zwp_tablet_seat_v1_requests","","",null,null],[7,"zwp_tablet_seat_v1_events","","",null,null],[7,"zwp_tablet_seat_v1_interface","","",null,null],[7,"zwp_tablet_tool_v1_requests","","",null,null],[7,"zwp_tablet_tool_v1_events","","",null,null],[7,"zwp_tablet_tool_v1_interface","","",null,null],[7,"zwp_tablet_v1_requests","","",null,null],[7,"zwp_tablet_v1_events","","",null,null],[7,"zwp_tablet_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",257,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",257,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",257,null],[11,"into_raw","","",257,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",257,null],[11,"as_raw_c_in","","",257,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",283,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",283,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",283,null],[11,"into_raw","","",283,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",283,null],[11,"as_raw_c_in","","",283,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",284,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",259,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",259,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",259,null],[11,"into_raw","","",259,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",259,null],[11,"as_raw_c_in","","",259,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",260,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",260,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",260,null],[11,"into_raw","","",260,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",260,null],[11,"as_raw_c_in","","",260,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",285,null],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",262,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",262,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",262,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",262,{"inputs":[{"name":"u32"}],"output":{"generics":["type"],"name":"option"}}],[11,"to_raw","","",262,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",263,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",263,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",263,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",263,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",263,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",264,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",264,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",264,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",264,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",264,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",265,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",265,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",265,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",265,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",265,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",266,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",266,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",266,null],[11,"into_raw","","",266,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",266,null],[11,"as_raw_c_in","","",266,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",267,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",267,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",267,null],[11,"into_raw","","",267,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",267,null],[11,"as_raw_c_in","","",267,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",286,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",269,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",269,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",269,null],[11,"into_raw","","",269,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",269,null],[11,"as_raw_c_in","","",269,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",270,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",270,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",270,null],[11,"into_raw","","",270,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",270,null],[11,"as_raw_c_in","","",270,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",287,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",272,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",272,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",272,null],[11,"into_raw","","",272,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",272,null],[11,"as_raw_c_in","","",272,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",288,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",288,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",288,null],[11,"into_raw","","",288,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",288,null],[11,"as_raw_c_in","","",288,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",289,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",273,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",273,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",273,null],[11,"into_raw","","",273,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",273,null],[11,"as_raw_c_in","","",273,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",274,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",274,null],[11,"into_raw","","",274,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",274,null],[11,"as_raw_c_in","","",274,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",290,null],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",275,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",275,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",275,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",275,{"inputs":[{"name":"u32"}],"output":{"generics":["type"],"name":"option"}}],[11,"to_raw","","",275,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",276,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",276,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",276,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",276,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",276,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",277,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",277,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",277,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",277,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",278,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",278,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",278,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",278,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",279,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",279,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",279,null],[11,"into_raw","","",279,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",279,null],[11,"as_raw_c_in","","",279,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",280,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",280,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",280,null],[11,"into_raw","","",280,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",280,null],[11,"as_raw_c_in","","",280,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",291,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",281,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",281,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",281,null],[11,"into_raw","","",281,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",281,null],[11,"as_raw_c_in","","",281,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",282,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",282,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",282,null],[11,"into_raw","","",282,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",282,null],[11,"as_raw_c_in","","",282,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",292,null],[0,"v2","wayland_protocols::unstable::tablet","",null,null],[0,"client","wayland_protocols::unstable::tablet::v2","Client-side API of this protocol",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",293,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request","",293,null],[12,"seat","","",293,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","release the memory for the tablet manager object",293,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_tablet_seat","","get the tablet seat",294,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"destroy","","release the memory for the tablet manager object",294,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",295,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",296,null],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",296,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","a new tool has been used with a tablet",296,null],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",296,null],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new pad notification",296,null],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",296,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",null,null],[10,"destroy","","release the memory for the tablet seat object",297,null],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",298,null],[13,"Eraser","","Eraser",298,null],[13,"Brush","","Brush",298,null],[13,"Pencil","","Pencil",298,null],[13,"Airbrush","","Airbrush",298,null],[13,"Finger","","Finger",298,null],[13,"Mouse","","Mouse",298,null],[13,"Lens","","Lens",298,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",299,null],[13,"Pressure","","Pressure axis",299,null],[13,"Distance","","Distance axis",299,null],[13,"Rotation","","Z-rotation axis",299,null],[13,"Slider","","Slider axis",299,null],[13,"Wheel","","Wheel axis",299,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",300,null],[13,"Pressed","","button is pressed",300,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",301,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",302,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request","",302,null],[12,"surface","","",302,null],[12,"hotspot_x","","",302,null],[12,"hotspot_y","","",302,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","destroy the tool object",302,null],[4,"Event","","",null,null],[13,"Type","","tool type",303,null],[12,"tool_type","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","unique hardware serial number of the tool",303,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[12,"hardware_serial_lo","","",303,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","hardware id notification in Wacom's format",303,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[12,"hardware_id_lo","","",303,null],[13,"Capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool capability notification",303,null],[12,"capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool description events sequence complete",303,null],[13,"Removed","","tool removed",303,null],[13,"ProximityIn","","proximity in event",303,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[12,"tablet","","",303,null],[12,"surface","","",303,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","proximity out event",303,null],[13,"Down","","tablet tool is making contact",303,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[13,"Up","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tablet tool is no longer making contact",303,null],[13,"Motion","","motion event",303,null],[12,"x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[12,"y","","",303,null],[13,"Pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","pressure change event",303,null],[12,"pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[13,"Distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","distance change event",303,null],[12,"distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[13,"Tilt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tilt change event",303,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[12,"tilt_y","","",303,null],[13,"Rotation","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","z-rotation change event",303,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[13,"Slider","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Slider position change event",303,null],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[13,"Wheel","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Wheel delta event",303,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[12,"clicks","","",303,null],[13,"Button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","button event",303,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[12,"button","","",303,null],[12,"state","","",303,null],[13,"Frame","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","frame event",303,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",303,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",null,null],[10,"set_cursor","","set the tablet tool's surface",304,null],[10,"destroy","","destroy the tool object",304,null],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::client","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",305,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",306,null],[12,"name","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",306,null],[13,"Id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device USB vendor/product id",306,null],[12,"vid","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",306,null],[12,"pid","","",306,null],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","path to the device",306,null],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",306,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet description events sequence complete",306,null],[13,"Removed","","tablet removed event",306,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the tablet object",307,null],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::client","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","finger",308,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",309,null],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request","",309,null],[12,"serial","","",309,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","destroy the ring object",309,null],[4,"Event","","",null,null],[13,"Source","","ring event source",310,null],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",310,null],[13,"Angle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","angle changed",310,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",310,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","interaction stopped",310,null],[13,"Frame","","end of a ring event sequence",310,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",310,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",null,null],[10,"set_feedback","","set compositor feedback",311,null],[10,"destroy","","destroy the ring object",311,null],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::client","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","finger",312,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",313,null],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request","",313,null],[12,"serial","","",313,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","destroy the strip object",313,null],[4,"Event","","",null,null],[13,"Source","","strip event source",314,null],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",314,null],[13,"Position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","position changed",314,null],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",314,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","interaction stopped",314,null],[13,"Frame","","end of a strip event sequence",314,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",314,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",null,null],[10,"set_feedback","","set compositor feedback",315,null],[10,"destroy","","destroy the strip object",315,null],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pad object",316,null],[4,"Event","","",null,null],[13,"Buttons","","buttons announced",317,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",317,null],[13,"Ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","ring announced",317,null],[12,"ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",317,null],[13,"Strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","strip announced",317,null],[12,"strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",317,null],[13,"Modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","mode-switch ability announced",317,null],[12,"modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",317,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","tablet group description events sequence complete",317,null],[13,"ModeSwitch","","mode switch event",317,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",317,null],[12,"serial","","",317,null],[12,"mode","","",317,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",null,null],[10,"destroy","","destroy the pad object",318,null],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",319,null],[13,"Pressed","","the button is pressed",319,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",320,null],[12,"button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request","",320,null],[12,"description","","",320,null],[12,"serial","","",320,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","destroy the pad object",320,null],[4,"Event","","",null,null],[13,"Group","","group announced",321,null],[12,"pad_group","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",321,null],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","path to the device",321,null],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",321,null],[13,"Buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","buttons announced",321,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",321,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad description event sequence complete",321,null],[13,"Button","","physical button state",321,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",321,null],[12,"button","","",321,null],[12,"state","","",321,null],[13,"Enter","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",321,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",321,null],[12,"tablet","","",321,null],[12,"surface","","",321,null],[13,"Leave","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",321,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",321,null],[12,"surface","","",321,null],[13,"Removed","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad removed event",321,null],[8,"RequestsTrait","","",null,null],[10,"set_feedback","","set compositor feedback",322,null],[10,"destroy","","destroy the pad object",322,null],[0,"server","wayland_protocols::unstable::tablet::v2","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",323,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2::Request","",323,null],[12,"seat","","",323,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","release the memory for the tablet manager object",323,null],[4,"Event","","",null,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",324,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",325,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",325,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","a new tool has been used with a tablet",325,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",325,null],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","new pad notification",325,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",325,null],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",326,null],[13,"Eraser","","Eraser",326,null],[13,"Brush","","Brush",326,null],[13,"Pencil","","Pencil",326,null],[13,"Airbrush","","Airbrush",326,null],[13,"Finger","","Finger",326,null],[13,"Mouse","","Mouse",326,null],[13,"Lens","","Lens",326,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",327,null],[13,"Pressure","","Pressure axis",327,null],[13,"Distance","","Distance axis",327,null],[13,"Rotation","","Z-rotation axis",327,null],[13,"Slider","","Slider axis",327,null],[13,"Wheel","","Wheel axis",327,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",328,null],[13,"Pressed","","button is pressed",328,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",329,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",330,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Request","",330,null],[12,"surface","","",330,null],[12,"hotspot_x","","",330,null],[12,"hotspot_y","","",330,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","destroy the tool object",330,null],[4,"Event","","",null,null],[13,"Type","","tool type",331,null],[12,"tool_type","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","unique hardware serial number of the tool",331,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[12,"hardware_serial_lo","","",331,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","hardware id notification in Wacom's format",331,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[12,"hardware_id_lo","","",331,null],[13,"Capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool capability notification",331,null],[12,"capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool description events sequence complete",331,null],[13,"Removed","","tool removed",331,null],[13,"ProximityIn","","proximity in event",331,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[12,"tablet","","",331,null],[12,"surface","","",331,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","proximity out event",331,null],[13,"Down","","tablet tool is making contact",331,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[13,"Up","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tablet tool is no longer making contact",331,null],[13,"Motion","","motion event",331,null],[12,"x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[12,"y","","",331,null],[13,"Pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","pressure change event",331,null],[12,"pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[13,"Distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","distance change event",331,null],[12,"distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[13,"Tilt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tilt change event",331,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[12,"tilt_y","","",331,null],[13,"Rotation","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","z-rotation change event",331,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[13,"Slider","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Slider position change event",331,null],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[13,"Wheel","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Wheel delta event",331,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[12,"clicks","","",331,null],[13,"Button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","button event",331,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[12,"button","","",331,null],[12,"state","","",331,null],[13,"Frame","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","frame event",331,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",331,null],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::server","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",332,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",333,null],[12,"name","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",333,null],[13,"Id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet device USB vendor/product id",333,null],[12,"vid","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",333,null],[12,"pid","","",333,null],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","path to the device",333,null],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",333,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet description events sequence complete",333,null],[13,"Removed","","tablet removed event",333,null],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::server","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","finger",334,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",335,null],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Request","",335,null],[12,"serial","","",335,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","destroy the ring object",335,null],[4,"Event","","",null,null],[13,"Source","","ring event source",336,null],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",336,null],[13,"Angle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","angle changed",336,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",336,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","interaction stopped",336,null],[13,"Frame","","end of a ring event sequence",336,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",336,null],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::server","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","finger",337,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",338,null],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Request","",338,null],[12,"serial","","",338,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","destroy the strip object",338,null],[4,"Event","","",null,null],[13,"Source","","strip event source",339,null],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",339,null],[13,"Position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","position changed",339,null],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",339,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","interaction stopped",339,null],[13,"Frame","","end of a strip event sequence",339,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",339,null],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pad object",340,null],[4,"Event","","",null,null],[13,"Buttons","","buttons announced",341,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",341,null],[13,"Ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","ring announced",341,null],[12,"ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",341,null],[13,"Strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","strip announced",341,null],[12,"strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",341,null],[13,"Modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","mode-switch ability announced",341,null],[12,"modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",341,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","tablet group description events sequence complete",341,null],[13,"ModeSwitch","","mode switch event",341,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",341,null],[12,"serial","","",341,null],[12,"mode","","",341,null],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",342,null],[13,"Pressed","","the button is pressed",342,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",343,null],[12,"button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Request","",343,null],[12,"description","","",343,null],[12,"serial","","",343,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","destroy the pad object",343,null],[4,"Event","","",null,null],[13,"Group","","group announced",344,null],[12,"pad_group","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",344,null],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","path to the device",344,null],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",344,null],[13,"Buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","buttons announced",344,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",344,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad description event sequence complete",344,null],[13,"Button","","physical button state",344,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",344,null],[12,"button","","",344,null],[12,"state","","",344,null],[13,"Enter","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",344,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",344,null],[12,"tablet","","",344,null],[12,"surface","","",344,null],[13,"Leave","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",344,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",344,null],[12,"surface","","",344,null],[13,"Removed","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad removed event",344,null],[0,"c_interfaces","wayland_protocols::unstable::tablet::v2","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v2::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_tablet_manager_v2_requests","","",null,null],[7,"zwp_tablet_manager_v2_interface","","",null,null],[7,"zwp_tablet_seat_v2_requests","","",null,null],[7,"zwp_tablet_seat_v2_events","","",null,null],[7,"zwp_tablet_seat_v2_interface","","",null,null],[7,"zwp_tablet_tool_v2_requests","","",null,null],[7,"zwp_tablet_tool_v2_events","","",null,null],[7,"zwp_tablet_tool_v2_interface","","",null,null],[7,"zwp_tablet_v2_requests","","",null,null],[7,"zwp_tablet_v2_events","","",null,null],[7,"zwp_tablet_v2_interface","","",null,null],[7,"zwp_tablet_pad_ring_v2_requests","","",null,null],[7,"zwp_tablet_pad_ring_v2_events","","",null,null],[7,"zwp_tablet_pad_ring_v2_interface","","",null,null],[7,"zwp_tablet_pad_strip_v2_requests","","",null,null],[7,"zwp_tablet_pad_strip_v2_events","","",null,null],[7,"zwp_tablet_pad_strip_v2_interface","","",null,null],[7,"zwp_tablet_pad_group_v2_requests","","",null,null],[7,"zwp_tablet_pad_group_v2_events","","",null,null],[7,"zwp_tablet_pad_group_v2_interface","","",null,null],[7,"zwp_tablet_pad_v2_requests","","",null,null],[7,"zwp_tablet_pad_v2_events","","",null,null],[7,"zwp_tablet_pad_v2_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",293,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",293,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",293,null],[11,"into_raw","","",293,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",293,null],[11,"as_raw_c_in","","",293,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",345,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",345,null],[11,"into_raw","","",345,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",345,null],[11,"as_raw_c_in","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",346,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",295,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",295,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",295,null],[11,"into_raw","","",295,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",295,null],[11,"as_raw_c_in","","",295,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",296,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",296,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",296,null],[11,"into_raw","","",296,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",296,null],[11,"as_raw_c_in","","",296,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",347,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",298,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",298,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",298,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",298,{"inputs":[{"name":"u32"}],"output":{"generics":["type"],"name":"option"}}],[11,"to_raw","","",298,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",299,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",299,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",299,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",299,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",299,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",300,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",300,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",300,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",300,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",300,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",301,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",301,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",301,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",301,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",301,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",302,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",302,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",302,null],[11,"into_raw","","",302,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",302,null],[11,"as_raw_c_in","","",302,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",303,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",303,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",303,null],[11,"into_raw","","",303,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",303,null],[11,"as_raw_c_in","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",348,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",305,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",305,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",305,null],[11,"into_raw","","",305,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",305,null],[11,"as_raw_c_in","","",305,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",306,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",306,null],[11,"into_raw","","",306,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",306,null],[11,"as_raw_c_in","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",349,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",308,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",308,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",308,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",308,{"inputs":[{"name":"u32"}],"output":{"generics":["source"],"name":"option"}}],[11,"to_raw","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",309,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",309,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",309,null],[11,"into_raw","","",309,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",309,null],[11,"as_raw_c_in","","",309,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",310,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",310,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",310,null],[11,"into_raw","","",310,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",310,null],[11,"as_raw_c_in","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",350,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",312,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",312,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",312,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",312,{"inputs":[{"name":"u32"}],"output":{"generics":["source"],"name":"option"}}],[11,"to_raw","","",312,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",313,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",313,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",313,null],[11,"into_raw","","",313,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",313,null],[11,"as_raw_c_in","","",313,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",314,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",314,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",314,null],[11,"into_raw","","",314,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",314,null],[11,"as_raw_c_in","","",314,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",351,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",316,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",316,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",316,null],[11,"into_raw","","",316,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",316,null],[11,"as_raw_c_in","","",316,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",317,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",317,null],[11,"into_raw","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",317,null],[11,"as_raw_c_in","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",352,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",319,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",319,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",319,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",319,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",319,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",320,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",320,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",320,null],[11,"into_raw","","",320,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",320,null],[11,"as_raw_c_in","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",321,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",321,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",321,null],[11,"into_raw","","",321,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",321,null],[11,"as_raw_c_in","","",321,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",353,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",323,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",323,null],[11,"into_raw","","",323,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",323,null],[11,"as_raw_c_in","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",354,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",354,null],[11,"into_raw","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",354,null],[11,"as_raw_c_in","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",355,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",324,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",324,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",324,null],[11,"into_raw","","",324,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",324,null],[11,"as_raw_c_in","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",325,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",325,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",325,null],[11,"into_raw","","",325,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",325,null],[11,"as_raw_c_in","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",356,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",326,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",326,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",326,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",326,{"inputs":[{"name":"u32"}],"output":{"generics":["type"],"name":"option"}}],[11,"to_raw","","",326,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",327,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",327,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",327,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",327,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",327,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",328,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",328,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",328,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",328,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",329,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",329,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",329,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",329,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",330,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",330,null],[11,"into_raw","","",330,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",330,null],[11,"as_raw_c_in","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",331,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",331,null],[11,"into_raw","","",331,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",331,null],[11,"as_raw_c_in","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",357,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",332,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",332,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",332,null],[11,"into_raw","","",332,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",332,null],[11,"as_raw_c_in","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",333,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",333,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",333,null],[11,"into_raw","","",333,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",333,null],[11,"as_raw_c_in","","",333,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",358,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",334,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",334,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",334,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",334,{"inputs":[{"name":"u32"}],"output":{"generics":["source"],"name":"option"}}],[11,"to_raw","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",335,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",335,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",335,null],[11,"into_raw","","",335,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",335,null],[11,"as_raw_c_in","","",335,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",336,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",336,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",336,null],[11,"into_raw","","",336,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",336,null],[11,"as_raw_c_in","","",336,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",359,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",337,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",337,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",337,{"inputs":[{"name":"u32"}],"output":{"generics":["source"],"name":"option"}}],[11,"to_raw","","",337,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",338,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",338,null],[11,"into_raw","","",338,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",338,null],[11,"as_raw_c_in","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",339,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",339,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",339,null],[11,"into_raw","","",339,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",339,null],[11,"as_raw_c_in","","",339,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",360,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",340,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",340,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",340,null],[11,"into_raw","","",340,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",340,null],[11,"as_raw_c_in","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",341,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",341,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",341,null],[11,"into_raw","","",341,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",341,null],[11,"as_raw_c_in","","",341,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",361,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",342,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",342,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",342,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",342,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",342,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",343,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",343,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",343,null],[11,"into_raw","","",343,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",343,null],[11,"as_raw_c_in","","",343,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",344,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",344,null],[11,"into_raw","","",344,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",344,null],[11,"as_raw_c_in","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",362,null],[0,"text_input","wayland_protocols::unstable","Text input protocol",null,null],[0,"v1","wayland_protocols::unstable::text_input","",null,null],[0,"client","wayland_protocols::unstable::text_input::v1","Client-side API of this protocol",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::client","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","no special behaviour",363,null],[13,"Default","","auto completion, correction and capitalization",363,null],[13,"Password","","hidden and sensitive text",363,null],[13,"AutoCompletion","","suggest word completions",363,null],[13,"AutoCorrection","","suggest word corrections",363,null],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",363,null],[13,"Lowercase","","prefer lowercase letters",363,null],[13,"Uppercase","","prefer uppercase letters",363,null],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",363,null],[13,"HiddenText","","characters should be hidden",363,null],[13,"SensitiveData","","typed text should not be stored",363,null],[13,"Latin","","just latin characters should be entered",363,null],[13,"Multiline","","the text input is multiline",363,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",364,null],[13,"Alpha","","allow only alphabetic characters",364,null],[13,"Digits","","allow only digits",364,null],[13,"Number","","input a number (including decimal separator and sign)",364,null],[13,"Phone","","input a phone number",364,null],[13,"Url","","input an URL",364,null],[13,"Email","","input an email address",364,null],[13,"Name","","input a name of a person",364,null],[13,"Password","","input a password (combine with password or sensitive_data hint)",364,null],[13,"Date","","input a date",364,null],[13,"Time","","input a time",364,null],[13,"Datetime","","input a date and time",364,null],[13,"Terminal","","input for a terminal",364,null],[4,"PreeditStyle","","",null,null],[13,"Default","","default style for composing text",365,null],[13,"None","","style should be the same as in non-composing text",365,null],[13,"Active","","",365,null],[13,"Inactive","","",365,null],[13,"Highlight","","",365,null],[13,"Underline","","",365,null],[13,"Selection","","",365,null],[13,"Incorrect","","",365,null],[4,"TextDirection","","",null,null],[13,"Auto","","automatic text direction based on text and language",366,null],[13,"Ltr","","left-to-right",366,null],[13,"Rtl","","right-to-left",366,null],[4,"Request","","",null,null],[13,"Activate","","request activation",367,null],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[12,"surface","","",367,null],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","request deactivation",367,null],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","show input panels",367,null],[13,"HideInputPanel","","hide input panels",367,null],[13,"Reset","","reset",367,null],[13,"SetSurroundingText","","sets the surrounding text",367,null],[12,"text","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[12,"cursor","","",367,null],[12,"anchor","","",367,null],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set content purpose and hint",367,null],[12,"hint","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[12,"purpose","","",367,null],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",367,null],[12,"x","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[12,"y","","",367,null],[12,"width","","",367,null],[12,"height","","",367,null],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","sets preferred language",367,null],[12,"language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[13,"CommitState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",367,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",367,null],[12,"button","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",367,null],[12,"index","","",367,null],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",null,null],[13,"Enter","","enter event",368,null],[12,"surface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[13,"Leave","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","leave event",368,null],[13,"ModifiersMap","","modifiers map",368,null],[12,"map","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","state of the input panel",368,null],[12,"state","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit",368,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"text","","",368,null],[12,"commit","","",368,null],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit styling",368,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"length","","",368,null],[12,"style","","",368,null],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit cursor",368,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[13,"CommitString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","commit",368,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"text","","",368,null],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set cursor to new position",368,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"anchor","","",368,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","delete surrounding text",368,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"length","","",368,null],[13,"Keysym","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","keysym",368,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"time","","",368,null],[12,"sym","","",368,null],[12,"state","","",368,null],[12,"modifiers","","",368,null],[13,"Language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","language",368,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"language","","",368,null],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","text direction",368,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",368,null],[12,"direction","","",368,null],[8,"RequestsTrait","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",null,null],[10,"activate","","request activation",369,null],[10,"deactivate","","request deactivation",369,null],[10,"show_input_panel","","show input panels",369,null],[10,"hide_input_panel","","hide input panels",369,null],[10,"reset","","reset",369,null],[10,"set_surrounding_text","","sets the surrounding text",369,null],[10,"set_content_type","","set content purpose and hint",369,null],[10,"set_cursor_rectangle","","",369,null],[10,"set_preferred_language","","sets preferred language",369,null],[10,"commit_state","","",369,null],[10,"invoke_action","","",369,null],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::client","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CreateTextInput","","create text input",370,null],[12,"id","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1::Request","",370,null],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_text_input","","create text input",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"server","wayland_protocols::unstable::text_input::v1","Server-side API of this protocol",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::server","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","no special behaviour",372,null],[13,"Default","","auto completion, correction and capitalization",372,null],[13,"Password","","hidden and sensitive text",372,null],[13,"AutoCompletion","","suggest word completions",372,null],[13,"AutoCorrection","","suggest word corrections",372,null],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",372,null],[13,"Lowercase","","prefer lowercase letters",372,null],[13,"Uppercase","","prefer uppercase letters",372,null],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",372,null],[13,"HiddenText","","characters should be hidden",372,null],[13,"SensitiveData","","typed text should not be stored",372,null],[13,"Latin","","just latin characters should be entered",372,null],[13,"Multiline","","the text input is multiline",372,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",373,null],[13,"Alpha","","allow only alphabetic characters",373,null],[13,"Digits","","allow only digits",373,null],[13,"Number","","input a number (including decimal separator and sign)",373,null],[13,"Phone","","input a phone number",373,null],[13,"Url","","input an URL",373,null],[13,"Email","","input an email address",373,null],[13,"Name","","input a name of a person",373,null],[13,"Password","","input a password (combine with password or sensitive_data hint)",373,null],[13,"Date","","input a date",373,null],[13,"Time","","input a time",373,null],[13,"Datetime","","input a date and time",373,null],[13,"Terminal","","input for a terminal",373,null],[4,"PreeditStyle","","",null,null],[13,"Default","","default style for composing text",374,null],[13,"None","","style should be the same as in non-composing text",374,null],[13,"Active","","",374,null],[13,"Inactive","","",374,null],[13,"Highlight","","",374,null],[13,"Underline","","",374,null],[13,"Selection","","",374,null],[13,"Incorrect","","",374,null],[4,"TextDirection","","",null,null],[13,"Auto","","automatic text direction based on text and language",375,null],[13,"Ltr","","left-to-right",375,null],[13,"Rtl","","right-to-left",375,null],[4,"Request","","",null,null],[13,"Activate","","request activation",376,null],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[12,"surface","","",376,null],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","request deactivation",376,null],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","show input panels",376,null],[13,"HideInputPanel","","hide input panels",376,null],[13,"Reset","","reset",376,null],[13,"SetSurroundingText","","sets the surrounding text",376,null],[12,"text","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[12,"cursor","","",376,null],[12,"anchor","","",376,null],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set content purpose and hint",376,null],[12,"hint","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[12,"purpose","","",376,null],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",376,null],[12,"x","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[12,"y","","",376,null],[12,"width","","",376,null],[12,"height","","",376,null],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","sets preferred language",376,null],[12,"language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[13,"CommitState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",376,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",376,null],[12,"button","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",376,null],[12,"index","","",376,null],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",null,null],[13,"Enter","","enter event",377,null],[12,"surface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[13,"Leave","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","leave event",377,null],[13,"ModifiersMap","","modifiers map",377,null],[12,"map","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","state of the input panel",377,null],[12,"state","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit",377,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"text","","",377,null],[12,"commit","","",377,null],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit styling",377,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"length","","",377,null],[12,"style","","",377,null],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit cursor",377,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[13,"CommitString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","commit",377,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"text","","",377,null],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set cursor to new position",377,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"anchor","","",377,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","delete surrounding text",377,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"length","","",377,null],[13,"Keysym","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","keysym",377,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"time","","",377,null],[12,"sym","","",377,null],[12,"state","","",377,null],[12,"modifiers","","",377,null],[13,"Language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","language",377,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"language","","",377,null],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","text direction",377,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",377,null],[12,"direction","","",377,null],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::server","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CreateTextInput","","create text input",378,null],[12,"id","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1::Request","",378,null],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",null,null],[0,"c_interfaces","wayland_protocols::unstable::text_input::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::text_input::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_text_input_v1_requests","","",null,null],[7,"zwp_text_input_v1_events","","",null,null],[7,"zwp_text_input_v1_interface","","",null,null],[7,"zwp_text_input_manager_v1_requests","","",null,null],[7,"zwp_text_input_manager_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",363,{"inputs":[{"name":"self"}],"output":{"name":"contenthint"}}],[11,"fmt","","",363,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",363,{"inputs":[{"name":"self"},{"name":"contenthint"}],"output":{"name":"bool"}}],[11,"from_raw","","",363,{"inputs":[{"name":"u32"}],"output":{"generics":["contenthint"],"name":"option"}}],[11,"to_raw","","",363,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",364,{"inputs":[{"name":"self"}],"output":{"name":"contentpurpose"}}],[11,"fmt","","",364,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",364,{"inputs":[{"name":"self"},{"name":"contentpurpose"}],"output":{"name":"bool"}}],[11,"from_raw","","",364,{"inputs":[{"name":"u32"}],"output":{"generics":["contentpurpose"],"name":"option"}}],[11,"to_raw","","",364,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",365,{"inputs":[{"name":"self"}],"output":{"name":"preeditstyle"}}],[11,"fmt","","",365,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",365,{"inputs":[{"name":"self"},{"name":"preeditstyle"}],"output":{"name":"bool"}}],[11,"from_raw","","",365,{"inputs":[{"name":"u32"}],"output":{"generics":["preeditstyle"],"name":"option"}}],[11,"to_raw","","",365,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",366,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",366,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",366,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"from_raw","","",366,{"inputs":[{"name":"u32"}],"output":{"generics":["textdirection"],"name":"option"}}],[11,"to_raw","","",366,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",367,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",367,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",367,null],[11,"into_raw","","",367,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",367,null],[11,"as_raw_c_in","","",367,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",368,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",368,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",368,null],[11,"into_raw","","",368,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",368,null],[11,"as_raw_c_in","","",368,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",379,null],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",370,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",370,null],[11,"into_raw","","",370,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",370,null],[11,"as_raw_c_in","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",380,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",380,null],[11,"into_raw","","",380,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",380,null],[11,"as_raw_c_in","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",381,null],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",372,{"inputs":[{"name":"self"}],"output":{"name":"contenthint"}}],[11,"fmt","","",372,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",372,{"inputs":[{"name":"self"},{"name":"contenthint"}],"output":{"name":"bool"}}],[11,"from_raw","","",372,{"inputs":[{"name":"u32"}],"output":{"generics":["contenthint"],"name":"option"}}],[11,"to_raw","","",372,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",373,{"inputs":[{"name":"self"}],"output":{"name":"contentpurpose"}}],[11,"fmt","","",373,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",373,{"inputs":[{"name":"self"},{"name":"contentpurpose"}],"output":{"name":"bool"}}],[11,"from_raw","","",373,{"inputs":[{"name":"u32"}],"output":{"generics":["contentpurpose"],"name":"option"}}],[11,"to_raw","","",373,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",374,{"inputs":[{"name":"self"}],"output":{"name":"preeditstyle"}}],[11,"fmt","","",374,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",374,{"inputs":[{"name":"self"},{"name":"preeditstyle"}],"output":{"name":"bool"}}],[11,"from_raw","","",374,{"inputs":[{"name":"u32"}],"output":{"generics":["preeditstyle"],"name":"option"}}],[11,"to_raw","","",374,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",375,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",375,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",375,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"from_raw","","",375,{"inputs":[{"name":"u32"}],"output":{"generics":["textdirection"],"name":"option"}}],[11,"to_raw","","",375,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",376,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",376,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",376,null],[11,"into_raw","","",376,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",376,null],[11,"as_raw_c_in","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",377,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",377,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",377,null],[11,"into_raw","","",377,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",377,null],[11,"as_raw_c_in","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",382,null],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",378,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",378,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",378,null],[11,"into_raw","","",378,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",378,null],[11,"as_raw_c_in","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",383,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",383,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",383,null],[11,"into_raw","","",383,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",383,null],[11,"as_raw_c_in","","",383,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",384,null],[0,"xdg_decoration","wayland_protocols::unstable","This interface allows a compositor to announce support for server-side decorations. A window decoration is a set of window controls as deemed appropriate by the party managing them, such as user interface components used to move, resize and change a window's state. A client can use this protocol to request being decorated by a supporting compositor. If compositor and client do not negotiate the use of a server-side decoration using this protocol, clients continue to self-decorate as they see fit.",null,null],[0,"v1","wayland_protocols::unstable::xdg_decoration","",null,null],[0,"client","wayland_protocols::unstable::xdg_decoration::v1","Client-side API of this protocol",null,null],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::client","window decoration manager",null,null],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration manager object",385,null],[13,"GetToplevelDecoration","","create a new toplevel decoration object",385,null],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request","",385,null],[12,"toplevel","","",385,null],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the decoration manager object",386,null],[10,"get_toplevel_decoration","","create a new toplevel decoration object",386,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::client","decoration object for a toplevel surface",null,null],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",null,null],[4,"Error","","",null,null],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",387,null],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",387,null],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",387,null],[4,"Mode","","window decoration modes",null,null],[13,"ClientSide","","no server-side window decoration",388,null],[13,"ServerSide","","server-side window decoration",388,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration object",389,null],[13,"SetMode","","set the decoration mode",389,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request","",389,null],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","unset the decoration mode",389,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",390,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event","",390,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",null,null],[10,"destroy","","destroy the decoration object",391,null],[10,"set_mode","","set the decoration mode",391,null],[10,"unset_mode","","unset the decoration mode",391,null],[0,"server","wayland_protocols::unstable::xdg_decoration::v1","Server-side API of this protocol",null,null],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::server","window decoration manager",null,null],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration manager object",392,null],[13,"GetToplevelDecoration","","create a new toplevel decoration object",392,null],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1::Request","",392,null],[12,"toplevel","","",392,null],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",null,null],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::server","decoration object for a toplevel surface",null,null],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",null,null],[4,"Error","","",null,null],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",393,null],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",393,null],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",393,null],[4,"Mode","","window decoration modes",null,null],[13,"ClientSide","","no server-side window decoration",394,null],[13,"ServerSide","","server-side window decoration",394,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration object",395,null],[13,"SetMode","","set the decoration mode",395,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Request","",395,null],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","unset the decoration mode",395,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",396,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Event","",396,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_decoration::v1","C interfaces for this protocol",null,null],[7,"zxdg_decoration_manager_v1_requests","wayland_protocols::unstable::xdg_decoration::v1::c_interfaces","",null,null],[7,"zxdg_decoration_manager_v1_interface","","",null,null],[7,"zxdg_toplevel_decoration_v1_requests","","",null,null],[7,"zxdg_toplevel_decoration_v1_events","","",null,null],[7,"zxdg_toplevel_decoration_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",385,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",385,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",385,null],[11,"into_raw","","",385,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",385,null],[11,"as_raw_c_in","","",385,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",397,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",397,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",397,null],[11,"into_raw","","",397,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",397,null],[11,"as_raw_c_in","","",397,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",398,null],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",387,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",387,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",387,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",387,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",387,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",388,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"fmt","","",388,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",388,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"from_raw","","",388,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"to_raw","","",388,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",389,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",389,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",389,null],[11,"into_raw","","",389,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",389,null],[11,"as_raw_c_in","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",390,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",390,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",390,null],[11,"into_raw","","",390,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",390,null],[11,"as_raw_c_in","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",399,null],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",392,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",392,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",392,null],[11,"into_raw","","",392,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",392,null],[11,"as_raw_c_in","","",392,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",400,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",400,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",400,null],[11,"into_raw","","",400,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",400,null],[11,"as_raw_c_in","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",401,null],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",393,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",393,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",393,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",393,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",393,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",394,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"fmt","","",394,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",394,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"from_raw","","",394,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"to_raw","","",394,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",395,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",395,null],[11,"into_raw","","",395,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",395,null],[11,"as_raw_c_in","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",396,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",396,null],[11,"into_raw","","",396,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",396,null],[11,"as_raw_c_in","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",402,null],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",null,null],[0,"v1","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",403,null],[13,"Export","","export a surface",403,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request","",403,null],[12,"surface","","",403,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_exporter object",404,null],[10,"export","","export a surface",404,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",405,null],[13,"Import","","import a surface",405,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request","",405,null],[12,"handle","","",405,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_importer object",406,null],[10,"import","","import a surface",406,{"inputs":[{"name":"self"},{"name":"string"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",407,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",408,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event","",408,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",null,null],[10,"destroy","","unexport the exported surface",409,null],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",410,null],[13,"SetParentOf","","set as the parent of some surface",410,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request","",410,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",411,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_imported object",412,null],[10,"set_parent_of","","set as the parent of some surface",412,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v1","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",413,null],[13,"Export","","export a surface",413,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1::Request","",413,null],[12,"surface","","",413,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",null,null],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",414,null],[13,"Import","","import a surface",414,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1::Request","",414,null],[12,"handle","","",414,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",null,null],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",415,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",416,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1::Event","",416,null],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",417,null],[13,"SetParentOf","","set as the parent of some surface",417,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1::Request","",417,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",418,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v1::c_interfaces","",null,null],[7,"zxdg_exporter_v1_requests","","",null,null],[7,"zxdg_exporter_v1_interface","","",null,null],[7,"zxdg_importer_v1_requests","","",null,null],[7,"zxdg_importer_v1_interface","","",null,null],[7,"zxdg_exported_v1_requests","","",null,null],[7,"zxdg_exported_v1_events","","",null,null],[7,"zxdg_exported_v1_interface","","",null,null],[7,"zxdg_imported_v1_requests","","",null,null],[7,"zxdg_imported_v1_events","","",null,null],[7,"zxdg_imported_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",403,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",403,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",403,null],[11,"into_raw","","",403,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",403,null],[11,"as_raw_c_in","","",403,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",419,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",419,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",419,null],[11,"into_raw","","",419,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",419,null],[11,"as_raw_c_in","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",420,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",405,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",405,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",405,null],[11,"into_raw","","",405,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",405,null],[11,"as_raw_c_in","","",405,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",421,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",421,null],[11,"into_raw","","",421,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",421,null],[11,"as_raw_c_in","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",422,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",407,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",407,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",407,null],[11,"into_raw","","",407,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",407,null],[11,"as_raw_c_in","","",407,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",408,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",408,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",408,null],[11,"into_raw","","",408,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",408,null],[11,"as_raw_c_in","","",408,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",423,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",410,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",410,null],[11,"into_raw","","",410,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",410,null],[11,"as_raw_c_in","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",411,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",411,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",411,null],[11,"into_raw","","",411,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",411,null],[11,"as_raw_c_in","","",411,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",424,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",413,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",413,null],[11,"into_raw","","",413,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",413,null],[11,"as_raw_c_in","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",425,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",425,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",425,null],[11,"into_raw","","",425,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",425,null],[11,"as_raw_c_in","","",425,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",426,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",414,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",414,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",414,null],[11,"into_raw","","",414,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",414,null],[11,"as_raw_c_in","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",427,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",427,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",427,null],[11,"into_raw","","",427,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",427,null],[11,"as_raw_c_in","","",427,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",428,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",415,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",415,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",415,null],[11,"into_raw","","",415,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",415,null],[11,"as_raw_c_in","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",416,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",416,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",416,null],[11,"into_raw","","",416,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",416,null],[11,"as_raw_c_in","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",429,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",417,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",417,null],[11,"into_raw","","",417,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",417,null],[11,"as_raw_c_in","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",418,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",418,null],[11,"into_raw","","",418,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",418,null],[11,"as_raw_c_in","","",418,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",430,null],[0,"v2","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",null,null],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",431,null],[13,"ExportToplevel","","export a toplevel surface",431,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request","",431,null],[12,"surface","","",431,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_exporter object",432,null],[10,"export_toplevel","","export a toplevel surface",432,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",433,null],[13,"ImportToplevel","","import a toplevel surface",433,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request","",433,null],[12,"handle","","",433,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_importer object",434,null],[10,"import_toplevel","","import a toplevel surface",434,{"inputs":[{"name":"self"},{"name":"string"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an exported surface handle",null,null],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",435,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",436,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event","",436,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",null,null],[10,"destroy","","unexport the exported surface",437,null],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an imported surface handle",null,null],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",438,null],[13,"SetParentOf","","set as the parent of some surface",438,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request","",438,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",439,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_imported object",440,null],[10,"set_parent_of","","set as the parent of some surface",440,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v2","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",441,null],[13,"ExportToplevel","","export a toplevel surface",441,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2::Request","",441,null],[12,"surface","","",441,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",null,null],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",442,null],[13,"ImportToplevel","","import a toplevel surface",442,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2::Request","",442,null],[12,"handle","","",442,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",null,null],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an exported surface handle",null,null],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",443,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",444,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2::Event","",444,null],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an imported surface handle",null,null],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",445,null],[13,"SetParentOf","","set as the parent of some surface",445,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2::Request","",445,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",446,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v2","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v2::c_interfaces","",null,null],[7,"zxdg_exporter_v2_requests","","",null,null],[7,"zxdg_exporter_v2_interface","","",null,null],[7,"zxdg_importer_v2_requests","","",null,null],[7,"zxdg_importer_v2_interface","","",null,null],[7,"zxdg_exported_v2_requests","","",null,null],[7,"zxdg_exported_v2_events","","",null,null],[7,"zxdg_exported_v2_interface","","",null,null],[7,"zxdg_imported_v2_requests","","",null,null],[7,"zxdg_imported_v2_events","","",null,null],[7,"zxdg_imported_v2_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",431,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",431,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",431,null],[11,"into_raw","","",431,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",431,null],[11,"as_raw_c_in","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",447,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",447,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",447,null],[11,"into_raw","","",447,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",447,null],[11,"as_raw_c_in","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",448,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",433,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",433,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",433,null],[11,"into_raw","","",433,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",433,null],[11,"as_raw_c_in","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",449,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",449,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",449,null],[11,"into_raw","","",449,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",449,null],[11,"as_raw_c_in","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",450,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",435,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",435,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",435,null],[11,"into_raw","","",435,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",435,null],[11,"as_raw_c_in","","",435,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",436,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",436,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",436,null],[11,"into_raw","","",436,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",436,null],[11,"as_raw_c_in","","",436,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",451,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",438,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",438,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",438,null],[11,"into_raw","","",438,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",438,null],[11,"as_raw_c_in","","",438,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",439,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",439,null],[11,"into_raw","","",439,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",439,null],[11,"as_raw_c_in","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",452,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",441,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",441,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",441,null],[11,"into_raw","","",441,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",441,null],[11,"as_raw_c_in","","",441,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",453,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",453,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",453,null],[11,"into_raw","","",453,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",453,null],[11,"as_raw_c_in","","",453,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",454,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",442,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",442,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",442,null],[11,"into_raw","","",442,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",442,null],[11,"as_raw_c_in","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",455,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",455,null],[11,"into_raw","","",455,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",455,null],[11,"as_raw_c_in","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",456,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",443,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",443,null],[11,"into_raw","","",443,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",443,null],[11,"as_raw_c_in","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",444,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",444,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",444,null],[11,"into_raw","","",444,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",444,null],[11,"as_raw_c_in","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",457,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",445,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",445,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",445,null],[11,"into_raw","","",445,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",445,null],[11,"as_raw_c_in","","",445,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",446,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",446,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",446,null],[11,"into_raw","","",446,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",446,null],[11,"as_raw_c_in","","",446,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",458,null],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",null,null],[0,"v1","wayland_protocols::unstable::xdg_output","",null,null],[0,"client","wayland_protocols::unstable::xdg_output::v1","Client-side API of this protocol",null,null],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::client","manage xdg_output objects",null,null],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output_manager object",459,null],[13,"GetXdgOutput","","create an xdg output from a wl_output",459,null],[12,"id","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request","",459,null],[12,"output","","",459,null],[4,"Event","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_output_manager object",460,null],[10,"get_xdg_output","","create an xdg output from a wl_output",460,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::client","compositor logical output region",null,null],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output object",461,null],[4,"Event","","",null,null],[13,"LogicalPosition","","position of the output within the global compositor space",462,null],[12,"x","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",462,null],[12,"y","","",462,null],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","size of the output in the global compositor space",462,null],[12,"width","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",462,null],[12,"height","","",462,null],[13,"Done","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","all information about the output have been sent",462,null],[13,"Name","","name of this output",462,null],[12,"name","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",462,null],[13,"Description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","human-readable description of this output",462,null],[12,"description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",462,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",null,null],[10,"destroy","","destroy the xdg_output object",463,null],[0,"server","wayland_protocols::unstable::xdg_output::v1","Server-side API of this protocol",null,null],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::server","manage xdg_output objects",null,null],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output_manager object",464,null],[13,"GetXdgOutput","","create an xdg output from a wl_output",464,null],[12,"id","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1::Request","",464,null],[12,"output","","",464,null],[4,"Event","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",null,null],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::server","compositor logical output region",null,null],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output object",465,null],[4,"Event","","",null,null],[13,"LogicalPosition","","position of the output within the global compositor space",466,null],[12,"x","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",466,null],[12,"y","","",466,null],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","size of the output in the global compositor space",466,null],[12,"width","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",466,null],[12,"height","","",466,null],[13,"Done","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","all information about the output have been sent",466,null],[13,"Name","","name of this output",466,null],[12,"name","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",466,null],[13,"Description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","human-readable description of this output",466,null],[12,"description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",466,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_output::v1","C interfaces for this protocol",null,null],[7,"wl_output_interface","wayland_protocols::unstable::xdg_output::v1::c_interfaces","",null,null],[7,"zxdg_output_manager_v1_requests","","",null,null],[7,"zxdg_output_manager_v1_interface","","",null,null],[7,"zxdg_output_v1_requests","","",null,null],[7,"zxdg_output_v1_events","","",null,null],[7,"zxdg_output_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",459,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",459,null],[11,"into_raw","","",459,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",459,null],[11,"as_raw_c_in","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",467,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",467,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",467,null],[11,"into_raw","","",467,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",467,null],[11,"as_raw_c_in","","",467,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",468,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",461,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",461,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",461,null],[11,"into_raw","","",461,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",461,null],[11,"as_raw_c_in","","",461,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",462,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",462,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",462,null],[11,"into_raw","","",462,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",462,null],[11,"as_raw_c_in","","",462,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",469,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",464,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",464,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",464,null],[11,"into_raw","","",464,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",464,null],[11,"as_raw_c_in","","",464,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",470,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",470,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",470,null],[11,"into_raw","","",470,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",470,null],[11,"as_raw_c_in","","",470,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",471,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",465,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",465,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",465,null],[11,"into_raw","","",465,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",465,null],[11,"as_raw_c_in","","",465,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",466,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",466,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",466,null],[11,"into_raw","","",466,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",466,null],[11,"as_raw_c_in","","",466,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",472,null],[0,"xdg_shell","wayland_protocols::unstable","XDG Shell protocol",null,null],[0,"v5","wayland_protocols::unstable::xdg_shell","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell::v5","Client-side API of this protocol",null,null],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",null,null],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",null,null],[4,"Version","","latest protocol version",null,null],[13,"Current","","Always the latest version",473,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",474,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",474,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",474,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",474,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",475,null],[13,"UseUnstableVersion","","enable use of this unstable version",475,null],[12,"version","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",475,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a shell surface from a surface",475,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",475,null],[12,"surface","","",475,null],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a popup for a surface",475,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",475,null],[12,"surface","","",475,null],[12,"parent","","",475,null],[12,"seat","","",475,null],[12,"serial","","",475,null],[12,"x","","",475,null],[12,"y","","",475,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","respond to a ping event",475,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",475,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",null,null],[13,"Ping","","check if the client is alive",476,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event","",476,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",null,null],[10,"destroy","","destroy xdg_shell",477,null],[10,"use_unstable_version","","enable use of this unstable version",477,null],[10,"get_xdg_surface","","create a shell surface from a surface",477,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_xdg_popup","","create a popup for a surface",477,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"name":"proxy"},{"name":"u32"},{"name":"i32"},{"name":"i32"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"pong","","respond to a ping event",477,null],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::client","A desktop window",null,null],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",478,null],[13,"Top","","",478,null],[13,"Bottom","","",478,null],[13,"Left","","",478,null],[13,"TopLeft","","",478,null],[13,"BottomLeft","","",478,null],[13,"Right","","",478,null],[13,"TopRight","","",478,null],[13,"BottomRight","","",478,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",479,null],[13,"Fullscreen","","the surface is fullscreen",479,null],[13,"Resizing","","the surface is being resized",479,null],[13,"Activated","","the surface is now activated",479,null],[4,"Request","","",null,null],[13,"Destroy","","Destroy the xdg_surface",480,null],[13,"SetParent","","set the parent of this surface",480,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set surface title",480,null],[12,"title","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set application ID",480,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","show the window menu",480,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[12,"serial","","",480,null],[12,"x","","",480,null],[12,"y","","",480,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive move",480,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[12,"serial","","",480,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive resize",480,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[12,"serial","","",480,null],[12,"edges","","",480,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","ack a configure event",480,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set the new window geometry",480,null],[12,"x","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[12,"y","","",480,null],[12,"width","","",480,null],[12,"height","","",480,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","maximize the window",480,null],[13,"UnsetMaximized","","unmaximize the window",480,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",480,null],[12,"output","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",480,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",480,null],[13,"SetMinimized","","set the window as minimized",480,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",481,null],[12,"width","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event","",481,null],[12,"height","","",481,null],[12,"states","","",481,null],[12,"serial","","",481,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","surface wants to be closed",481,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","Destroy the xdg_surface",482,null],[10,"set_parent","","set the parent of this surface",482,null],[10,"set_title","","set surface title",482,null],[10,"set_app_id","","set application ID",482,null],[10,"show_window_menu","","show the window menu",482,null],[10,"_move","","start an interactive move",482,null],[10,"resize","","start an interactive resize",482,null],[10,"ack_configure","","ack a configure event",482,null],[10,"set_window_geometry","","set the new window geometry",482,null],[10,"set_maximized","","maximize the window",482,null],[10,"unset_maximized","","unmaximize the window",482,null],[10,"set_fullscreen","","set the window as fullscreen on a monitor",482,null],[10,"unset_fullscreen","","",482,null],[10,"set_minimized","","set the window as minimized",482,null],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",null,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",483,null],[4,"Event","","",null,null],[13,"PopupDone","","popup interaction is done",484,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove xdg_popup interface",485,null],[0,"server","wayland_protocols::unstable::xdg_shell::v5","Server-side API of this protocol",null,null],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::server","create desktop-style surfaces",null,null],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",null,null],[4,"Version","","latest protocol version",null,null],[13,"Current","","Always the latest version",486,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",487,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",487,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",487,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",487,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",488,null],[13,"UseUnstableVersion","","enable use of this unstable version",488,null],[12,"version","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",488,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a shell surface from a surface",488,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",488,null],[12,"surface","","",488,null],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a popup for a surface",488,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",488,null],[12,"surface","","",488,null],[12,"parent","","",488,null],[12,"seat","","",488,null],[12,"serial","","",488,null],[12,"x","","",488,null],[12,"y","","",488,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","respond to a ping event",488,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",488,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",null,null],[13,"Ping","","check if the client is alive",489,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Event","",489,null],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::server","A desktop window",null,null],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",490,null],[13,"Top","","",490,null],[13,"Bottom","","",490,null],[13,"Left","","",490,null],[13,"TopLeft","","",490,null],[13,"BottomLeft","","",490,null],[13,"Right","","",490,null],[13,"TopRight","","",490,null],[13,"BottomRight","","",490,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",491,null],[13,"Fullscreen","","the surface is fullscreen",491,null],[13,"Resizing","","the surface is being resized",491,null],[13,"Activated","","the surface is now activated",491,null],[4,"Request","","",null,null],[13,"Destroy","","Destroy the xdg_surface",492,null],[13,"SetParent","","set the parent of this surface",492,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set surface title",492,null],[12,"title","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set application ID",492,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","show the window menu",492,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[12,"serial","","",492,null],[12,"x","","",492,null],[12,"y","","",492,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive move",492,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[12,"serial","","",492,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive resize",492,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[12,"serial","","",492,null],[12,"edges","","",492,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","ack a configure event",492,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set the new window geometry",492,null],[12,"x","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[12,"y","","",492,null],[12,"width","","",492,null],[12,"height","","",492,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","maximize the window",492,null],[13,"UnsetMaximized","","unmaximize the window",492,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",492,null],[12,"output","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",492,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",492,null],[13,"SetMinimized","","set the window as minimized",492,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",493,null],[12,"width","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Event","",493,null],[12,"height","","",493,null],[12,"states","","",493,null],[12,"serial","","",493,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","surface wants to be closed",493,null],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",null,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",494,null],[4,"Event","","",null,null],[13,"PopupDone","","popup interaction is done",495,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v5","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v5::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"xdg_shell_requests","","",null,null],[7,"xdg_shell_events","","",null,null],[7,"xdg_shell_interface","","",null,null],[7,"xdg_surface_requests","","",null,null],[7,"xdg_surface_events","","",null,null],[7,"xdg_surface_interface","","",null,null],[7,"xdg_popup_requests","","",null,null],[7,"xdg_popup_events","","",null,null],[7,"xdg_popup_interface","","",null,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",473,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",473,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",473,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"from_raw","","",473,{"inputs":[{"name":"u32"}],"output":{"generics":["version"],"name":"option"}}],[11,"to_raw","","",473,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",474,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",474,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",474,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",474,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",474,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",475,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",475,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",475,null],[11,"into_raw","","",475,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",475,null],[11,"as_raw_c_in","","",475,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",476,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",476,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",476,null],[11,"into_raw","","",476,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",476,null],[11,"as_raw_c_in","","",476,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",496,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",478,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",478,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",478,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",478,{"inputs":[{"name":"u32"}],"output":{"generics":["resizeedge"],"name":"option"}}],[11,"to_raw","","",478,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",479,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",479,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",479,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",479,{"inputs":[{"name":"u32"}],"output":{"generics":["state"],"name":"option"}}],[11,"to_raw","","",479,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",480,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",480,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",480,null],[11,"into_raw","","",480,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",480,null],[11,"as_raw_c_in","","",480,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",481,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",481,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",481,null],[11,"into_raw","","",481,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",481,null],[11,"as_raw_c_in","","",481,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",497,null],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",483,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",483,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",483,null],[11,"into_raw","","",483,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",483,null],[11,"as_raw_c_in","","",483,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",484,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",484,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",484,null],[11,"into_raw","","",484,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",484,null],[11,"as_raw_c_in","","",484,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",498,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",486,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",486,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",486,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"from_raw","","",486,{"inputs":[{"name":"u32"}],"output":{"generics":["version"],"name":"option"}}],[11,"to_raw","","",486,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",487,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",487,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",487,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",487,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",487,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",488,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",488,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",488,null],[11,"into_raw","","",488,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",488,null],[11,"as_raw_c_in","","",488,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",489,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",489,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",489,null],[11,"into_raw","","",489,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",489,null],[11,"as_raw_c_in","","",489,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",499,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",490,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",490,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",490,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",490,{"inputs":[{"name":"u32"}],"output":{"generics":["resizeedge"],"name":"option"}}],[11,"to_raw","","",490,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",491,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",491,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",491,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",491,{"inputs":[{"name":"u32"}],"output":{"generics":["state"],"name":"option"}}],[11,"to_raw","","",491,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",492,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",492,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",492,null],[11,"into_raw","","",492,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",492,null],[11,"as_raw_c_in","","",492,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",493,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",493,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",493,null],[11,"into_raw","","",493,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",493,null],[11,"as_raw_c_in","","",493,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",500,null],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",494,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",494,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",494,null],[11,"into_raw","","",494,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",494,null],[11,"as_raw_c_in","","",494,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",495,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",495,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",495,null],[11,"into_raw","","",495,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",495,null],[11,"as_raw_c_in","","",495,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",501,null],[0,"v6","wayland_protocols::unstable::xdg_shell","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell::v6","Client-side API of this protocol",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",502,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",502,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",502,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",502,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",502,null],[13,"InvalidPositioner","","the client provided an invalid positioner",502,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",503,null],[13,"CreatePositioner","","create a positioner object",503,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",503,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","create a shell surface from a surface",503,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",503,null],[12,"surface","","",503,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","respond to a ping event",503,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",503,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",null,null],[13,"Ping","","check if the client is alive",504,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event","",504,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",null,null],[10,"destroy","","destroy xdg_shell",505,null],[10,"create_positioner","","create a positioner object",505,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_xdg_surface","","create a shell surface from a surface",505,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"pong","","respond to a ping event",505,null],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::client","child surface positioner",null,null],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[3,"ZxdgPositionerV6","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",506,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",507,null],[13,"SetSize","","set the size of the to-be positioned rectangle",507,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",507,null],[12,"height","","",507,null],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the anchor rectangle within the parent surface",507,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",507,null],[12,"y","","",507,null],[12,"width","","",507,null],[12,"height","","",507,null],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set anchor rectangle anchor edges",507,null],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",507,null],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set child surface gravity",507,null],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",507,null],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the adjustment to be done when constrained",507,null],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",507,null],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set surface position offset",507,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",507,null],[12,"y","","",507,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_positioner object",508,null],[10,"set_size","","set the size of the to-be positioned rectangle",508,null],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",508,null],[10,"set_anchor","","set anchor rectangle anchor edges",508,null],[10,"set_gravity","","set child surface gravity",508,null],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",508,null],[10,"set_offset","","set surface position offset",508,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",509,null],[13,"AlreadyConstructed","","",509,null],[13,"UnconfiguredBuffer","","",509,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",510,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",510,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",510,null],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","assign the xdg_popup surface role",510,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",510,null],[12,"parent","","",510,null],[12,"positioner","","",510,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","set the new window geometry",510,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",510,null],[12,"y","","",510,null],[12,"width","","",510,null],[12,"height","","",510,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","ack a configure event",510,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",510,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",null,null],[13,"Configure","","suggest a surface change",511,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event","",511,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",null,null],[10,"destroy","","destroy the xdg_surface",512,null],[10,"get_toplevel","","assign the xdg_toplevel surface role",512,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_popup","","assign the xdg_popup surface role",512,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"set_window_geometry","","set the new window geometry",512,null],[10,"ack_configure","","ack a configure event",512,null],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::client","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",513,null],[13,"Top","","",513,null],[13,"Bottom","","",513,null],[13,"Left","","",513,null],[13,"TopLeft","","",513,null],[13,"BottomLeft","","",513,null],[13,"Right","","",513,null],[13,"TopRight","","",513,null],[13,"BottomRight","","",513,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",514,null],[13,"Fullscreen","","the surface is fullscreen",514,null],[13,"Resizing","","the surface is being resized",514,null],[13,"Activated","","the surface is now activated",514,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",515,null],[13,"SetParent","","set the parent of this surface",515,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set surface title",515,null],[12,"title","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set application ID",515,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","show the window menu",515,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[12,"serial","","",515,null],[12,"x","","",515,null],[12,"y","","",515,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive move",515,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[12,"serial","","",515,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive resize",515,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[12,"serial","","",515,null],[12,"edges","","",515,null],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the maximum size",515,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[12,"height","","",515,null],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the minimum size",515,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[12,"height","","",515,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","maximize the window",515,null],[13,"UnsetMaximized","","unmaximize the window",515,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",515,null],[12,"output","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",515,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",515,null],[13,"SetMinimized","","set the window as minimized",515,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",516,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event","",516,null],[12,"height","","",516,null],[12,"states","","",516,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","surface wants to be closed",516,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_toplevel",517,null],[10,"set_parent","","set the parent of this surface",517,null],[10,"set_title","","set surface title",517,null],[10,"set_app_id","","set application ID",517,null],[10,"show_window_menu","","show the window menu",517,null],[10,"_move","","start an interactive move",517,null],[10,"resize","","start an interactive resize",517,null],[10,"set_max_size","","set the maximum size",517,null],[10,"set_min_size","","set the minimum size",517,null],[10,"set_maximized","","maximize the window",517,null],[10,"unset_maximized","","unmaximize the window",517,null],[10,"set_fullscreen","","set the window as fullscreen on a monitor",517,null],[10,"unset_fullscreen","","",517,null],[10,"set_minimized","","set the window as minimized",517,null],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",518,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",519,null],[13,"Grab","","make the popup take an explicit grab",519,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request","",519,null],[12,"serial","","",519,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",null,null],[13,"Configure","","configure the popup surface",520,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event","",520,null],[12,"y","","",520,null],[12,"width","","",520,null],[12,"height","","",520,null],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","popup interaction is done",520,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove xdg_popup interface",521,null],[10,"grab","","make the popup take an explicit grab",521,null],[0,"server","wayland_protocols::unstable::xdg_shell::v6","Server-side API of this protocol",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::server","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",522,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",522,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",522,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",522,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",522,null],[13,"InvalidPositioner","","the client provided an invalid positioner",522,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",523,null],[13,"CreatePositioner","","create a positioner object",523,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",523,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","create a shell surface from a surface",523,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",523,null],[12,"surface","","",523,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","respond to a ping event",523,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",523,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",null,null],[13,"Ping","","check if the client is alive",524,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Event","",524,null],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::server","child surface positioner",null,null],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[3,"ZxdgPositionerV6","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",525,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",526,null],[13,"SetSize","","set the size of the to-be positioned rectangle",526,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",526,null],[12,"height","","",526,null],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the anchor rectangle within the parent surface",526,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",526,null],[12,"y","","",526,null],[12,"width","","",526,null],[12,"height","","",526,null],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set anchor rectangle anchor edges",526,null],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",526,null],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set child surface gravity",526,null],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",526,null],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the adjustment to be done when constrained",526,null],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",526,null],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set surface position offset",526,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",526,null],[12,"y","","",526,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",null,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::server","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",527,null],[13,"AlreadyConstructed","","",527,null],[13,"UnconfiguredBuffer","","",527,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",528,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",528,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",528,null],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","assign the xdg_popup surface role",528,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",528,null],[12,"parent","","",528,null],[12,"positioner","","",528,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","set the new window geometry",528,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",528,null],[12,"y","","",528,null],[12,"width","","",528,null],[12,"height","","",528,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","ack a configure event",528,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",528,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",null,null],[13,"Configure","","suggest a surface change",529,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Event","",529,null],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::server","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",530,null],[13,"Top","","",530,null],[13,"Bottom","","",530,null],[13,"Left","","",530,null],[13,"TopLeft","","",530,null],[13,"BottomLeft","","",530,null],[13,"Right","","",530,null],[13,"TopRight","","",530,null],[13,"BottomRight","","",530,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",531,null],[13,"Fullscreen","","the surface is fullscreen",531,null],[13,"Resizing","","the surface is being resized",531,null],[13,"Activated","","the surface is now activated",531,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",532,null],[13,"SetParent","","set the parent of this surface",532,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set surface title",532,null],[12,"title","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set application ID",532,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","show the window menu",532,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[12,"serial","","",532,null],[12,"x","","",532,null],[12,"y","","",532,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive move",532,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[12,"serial","","",532,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive resize",532,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[12,"serial","","",532,null],[12,"edges","","",532,null],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the maximum size",532,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[12,"height","","",532,null],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the minimum size",532,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[12,"height","","",532,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","maximize the window",532,null],[13,"UnsetMaximized","","unmaximize the window",532,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",532,null],[12,"output","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",532,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",532,null],[13,"SetMinimized","","set the window as minimized",532,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",533,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Event","",533,null],[12,"height","","",533,null],[12,"states","","",533,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","surface wants to be closed",533,null],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::server","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",534,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",535,null],[13,"Grab","","make the popup take an explicit grab",535,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Request","",535,null],[12,"serial","","",535,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",null,null],[13,"Configure","","configure the popup surface",536,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Event","",536,null],[12,"y","","",536,null],[12,"width","","",536,null],[12,"height","","",536,null],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","popup interaction is done",536,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v6","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v6::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"zxdg_shell_v6_requests","","",null,null],[7,"zxdg_shell_v6_events","","",null,null],[7,"zxdg_shell_v6_interface","","",null,null],[7,"zxdg_positioner_v6_requests","","",null,null],[7,"zxdg_positioner_v6_interface","","",null,null],[7,"zxdg_surface_v6_requests","","",null,null],[7,"zxdg_surface_v6_events","","",null,null],[7,"zxdg_surface_v6_interface","","",null,null],[7,"zxdg_toplevel_v6_requests","","",null,null],[7,"zxdg_toplevel_v6_events","","",null,null],[7,"zxdg_toplevel_v6_interface","","",null,null],[7,"zxdg_popup_v6_requests","","",null,null],[7,"zxdg_popup_v6_events","","",null,null],[7,"zxdg_popup_v6_interface","","",null,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",502,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",502,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",502,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",502,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",502,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",503,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",503,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",503,null],[11,"into_raw","","",503,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",503,null],[11,"as_raw_c_in","","",503,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",504,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",504,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",504,null],[11,"into_raw","","",504,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",504,null],[11,"as_raw_c_in","","",504,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",537,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",506,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",506,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",506,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",506,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",506,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ne","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"clone","","",538,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"partial_cmp","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"le","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"gt","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ge","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"cmp","","",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"ordering"}}],[11,"hash","","",538,null],[11,"fmt","","",538,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",538,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",538,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",538,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",538,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","the center of the anchor rectangle",538,null],[18,"Top","","the top edge of the anchor rectangle",538,null],[18,"Bottom","","the bottom edge of the anchor rectangle",538,null],[18,"Left","","the left edge of the anchor rectangle",538,null],[18,"Right","","the right edge of the anchor rectangle",538,null],[11,"empty","","Returns an empty set of flags.",538,{"inputs":[],"output":{"name":"anchor"}}],[11,"all","","Returns the set containing all flags.",538,{"inputs":[],"output":{"name":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",538,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",538,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",538,{"inputs":[{"name":"u32"}],"output":{"name":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",538,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",538,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",538,{"inputs":[{"name":"self"},{"name":"anchor"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",538,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",538,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"extend","","",538,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",538,{"inputs":[{"name":"t"}],"output":{"name":"anchor"}}],[11,"from_raw","","",538,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"to_raw","","",538,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"clone","","",539,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"partial_cmp","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"le","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"gt","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ge","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"cmp","","",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"ordering"}}],[11,"hash","","",539,null],[11,"fmt","","",539,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",539,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",539,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",539,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",539,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","center over the anchor edge",539,null],[18,"Top","","position above the anchor edge",539,null],[18,"Bottom","","position below the anchor edge",539,null],[18,"Left","","position to the left of the anchor edge",539,null],[18,"Right","","position to the right of the anchor edge",539,null],[11,"empty","","Returns an empty set of flags.",539,{"inputs":[],"output":{"name":"gravity"}}],[11,"all","","Returns the set containing all flags.",539,{"inputs":[],"output":{"name":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",539,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",539,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",539,{"inputs":[{"name":"u32"}],"output":{"name":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",539,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",539,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",539,{"inputs":[{"name":"self"},{"name":"gravity"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",539,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",539,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"extend","","",539,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",539,{"inputs":[{"name":"t"}],"output":{"name":"gravity"}}],[11,"from_raw","","",539,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"to_raw","","",539,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",540,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",540,null],[11,"fmt","","",540,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",540,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",540,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",540,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",540,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","don't move the child surface when constrained",540,null],[18,"SlideX","","move along the x axis until unconstrained",540,null],[18,"SlideY","","move along the y axis until unconstrained",540,null],[18,"FlipX","","invert the anchor and gravity on the x axis",540,null],[18,"FlipY","","invert the anchor and gravity on the y axis",540,null],[18,"ResizeX","","horizontally resize the surface",540,null],[18,"ResizeY","","vertically resize the surface",540,null],[11,"empty","","Returns an empty set of flags.",540,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",540,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",540,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",540,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",540,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",540,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",540,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",540,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",540,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",540,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",540,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",540,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"to_raw","","",540,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",507,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",507,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",507,null],[11,"into_raw","","",507,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",507,null],[11,"as_raw_c_in","","",507,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",541,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",541,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",541,null],[11,"into_raw","","",541,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",541,null],[11,"as_raw_c_in","","",541,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",542,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",509,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",509,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",509,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",509,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",509,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",510,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",510,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",510,null],[11,"into_raw","","",510,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",510,null],[11,"as_raw_c_in","","",510,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",511,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",511,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",511,null],[11,"into_raw","","",511,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",511,null],[11,"as_raw_c_in","","",511,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",543,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",513,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",513,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",513,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",513,{"inputs":[{"name":"u32"}],"output":{"generics":["resizeedge"],"name":"option"}}],[11,"to_raw","","",513,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",514,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",514,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",514,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",514,{"inputs":[{"name":"u32"}],"output":{"generics":["state"],"name":"option"}}],[11,"to_raw","","",514,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",515,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",515,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",515,null],[11,"into_raw","","",515,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",515,null],[11,"as_raw_c_in","","",515,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",516,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",516,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",516,null],[11,"into_raw","","",516,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",516,null],[11,"as_raw_c_in","","",516,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",544,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",518,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",518,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",518,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",518,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",518,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",519,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",519,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",519,null],[11,"into_raw","","",519,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",519,null],[11,"as_raw_c_in","","",519,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",520,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",520,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",520,null],[11,"into_raw","","",520,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",520,null],[11,"as_raw_c_in","","",520,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",545,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",522,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",522,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",522,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",522,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",522,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",523,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",523,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",523,null],[11,"into_raw","","",523,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",523,null],[11,"as_raw_c_in","","",523,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",524,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",524,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",524,null],[11,"into_raw","","",524,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",524,null],[11,"as_raw_c_in","","",524,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",546,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",525,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",525,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",525,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",525,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",525,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ne","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"clone","","",547,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"partial_cmp","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"le","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"gt","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ge","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"cmp","","",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"ordering"}}],[11,"hash","","",547,null],[11,"fmt","","",547,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",547,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",547,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",547,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",547,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","the center of the anchor rectangle",547,null],[18,"Top","","the top edge of the anchor rectangle",547,null],[18,"Bottom","","the bottom edge of the anchor rectangle",547,null],[18,"Left","","the left edge of the anchor rectangle",547,null],[18,"Right","","the right edge of the anchor rectangle",547,null],[11,"empty","","Returns an empty set of flags.",547,{"inputs":[],"output":{"name":"anchor"}}],[11,"all","","Returns the set containing all flags.",547,{"inputs":[],"output":{"name":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",547,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",547,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",547,{"inputs":[{"name":"u32"}],"output":{"name":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",547,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",547,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",547,{"inputs":[{"name":"self"},{"name":"anchor"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",547,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",547,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"extend","","",547,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",547,{"inputs":[{"name":"t"}],"output":{"name":"anchor"}}],[11,"from_raw","","",547,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"to_raw","","",547,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"clone","","",548,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"partial_cmp","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"le","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"gt","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ge","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"cmp","","",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"ordering"}}],[11,"hash","","",548,null],[11,"fmt","","",548,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",548,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",548,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",548,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",548,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","center over the anchor edge",548,null],[18,"Top","","position above the anchor edge",548,null],[18,"Bottom","","position below the anchor edge",548,null],[18,"Left","","position to the left of the anchor edge",548,null],[18,"Right","","position to the right of the anchor edge",548,null],[11,"empty","","Returns an empty set of flags.",548,{"inputs":[],"output":{"name":"gravity"}}],[11,"all","","Returns the set containing all flags.",548,{"inputs":[],"output":{"name":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",548,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",548,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",548,{"inputs":[{"name":"u32"}],"output":{"name":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",548,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",548,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",548,{"inputs":[{"name":"self"},{"name":"gravity"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",548,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",548,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"extend","","",548,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",548,{"inputs":[{"name":"t"}],"output":{"name":"gravity"}}],[11,"from_raw","","",548,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"to_raw","","",548,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",549,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",549,null],[11,"fmt","","",549,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",549,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",549,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",549,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",549,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","don't move the child surface when constrained",549,null],[18,"SlideX","","move along the x axis until unconstrained",549,null],[18,"SlideY","","move along the y axis until unconstrained",549,null],[18,"FlipX","","invert the anchor and gravity on the x axis",549,null],[18,"FlipY","","invert the anchor and gravity on the y axis",549,null],[18,"ResizeX","","horizontally resize the surface",549,null],[18,"ResizeY","","vertically resize the surface",549,null],[11,"empty","","Returns an empty set of flags.",549,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",549,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",549,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",549,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",549,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",549,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",549,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",549,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",549,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",549,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",549,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",549,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"to_raw","","",549,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",526,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",526,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",526,null],[11,"into_raw","","",526,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",526,null],[11,"as_raw_c_in","","",526,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",550,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",550,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",550,null],[11,"into_raw","","",550,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",550,null],[11,"as_raw_c_in","","",550,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",551,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",527,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",527,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",527,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",527,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",527,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",528,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",528,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",528,null],[11,"into_raw","","",528,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",528,null],[11,"as_raw_c_in","","",528,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",529,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",529,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",529,null],[11,"into_raw","","",529,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",529,null],[11,"as_raw_c_in","","",529,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",552,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",530,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",530,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",530,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",530,{"inputs":[{"name":"u32"}],"output":{"generics":["resizeedge"],"name":"option"}}],[11,"to_raw","","",530,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",531,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",531,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",531,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",531,{"inputs":[{"name":"u32"}],"output":{"generics":["state"],"name":"option"}}],[11,"to_raw","","",531,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",532,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",532,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",532,null],[11,"into_raw","","",532,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",532,null],[11,"as_raw_c_in","","",532,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",533,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",533,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",533,null],[11,"into_raw","","",533,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",533,null],[11,"as_raw_c_in","","",533,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",553,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",534,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",534,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",534,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",534,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",534,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",535,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",535,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",535,null],[11,"into_raw","","",535,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",535,null],[11,"as_raw_c_in","","",535,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",536,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",536,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",536,null],[11,"into_raw","","",536,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",536,null],[11,"as_raw_c_in","","",536,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",554,null],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",null,null],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",null,null],[0,"client","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",null,null],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",null,null],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard grab manager",555,null],[13,"GrabKeyboard","","grab the keyboard to a surface",555,null],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request","",555,null],[12,"surface","","",555,null],[12,"seat","","",555,null],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the keyboard grab manager",556,null],[10,"grab_keyboard","","grab the keyboard to a surface",556,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",null,null],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the grabbed keyboard object",557,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the grabbed keyboard object",558,null],[0,"server","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Server-side API of this protocol",null,null],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","context object for keyboard grab manager",null,null],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard grab manager",559,null],[13,"GrabKeyboard","","grab the keyboard to a surface",559,null],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1::Request","",559,null],[12,"surface","","",559,null],[12,"seat","","",559,null],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","interface for grabbing the keyboard",null,null],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the grabbed keyboard object",560,null],[4,"Event","","",null,null],[0,"c_interfaces","wayland_protocols::unstable::xwayland_keyboard_grab::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_xwayland_keyboard_grab_manager_v1_requests","","",null,null],[7,"zwp_xwayland_keyboard_grab_manager_v1_interface","","",null,null],[7,"zwp_xwayland_keyboard_grab_v1_requests","","",null,null],[7,"zwp_xwayland_keyboard_grab_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",555,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",555,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",555,null],[11,"into_raw","","",555,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",555,null],[11,"as_raw_c_in","","",555,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",561,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",561,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",561,null],[11,"into_raw","","",561,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",561,null],[11,"as_raw_c_in","","",561,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",562,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",557,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",557,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",557,null],[11,"into_raw","","",557,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",557,null],[11,"as_raw_c_in","","",557,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",563,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",563,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",563,null],[11,"into_raw","","",563,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",563,null],[11,"as_raw_c_in","","",563,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",564,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",559,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",559,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",559,null],[11,"into_raw","","",559,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",559,null],[11,"as_raw_c_in","","",559,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",565,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",565,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",565,null],[11,"into_raw","","",565,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",565,null],[11,"as_raw_c_in","","",565,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",566,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",560,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",560,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",560,null],[11,"into_raw","","",560,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",560,null],[11,"as_raw_c_in","","",560,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",567,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",567,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",567,null],[11,"into_raw","","",567,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",567,null],[11,"as_raw_c_in","","",567,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",568,null],[0,"presentation_time","wayland_protocols","Presentation time protocol",null,null],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",569,null],[13,"InvalidFlag","","invalid flag",569,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",570,null],[13,"Feedback","","request presentation feedback information",570,null],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",570,null],[12,"callback","","",570,null],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",571,null],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",571,null],[8,"RequestsTrait","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[10,"destroy","","unbind from the presentation interface",572,null],[10,"feedback","","request presentation feedback information",572,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","presentation was vsync'd",573,null],[13,"HwClock","","hardware provided the presentation timestamp",573,null],[13,"HwCompletion","","hardware signalled the start of the presentation",573,null],[13,"ZeroCopy","","presentation was done zero-copy",573,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",574,null],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",574,null],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",574,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",574,null],[12,"tv_sec_lo","","",574,null],[12,"tv_nsec","","",574,null],[12,"refresh","","",574,null],[12,"seq_hi","","",574,null],[12,"seq_lo","","",574,null],[12,"flags","","",574,null],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",574,null],[8,"RequestsTrait","","",null,null],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",575,null],[13,"InvalidFlag","","invalid flag",575,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",576,null],[13,"Feedback","","request presentation feedback information",576,null],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",576,null],[12,"callback","","",576,null],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",577,null],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",577,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::server::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","presentation was vsync'd",578,null],[13,"HwClock","","hardware provided the presentation timestamp",578,null],[13,"HwCompletion","","hardware signalled the start of the presentation",578,null],[13,"ZeroCopy","","presentation was done zero-copy",578,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",579,null],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",579,null],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",579,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",579,null],[12,"tv_sec_lo","","",579,null],[12,"tv_nsec","","",579,null],[12,"refresh","","",579,null],[12,"seq_hi","","",579,null],[12,"seq_lo","","",579,null],[12,"flags","","",579,null],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",579,null],[0,"c_interfaces","wayland_protocols::presentation_time","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::presentation_time::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wp_presentation_requests","","",null,null],[7,"wp_presentation_events","","",null,null],[7,"wp_presentation_interface","","",null,null],[7,"wp_presentation_feedback_events","","",null,null],[7,"wp_presentation_feedback_interface","","",null,null],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",null,null],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",580,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",580,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",580,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",580,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",580,null],[13,"InvalidPositioner","","the client provided an invalid positioner",580,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",581,null],[13,"CreatePositioner","","create a positioner object",581,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",581,null],[13,"GetXdgSurface","wayland_protocols::xdg_shell::client::xdg_wm_base","create a shell surface from a surface",581,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",581,null],[12,"surface","","",581,null],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",581,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",581,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",582,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",582,null],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[10,"destroy","","destroy xdg_wm_base",583,null],[10,"create_positioner","","create a positioner object",583,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_xdg_surface","","create a shell surface from a surface",583,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"pong","","respond to a ping event",583,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",584,null],[4,"Anchor","","",null,null],[13,"None","","",585,null],[13,"Top","","",585,null],[13,"Bottom","","",585,null],[13,"Left","","",585,null],[13,"Right","","",585,null],[13,"TopLeft","","",585,null],[13,"BottomLeft","","",585,null],[13,"TopRight","","",585,null],[13,"BottomRight","","",585,null],[4,"Gravity","","",null,null],[13,"None","","",586,null],[13,"Top","","",586,null],[13,"Bottom","","",586,null],[13,"Left","","",586,null],[13,"Right","","",586,null],[13,"TopLeft","","",586,null],[13,"BottomLeft","","",586,null],[13,"TopRight","","",586,null],[13,"BottomRight","","",586,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",587,null],[13,"SetSize","","set the size of the to-be positioned rectangle",587,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",587,null],[12,"height","","",587,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",587,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",587,null],[12,"y","","",587,null],[12,"width","","",587,null],[12,"height","","",587,null],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",587,null],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",587,null],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",587,null],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",587,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",587,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",587,null],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",587,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",587,null],[12,"y","","",587,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_positioner object",588,null],[10,"set_size","","set the size of the to-be positioned rectangle",588,null],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",588,null],[10,"set_anchor","","set anchor rectangle anchor",588,null],[10,"set_gravity","","set child surface gravity",588,null],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",588,null],[10,"set_offset","","set surface position offset",588,null],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",589,null],[13,"AlreadyConstructed","","",589,null],[13,"UnconfiguredBuffer","","",589,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",590,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",590,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",590,null],[13,"GetPopup","wayland_protocols::xdg_shell::client::xdg_surface","assign the xdg_popup surface role",590,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",590,null],[12,"parent","","",590,null],[12,"positioner","","",590,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",590,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",590,null],[12,"y","","",590,null],[12,"width","","",590,null],[12,"height","","",590,null],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",590,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",590,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",591,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",591,null],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[10,"destroy","","destroy the xdg_surface",592,null],[10,"get_toplevel","","assign the xdg_toplevel surface role",592,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"get_popup","","assign the xdg_popup surface role",592,{"inputs":[{"name":"self"},{"generics":["proxy"],"name":"option"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[10,"set_window_geometry","","set the new window geometry",592,null],[10,"ack_configure","","ack a configure event",592,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",593,null],[13,"Top","","",593,null],[13,"Bottom","","",593,null],[13,"Left","","",593,null],[13,"TopLeft","","",593,null],[13,"BottomLeft","","",593,null],[13,"Right","","",593,null],[13,"TopRight","","",593,null],[13,"BottomRight","","",593,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",594,null],[13,"Fullscreen","","the surface is fullscreen",594,null],[13,"Resizing","","the surface is being resized",594,null],[13,"Activated","","the surface is now activated",594,null],[13,"TiledLeft","","the surface is tiled",594,null],[13,"TiledRight","","the surface is tiled",594,null],[13,"TiledTop","","the surface is tiled",594,null],[13,"TiledBottom","","the surface is tiled",594,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",595,null],[13,"SetParent","","set the parent of this surface",595,null],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",595,null],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",595,null],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",595,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[12,"serial","","",595,null],[12,"x","","",595,null],[12,"y","","",595,null],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",595,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[12,"serial","","",595,null],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",595,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[12,"serial","","",595,null],[12,"edges","","",595,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",595,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[12,"height","","",595,null],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",595,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[12,"height","","",595,null],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",595,null],[13,"UnsetMaximized","","unmaximize the window",595,null],[13,"SetFullscreen","","set the window as fullscreen on an output",595,null],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",595,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",595,null],[13,"SetMinimized","","set the window as minimized",595,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",596,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",596,null],[12,"height","","",596,null],[12,"states","","",596,null],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",596,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_toplevel",597,null],[10,"set_parent","","set the parent of this surface",597,null],[10,"set_title","","set surface title",597,null],[10,"set_app_id","","set application ID",597,null],[10,"show_window_menu","","show the window menu",597,null],[10,"_move","","start an interactive move",597,null],[10,"resize","","start an interactive resize",597,null],[10,"set_max_size","","set the maximum size",597,null],[10,"set_min_size","","set the minimum size",597,null],[10,"set_maximized","","maximize the window",597,null],[10,"unset_maximized","","unmaximize the window",597,null],[10,"set_fullscreen","","set the window as fullscreen on an output",597,null],[10,"unset_fullscreen","","unset the window as fullscreen",597,null],[10,"set_minimized","","set the window as minimized",597,null],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",598,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",599,null],[13,"Grab","","make the popup take an explicit grab",599,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",599,null],[12,"serial","","",599,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",600,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",600,null],[12,"y","","",600,null],[12,"width","","",600,null],[12,"height","","",600,null],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",600,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove xdg_popup interface",601,null],[10,"grab","","make the popup take an explicit grab",601,null],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",602,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",602,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",602,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",602,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",602,null],[13,"InvalidPositioner","","the client provided an invalid positioner",602,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",603,null],[13,"CreatePositioner","","create a positioner object",603,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",603,null],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",603,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",603,null],[12,"surface","","",603,null],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",603,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",603,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",604,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",604,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",605,null],[4,"Anchor","","",null,null],[13,"None","","",606,null],[13,"Top","","",606,null],[13,"Bottom","","",606,null],[13,"Left","","",606,null],[13,"Right","","",606,null],[13,"TopLeft","","",606,null],[13,"BottomLeft","","",606,null],[13,"TopRight","","",606,null],[13,"BottomRight","","",606,null],[4,"Gravity","","",null,null],[13,"None","","",607,null],[13,"Top","","",607,null],[13,"Bottom","","",607,null],[13,"Left","","",607,null],[13,"Right","","",607,null],[13,"TopLeft","","",607,null],[13,"BottomLeft","","",607,null],[13,"TopRight","","",607,null],[13,"BottomRight","","",607,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",608,null],[13,"SetSize","","set the size of the to-be positioned rectangle",608,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",608,null],[12,"height","","",608,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",608,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",608,null],[12,"y","","",608,null],[12,"width","","",608,null],[12,"height","","",608,null],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",608,null],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",608,null],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",608,null],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",608,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",608,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",608,null],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",608,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",608,null],[12,"y","","",608,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",null,null],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",609,null],[13,"AlreadyConstructed","","",609,null],[13,"UnconfiguredBuffer","","",609,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",610,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",610,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",610,null],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",610,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",610,null],[12,"parent","","",610,null],[12,"positioner","","",610,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",610,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",610,null],[12,"y","","",610,null],[12,"width","","",610,null],[12,"height","","",610,null],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",610,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",610,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",611,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",611,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",612,null],[13,"Top","","",612,null],[13,"Bottom","","",612,null],[13,"Left","","",612,null],[13,"TopLeft","","",612,null],[13,"BottomLeft","","",612,null],[13,"Right","","",612,null],[13,"TopRight","","",612,null],[13,"BottomRight","","",612,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",613,null],[13,"Fullscreen","","the surface is fullscreen",613,null],[13,"Resizing","","the surface is being resized",613,null],[13,"Activated","","the surface is now activated",613,null],[13,"TiledLeft","","the surface is tiled",613,null],[13,"TiledRight","","the surface is tiled",613,null],[13,"TiledTop","","the surface is tiled",613,null],[13,"TiledBottom","","the surface is tiled",613,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",614,null],[13,"SetParent","","set the parent of this surface",614,null],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",614,null],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",614,null],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",614,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[12,"serial","","",614,null],[12,"x","","",614,null],[12,"y","","",614,null],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",614,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[12,"serial","","",614,null],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",614,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[12,"serial","","",614,null],[12,"edges","","",614,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",614,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[12,"height","","",614,null],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",614,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[12,"height","","",614,null],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",614,null],[13,"UnsetMaximized","","unmaximize the window",614,null],[13,"SetFullscreen","","set the window as fullscreen on an output",614,null],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",614,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",614,null],[13,"SetMinimized","","set the window as minimized",614,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",615,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",615,null],[12,"height","","",615,null],[12,"states","","",615,null],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",615,null],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",616,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",617,null],[13,"Grab","","make the popup take an explicit grab",617,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",617,null],[12,"serial","","",617,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",618,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",618,null],[12,"y","","",618,null],[12,"width","","",618,null],[12,"height","","",618,null],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",618,null],[0,"c_interfaces","wayland_protocols::xdg_shell","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::xdg_shell::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_output_interface","","",null,null],[7,"xdg_wm_base_requests","","",null,null],[7,"xdg_wm_base_events","","",null,null],[7,"xdg_wm_base_interface","","",null,null],[7,"xdg_positioner_requests","","",null,null],[7,"xdg_positioner_interface","","",null,null],[7,"xdg_surface_requests","","",null,null],[7,"xdg_surface_events","","",null,null],[7,"xdg_surface_interface","","",null,null],[7,"xdg_toplevel_requests","","",null,null],[7,"xdg_toplevel_events","","",null,null],[7,"xdg_toplevel_interface","","",null,null],[7,"xdg_popup_requests","","",null,null],[7,"xdg_popup_events","","",null,null],[7,"xdg_popup_interface","","",null,null],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",619,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",620,null],[13,"GetViewport","","extend surface interface for crop and scale",620,null],[12,"id","wayland_protocols::viewporter::client::wp_viewporter::Request","",620,null],[12,"surface","","",620,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","unbind from the cropping and scaling interface",621,null],[10,"get_viewport","","extend surface interface for crop and scale",621,{"inputs":[{"name":"self"},{"name":"proxy"},{"name":"f"}],"output":{"generics":["proxy"],"name":"result"}}],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",622,null],[13,"BadSize","","destination size is not integer",622,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",622,null],[13,"NoSurface","","the wl_surface was destroyed",622,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",623,null],[13,"SetSource","","set the source rectangle for cropping",623,null],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",623,null],[12,"y","","",623,null],[12,"width","","",623,null],[12,"height","","",623,null],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",623,null],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",623,null],[12,"height","","",623,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove scaling and cropping from the surface",624,null],[10,"set_source","","set the source rectangle for cropping",624,null],[10,"set_destination","","set the surface size for scaling",624,null],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",625,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",626,null],[13,"GetViewport","","extend surface interface for crop and scale",626,null],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",626,null],[12,"surface","","",626,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",627,null],[13,"BadSize","","destination size is not integer",627,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",627,null],[13,"NoSurface","","the wl_surface was destroyed",627,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",628,null],[13,"SetSource","","set the source rectangle for cropping",628,null],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",628,null],[12,"y","","",628,null],[12,"width","","",628,null],[12,"height","","",628,null],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",628,null],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",628,null],[12,"height","","",628,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",null,null],[0,"c_interfaces","wayland_protocols::viewporter","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::viewporter::c_interfaces","",null,null],[7,"wp_viewporter_requests","","",null,null],[7,"wp_viewporter_interface","","",null,null],[7,"wp_viewport_requests","","",null,null],[7,"wp_viewport_interface","","",null,null],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation","",569,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",569,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",569,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",569,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",569,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",570,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",570,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",570,null],[11,"into_raw","","",570,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",570,null],[11,"as_raw_c_in","","",570,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",571,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",571,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",571,null],[11,"into_raw","","",571,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",571,null],[11,"as_raw_c_in","","",571,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",629,null],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation_feedback","",573,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",573,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",573,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"from_raw","","",573,{"inputs":[{"name":"u32"}],"output":{"generics":["kind"],"name":"option"}}],[11,"to_raw","","",573,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",630,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",630,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",630,null],[11,"into_raw","","",630,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",630,null],[11,"as_raw_c_in","","",630,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",574,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",574,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",574,null],[11,"into_raw","","",574,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",574,null],[11,"as_raw_c_in","","",574,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",631,null],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation","",575,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",575,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",575,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",575,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",575,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",576,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",576,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",576,null],[11,"into_raw","","",576,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",576,null],[11,"as_raw_c_in","","",576,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",577,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",577,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",577,null],[11,"into_raw","","",577,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",577,null],[11,"as_raw_c_in","","",577,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",632,null],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation_feedback","",578,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",578,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",578,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"from_raw","","",578,{"inputs":[{"name":"u32"}],"output":{"generics":["kind"],"name":"option"}}],[11,"to_raw","","",578,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",633,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",633,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",633,null],[11,"into_raw","","",633,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",633,null],[11,"as_raw_c_in","","",633,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",579,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",579,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",579,null],[11,"into_raw","","",579,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",579,null],[11,"as_raw_c_in","","",579,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",634,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_wm_base","",580,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",580,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",580,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",580,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",580,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",581,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",581,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",581,null],[11,"into_raw","","",581,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",581,null],[11,"as_raw_c_in","","",581,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",582,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",582,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",582,null],[11,"into_raw","","",582,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",582,null],[11,"as_raw_c_in","","",582,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",635,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_positioner","",584,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",584,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",584,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",584,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",584,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",585,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"fmt","","",585,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",585,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"from_raw","","",585,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"to_raw","","",585,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",586,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"fmt","","",586,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",586,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"from_raw","","",586,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"to_raw","","",586,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",636,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",636,null],[11,"fmt","","",636,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",636,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",636,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",636,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",636,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","don't move the child surface when constrained",636,null],[18,"SlideX","","move along the x axis until unconstrained",636,null],[18,"SlideY","","move along the y axis until unconstrained",636,null],[18,"FlipX","","invert the anchor and gravity on the x axis",636,null],[18,"FlipY","","invert the anchor and gravity on the y axis",636,null],[18,"ResizeX","","horizontally resize the surface",636,null],[18,"ResizeY","","vertically resize the surface",636,null],[11,"empty","","Returns an empty set of flags.",636,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",636,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",636,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",636,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",636,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",636,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",636,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",636,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",636,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",636,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",636,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",636,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"to_raw","","",636,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",587,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",587,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",587,null],[11,"into_raw","","",587,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",587,null],[11,"as_raw_c_in","","",587,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",637,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",637,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",637,null],[11,"into_raw","","",637,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",637,null],[11,"as_raw_c_in","","",637,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",638,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_surface","",589,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",589,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",589,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",589,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",589,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",590,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",590,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",590,null],[11,"into_raw","","",590,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",590,null],[11,"as_raw_c_in","","",590,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",591,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",591,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",591,null],[11,"into_raw","","",591,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",591,null],[11,"as_raw_c_in","","",591,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",639,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_toplevel","",593,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",593,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",593,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",593,{"inputs":[{"name":"u32"}],"output":{"generics":["resizeedge"],"name":"option"}}],[11,"to_raw","","",593,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",594,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",594,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",594,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",594,{"inputs":[{"name":"u32"}],"output":{"generics":["state"],"name":"option"}}],[11,"to_raw","","",594,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",595,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",595,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",595,null],[11,"into_raw","","",595,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",595,null],[11,"as_raw_c_in","","",595,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",596,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",596,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",596,null],[11,"into_raw","","",596,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",596,null],[11,"as_raw_c_in","","",596,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",640,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_popup","",598,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",598,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",598,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",598,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",598,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",599,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",599,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",599,null],[11,"into_raw","","",599,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",599,null],[11,"as_raw_c_in","","",599,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",600,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",600,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",600,null],[11,"into_raw","","",600,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",600,null],[11,"as_raw_c_in","","",600,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",641,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_wm_base","",602,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",602,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",602,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",602,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",602,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",603,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",603,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",603,null],[11,"into_raw","","",603,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",603,null],[11,"as_raw_c_in","","",603,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",604,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",604,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",604,null],[11,"into_raw","","",604,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",604,null],[11,"as_raw_c_in","","",604,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",642,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_positioner","",605,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",605,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",605,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",605,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",605,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",606,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"fmt","","",606,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",606,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"from_raw","","",606,{"inputs":[{"name":"u32"}],"output":{"generics":["anchor"],"name":"option"}}],[11,"to_raw","","",606,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",607,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"fmt","","",607,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",607,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"from_raw","","",607,{"inputs":[{"name":"u32"}],"output":{"generics":["gravity"],"name":"option"}}],[11,"to_raw","","",607,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",643,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",643,null],[11,"fmt","","",643,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",643,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",643,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",643,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",643,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","don't move the child surface when constrained",643,null],[18,"SlideX","","move along the x axis until unconstrained",643,null],[18,"SlideY","","move along the y axis until unconstrained",643,null],[18,"FlipX","","invert the anchor and gravity on the x axis",643,null],[18,"FlipY","","invert the anchor and gravity on the y axis",643,null],[18,"ResizeX","","horizontally resize the surface",643,null],[18,"ResizeY","","vertically resize the surface",643,null],[11,"empty","","Returns an empty set of flags.",643,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",643,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",643,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",643,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",643,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",643,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",643,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",643,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",643,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",643,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",643,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",643,{"inputs":[{"name":"u32"}],"output":{"generics":["constraintadjustment"],"name":"option"}}],[11,"to_raw","","",643,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",608,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",608,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",608,null],[11,"into_raw","","",608,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",608,null],[11,"as_raw_c_in","","",608,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",644,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",644,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",644,null],[11,"into_raw","","",644,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",644,null],[11,"as_raw_c_in","","",644,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",645,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_surface","",609,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",609,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",609,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",609,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",609,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",610,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",610,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",610,null],[11,"into_raw","","",610,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",610,null],[11,"as_raw_c_in","","",610,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",611,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",611,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",611,null],[11,"into_raw","","",611,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",611,null],[11,"as_raw_c_in","","",611,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",646,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_toplevel","",612,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",612,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",612,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",612,{"inputs":[{"name":"u32"}],"output":{"generics":["resizeedge"],"name":"option"}}],[11,"to_raw","","",612,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",613,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",613,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",613,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",613,{"inputs":[{"name":"u32"}],"output":{"generics":["state"],"name":"option"}}],[11,"to_raw","","",613,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",614,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",614,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",614,null],[11,"into_raw","","",614,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",614,null],[11,"as_raw_c_in","","",614,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",615,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",615,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",615,null],[11,"into_raw","","",615,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",615,null],[11,"as_raw_c_in","","",615,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",647,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_popup","",616,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",616,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",616,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",616,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",616,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",617,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",617,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",617,null],[11,"into_raw","","",617,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",617,null],[11,"as_raw_c_in","","",617,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",618,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",618,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",618,null],[11,"into_raw","","",618,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",618,null],[11,"as_raw_c_in","","",618,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",648,null],[11,"clone","wayland_protocols::viewporter::client::wp_viewporter","",619,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",619,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",619,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",619,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",619,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",620,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",620,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",620,null],[11,"into_raw","","",620,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",620,null],[11,"as_raw_c_in","","",620,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",649,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",649,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",649,null],[11,"into_raw","","",649,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",649,null],[11,"as_raw_c_in","","",649,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",650,null],[11,"clone","wayland_protocols::viewporter::client::wp_viewport","",622,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",622,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",622,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",622,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",622,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",623,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",623,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",623,null],[11,"into_raw","","",623,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",623,null],[11,"as_raw_c_in","","",623,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",651,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",651,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",651,null],[11,"into_raw","","",651,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",651,null],[11,"as_raw_c_in","","",651,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",652,null],[11,"clone","wayland_protocols::viewporter::server::wp_viewporter","",625,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",625,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",625,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",625,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",625,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",626,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",626,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",626,null],[11,"into_raw","","",626,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",626,null],[11,"as_raw_c_in","","",626,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",653,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",653,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",653,null],[11,"into_raw","","",653,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",653,null],[11,"as_raw_c_in","","",653,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",654,null],[11,"clone","wayland_protocols::viewporter::server::wp_viewport","",627,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",627,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",627,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",627,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",627,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",628,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",628,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",628,null],[11,"into_raw","","",628,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",628,null],[11,"as_raw_c_in","","",628,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",655,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",655,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",655,null],[11,"into_raw","","",655,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",655,null],[11,"as_raw_c_in","","",655,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",656,null]],"paths":[[4,"Error"],[4,"FitMethod"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"FitMethod"],[4,"Request"],[4,"Event"],[3,"ZwwBackgroundV1"],[4,"Event"],[3,"ZwwBackgroundV1"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwwBackgroundV2"],[4,"Event"],[3,"ZwwBackgroundV2"],[4,"Error"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Position"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwwDockManagerV1"],[3,"ZwwDockV1"],[4,"Event"],[3,"ZwwDockManagerV1"],[3,"ZwwDockV1"],[4,"Error"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Position"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwwDockManagerV2"],[3,"ZwwDockV2"],[4,"Event"],[3,"ZwwDockManagerV2"],[3,"ZwwDockV2"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwwLauncherMenuV1"],[3,"ZwwLauncherMenuV1"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[3,"ZwwNotificationAreaV1"],[4,"Event"],[3,"ZwwNotificationV1"],[3,"ZwwNotificationAreaV1"],[4,"Event"],[3,"ZwwNotificationV1"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwwWindowSwitcherV1"],[3,"ZwwWindowSwitcherWindowV1"],[3,"ZwwWindowSwitcherV1"],[3,"ZwwWindowSwitcherWindowV1"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[4,"Request"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"ZwpFullscreenShellV1"],[4,"Request"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Request"],[4,"Position"],[4,"Request"],[3,"ZwpInputMethodContextV1"],[4,"Request"],[3,"ZwpInputMethodV1"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[3,"ZwpInputMethodContextV1"],[4,"Request"],[3,"ZwpInputMethodV1"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[4,"Request"],[3,"ZwpTextInputV1"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[3,"WpPresentation"],[4,"Request"],[3,"WpPresentationFeedback"],[3,"WpPresentation"],[4,"Request"],[3,"WpPresentationFeedback"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"XdgPositioner"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"XdgPositioner"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"]]};
searchIndex["wayland_scanner"] = {"doc":"Wayland scanner crate","items":[[4,"Side","wayland_scanner","Side to generate",null,null],[13,"Client","","wayland client applications",0,null],[13,"Server","","wayland compositors",0,null],[5,"generate_c_interfaces","","Generate the interfaces for a protocol",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":null}],[5,"generate_rust_code","","Generate the code for a protocol using the Rust implementation",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[5,"generate_c_code","","Generate the code for a protocol using the C system libs",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[5,"generate_c_interfaces_streams","","Generate the interfaces for a protocol from/to IO streams",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":null}],[5,"generate_rust_code_streams","","Generate the code for a protocol from/to IO streams using the rust implementation",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[5,"generate_c_code_streams","","Generate the code for a protocol from/to IO streams using the C system libs",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"side"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"side"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"Side"]]};
searchIndex["wayland_server"] = {"doc":"Server-side Wayland connector","items":[[5,"downcast_impl","wayland_server","Attempt to downcast a boxed `Implementation` trait object.",null,{"inputs":[{"generics":["implementation"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[3,"AnonymousObject","","Anonymous interface",null,null],[8,"Implementation","","Trait representing implementations for wayland objects",null,null],[10,"receive","","Receive a message",0,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",1,null],[16,"Event","","Set of events associated to this interface",1,null],[18,"NAME","","Name of this interface",1,null],[18,"VERSION","","Maximum supported version of this interface",1,null],[10,"c_interface","","Pointer to the C representation of this interface",1,null],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",2,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",2,null],[10,"is_destructor","","Whether this message is a destructor",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"child","","Retrieve the child `Object` associated with this message if any",2,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[10,"from_raw","","Construct a message from its raw representation",2,null],[10,"into_raw","","Turn this message into its raw representation",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[10,"from_raw_c","","Construct a message of this group from its C representation",2,null],[10,"as_raw_c_in","","Build a C representation of this message",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"Client","","A handle to a client connected to your server",null,null],[3,"Display","","The wayland display",null,null],[3,"EventLoop","","An event loop",null,null],[3,"LoopSignal","","An event loop signal",null,null],[3,"LoopToken","","An event loop token",null,null],[3,"Global","","A handle to a global object",null,null],[3,"NewResource","","A newly-created resource that needs implementation",null,null],[3,"Resource","","An handle to a wayland resource",null,null],[4,"ResourceMap","","",null,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"from_ptr","","Create a client from a `wayland-server.so` pointer",3,null],[11,"c_ptr","","Retrieve a pointer to the underlying `wl_client` of `wayland-server.so`",3,null],[11,"alive","","Check whether this client is still connected to the server",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"equals","","Check whether this client handle refers to the same client as an other",3,{"inputs":[{"name":"self"},{"name":"client"}],"output":{"name":"bool"}}],[11,"flush","","Flush the pending events to this client",3,{"inputs":[{"name":"self"}],"output":null}],[11,"kill","","Kills this client",3,{"inputs":[{"name":"self"}],"output":null}],[11,"set_user_data","","Associate an arbitrary payload to this client",3,null],[11,"get_user_data","","Retrieve the arbitrary payload associated to this client",3,null],[11,"set_destructor","","Set a destructor for this client",3,null],[11,"create_resource","","Create a new resource for this client",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["newresource"],"name":"option"}}],[11,"new","","Create a new display",4,null],[11,"create_global","","Create a new global object",4,{"inputs":[{"name":"self"},{"name":"looptoken"},{"name":"u32"},{"name":"impl"}],"output":{"name":"global"}}],[11,"flush_clients","","Flush events to the clients",4,{"inputs":[{"name":"self"}],"output":null}],[11,"add_socket","","Add a listening socket to this display",4,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"ioresult"}}],[11,"add_socket_auto","","Add an automatically named listening socket to this display",4,{"inputs":[{"name":"self"}],"output":{"generics":["osstring"],"name":"ioresult"}}],[11,"add_socket_from","","Add existing listening socket to this display",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ioresult"}}],[11,"add_socket_fd","","Add existing listening socket to this display from a raw file descriptor",4,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"ioresult"}}],[11,"create_client","","Create a new client to this display from an already-existing connected Fd",4,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"client"}}],[11,"c_ptr","","Retrieve a pointer from the C lib to this `wl_display`",4,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"looptoken"}}],[11,"stop","","Signal the event loop to stop running",6,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new event loop",7,{"inputs":[],"output":{"name":"eventloop"}}],[11,"token","","Retrieve a `LoopToken` associated to this event loop",7,{"inputs":[{"name":"self"}],"output":{"name":"looptoken"}}],[11,"signal","","Retrieve a `LoopSignal` associated to this event loop",7,{"inputs":[{"name":"self"}],"output":{"name":"loopsignal"}}],[11,"dispatch","","Dispatch pending requests to their respective handlers",7,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"option"}],"output":{"generics":["u32"],"name":"ioresult"}}],[11,"run","","Runs the event loop",7,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"add_fd_event_source","","Add a File Descriptor event source to this event loop",5,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"fdinterest"},{"name":"impl"}],"output":{"generics":["source"],"name":"result"}}],[11,"add_timer_event_source","","Add a timer event source to this event loop",5,{"inputs":[{"name":"self"},{"name":"impl"}],"output":{"generics":["source"],"name":"result"}}],[11,"add_signal_event_source","","Add a signal event source to this event loop",5,{"inputs":[{"name":"self"},{"name":"signal"},{"name":"impl"}],"output":{"generics":["source"],"name":"result"}}],[11,"add_idle_event_source","","Add an idle event source to this event loop",5,{"inputs":[{"name":"self"},{"name":"impl"}],"output":{"name":"idlesource"}}],[11,"destroy","","Destroy the associated global object.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"resource"}],"output":{"name":"bool"}}],[11,"send","","Send an event through this object",9,null],[11,"is_alive","","Check if the object associated with this resource is still alive",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"version","","Retrieve the interface version of this wayland object instance",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"equals","","Check if the other resource refers to the same underlying wayland object",9,{"inputs":[{"name":"self"},{"name":"resource"}],"output":{"name":"bool"}}],[11,"same_client_as","","Check if this resource and the other belong to the same client",9,{"inputs":[{"name":"self"},{"name":"resource"}],"output":{"name":"bool"}}],[11,"post_error","","Posts a protocol error to this resource",9,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"set_user_data","","Associate an arbitrary payload to this object",9,null],[11,"get_user_data","","Retrieve the arbitrary payload associated to this object",9,null],[11,"client","","Retrieve an handle to the client associated with this resource",9,{"inputs":[{"name":"self"}],"output":{"generics":["client"],"name":"option"}}],[11,"id","","Retrieve the object id of this wayland object",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_implemented_with","","Check whether this resource has been implemented with given type",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_external","","Check whether this resource is managed by the library or not",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",9,null],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",9,null],[11,"implement","","Implement this resource using given function, destructor, and implementation data.",10,{"inputs":[{"name":"self"},{"name":"impl"},{"name":"option"}],"output":{"name":"resource"}}],[11,"implement_nonsend","","Implement this resource using given function and implementation data.",10,{"inputs":[{"name":"self"},{"name":"impl"},{"name":"option"},{"name":"looptoken"}],"output":{"name":"resource"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",10,null],[11,"from_c_ptr","","Create a `NewResource` instance from a C pointer.",10,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[0,"sources","","Event sources related functionnality",null,null],[3,"Source","wayland_server::sources","A handle to an event source",null,null],[3,"FdInterest","","Flags to register interest on a file descriptor",null,null],[3,"TimerEvent","","A timer generated event.",null,null],[3,"SignalEvent","","An event generated by an UNIX signal event source",null,null],[12,"0","","",11,null],[3,"IdleSource","","Idle event source",null,null],[4,"FdEvent","","An event generated by an FD event source",null,null],[13,"Ready","","The FD is ready to be acted upon",12,null],[12,"fd","wayland_server::sources::FdEvent","The concerned FD",12,null],[12,"mask","","Mask indicating if the FD is ready for reading or writing",12,null],[13,"Error","wayland_server::sources","An error occured while polling the FD",12,null],[12,"fd","wayland_server::sources::FdEvent","The concerned FD",12,null],[12,"error","","The reported error",12,null],[11,"eq","wayland_server::sources","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"fdinterest"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"ordering"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"READ","","Interest to be notified when the file descriptor is readable",13,null],[18,"WRITE","","Interest to be notified when the file descriptor is writable",13,null],[11,"empty","","Returns an empty set of flags.",13,{"inputs":[],"output":{"name":"fdinterest"}}],[11,"all","","Returns the set containing all flags.",13,{"inputs":[],"output":{"name":"fdinterest"}}],[11,"bits","","Returns the raw value of the flags currently stored.",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",13,{"inputs":[{"name":"u32"}],"output":{"generics":["fdinterest"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",13,{"inputs":[{"name":"u32"}],"output":{"name":"fdinterest"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitor_assign","","Adds the set of flags.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitxor_assign","","Toggles the set of flags.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"sub_assign","","Disables all flags enabled in the set.",13,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",13,{"inputs":[{"name":"self"}],"output":{"name":"fdinterest"}}],[11,"extend","","",13,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",13,{"inputs":[{"name":"t"}],"output":{"name":"fdinterest"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"update_mask","","Change the registered interest for this FD",14,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"remove","","Remove this event source from the event loop",14,{"inputs":[{"name":"self"}],"output":{"generics":["implementation"],"name":"box"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"timerevent"}}],[11,"set_delay_ms","","Set the delay of this timer",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"remove","","Remove this event source from the event loop",14,{"inputs":[{"name":"self"}],"output":{"generics":["implementation"],"name":"box"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"signalevent"}}],[11,"remove","","Remove this event source from the event loop",14,{"inputs":[{"name":"self"}],"output":{"generics":["implementation"],"name":"box"}}],[11,"remove","","Remove this event source from its event loop",16,{"inputs":[{"name":"self"}],"output":{"generics":["implementation"],"name":"box"}}],[0,"sys","wayland_server","C-associated types",null,null],[0,"common","wayland_server::sys","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_server::sys::common","",null,null],[12,"name","","",17,null],[12,"signature","","",17,null],[12,"types","","",17,null],[3,"wl_interface","","",null,null],[12,"name","","",18,null],[12,"version","","",18,null],[12,"request_count","","",18,null],[12,"requests","","",18,null],[12,"event_count","","",18,null],[12,"events","","",18,null],[3,"wl_list","","",null,null],[12,"prev","","",19,null],[12,"next","","",19,null],[3,"wl_array","","",null,null],[12,"size","","",20,null],[12,"alloc","","",20,null],[12,"data","","",20,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"i32"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[19,"wl_argument","","",null,null],[12,"i","","",21,null],[12,"u","","",21,null],[12,"f","","",21,null],[12,"s","","",21,null],[12,"o","","",21,null],[12,"n","","",21,null],[12,"a","","",21,null],[12,"h","","",21,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",null,null],[4,"wl_client","wayland_server::sys::server","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[6,"wl_event_loop_fd_func_t","","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[3,"wl_listener","","",null,null],[12,"link","","",22,null],[12,"notify","","",22,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",23,null],[3,"WaylandServer","","",null,null],[12,"wl_client_flush","","",24,null],[12,"wl_client_destroy","","",24,null],[12,"wl_client_get_display","","",24,null],[12,"wl_client_get_credentials","","",24,null],[12,"wl_client_get_object","","",24,null],[12,"wl_client_add_destroy_listener","","",24,null],[12,"wl_client_get_destroy_listener","","",24,null],[12,"wl_client_post_no_memory","","",24,null],[12,"wl_resource_create","","",24,null],[12,"wl_client_create","","",24,null],[12,"wl_display_create","","",24,null],[12,"wl_display_destroy","","",24,null],[12,"wl_display_get_serial","","",24,null],[12,"wl_display_next_serial","","",24,null],[12,"wl_display_add_socket","","",24,null],[12,"wl_display_add_socket_auto","","",24,null],[12,"wl_display_add_socket_fd","","",24,null],[12,"wl_display_add_shm_format","","",24,null],[12,"wl_display_get_event_loop","","",24,null],[12,"wl_display_terminate","","",24,null],[12,"wl_display_run","","",24,null],[12,"wl_display_flush_clients","","",24,null],[12,"wl_display_add_destroy_listener","","",24,null],[12,"wl_display_get_destroy_listener","","",24,null],[12,"wl_global_create","","",24,null],[12,"wl_display_init_shm","","",24,null],[12,"wl_display_add_client_created_listener","","",24,null],[12,"wl_event_loop_create","","",24,null],[12,"wl_event_loop_destroy","","",24,null],[12,"wl_event_loop_add_fd","","",24,null],[12,"wl_event_loop_add_timer","","",24,null],[12,"wl_event_loop_add_signal","","",24,null],[12,"wl_event_loop_dispatch","","",24,null],[12,"wl_event_loop_dispatch_idle","","",24,null],[12,"wl_event_loop_add_idle","","",24,null],[12,"wl_event_loop_get_fd","","",24,null],[12,"wl_event_loop_add_destroy_listener","","",24,null],[12,"wl_event_loop_get_destroy_listener","","",24,null],[12,"wl_event_source_fd_update","","",24,null],[12,"wl_event_source_timer_update","","",24,null],[12,"wl_event_source_remove","","",24,null],[12,"wl_event_source_check","","",24,null],[12,"wl_global_destroy","","",24,null],[12,"wl_resource_post_event_array","","",24,null],[12,"wl_resource_queue_event_array","","",24,null],[12,"wl_resource_post_no_memory","","",24,null],[12,"wl_resource_set_implementation","","",24,null],[12,"wl_resource_set_dispatcher","","",24,null],[12,"wl_resource_destroy","","",24,null],[12,"wl_resource_get_client","","",24,null],[12,"wl_resource_get_id","","",24,null],[12,"wl_resource_get_link","","",24,null],[12,"wl_resource_from_link","","",24,null],[12,"wl_resource_find_for_client","","",24,null],[12,"wl_resource_set_user_data","","",24,null],[12,"wl_resource_get_user_data","","",24,null],[12,"wl_resource_get_version","","",24,null],[12,"wl_resource_set_destructor","","",24,null],[12,"wl_resource_instance_of","","",24,null],[12,"wl_resource_add_destroy_listener","","",24,null],[12,"wl_resource_get_destroy_listener","","",24,null],[12,"wl_shm_buffer_begin_access","","",24,null],[12,"wl_shm_buffer_end_access","","",24,null],[12,"wl_shm_buffer_get","","",24,null],[12,"wl_shm_buffer_get_data","","",24,null],[12,"wl_shm_buffer_get_stride","","",24,null],[12,"wl_shm_buffer_get_format","","",24,null],[12,"wl_shm_buffer_get_width","","",24,null],[12,"wl_shm_buffer_get_height","","",24,null],[12,"wl_log_set_handler_server","","",24,null],[12,"wl_list_init","","",24,null],[12,"wl_list_insert","","",24,null],[12,"wl_list_remove","","",24,null],[12,"wl_list_length","","",24,null],[12,"wl_list_empty","","",24,null],[12,"wl_list_insert_list","","",24,null],[12,"wl_array_init","","",24,null],[12,"wl_array_release","","",24,null],[12,"wl_array_add","","",24,null],[12,"wl_array_copy","","",24,null],[12,"wl_resource_post_event","","",24,null],[12,"wl_resource_queue_event","","",24,null],[12,"wl_resource_post_error","","",24,null],[3,"WAYLAND_SERVER_OPTION","","",null,null],[3,"WAYLAND_SERVER_HANDLE","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"signal","","",null,null],[5,"wl_signal_init","wayland_server::sys::server::signal","",null,null],[5,"wl_signal_add","","",null,null],[5,"wl_signal_get","","",null,null],[5,"wl_signal_emit","","",null,null],[5,"rust_listener_create","","",null,null],[5,"rust_listener_get_user_data","","",null,null],[5,"rust_listener_set_user_data","","",null,null],[5,"rust_listener_destroy","","",null,null],[0,"protocol_interfaces","wayland_server::sys","",null,null],[7,"wl_display_requests","wayland_server::sys::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[11,"get","wayland_server","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["resource"],"name":"option"}}],[11,"get_new","","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["newresource"],"name":"option"}}],[0,"protocol","","Generated interfaces for the core wayland protocol",null,null],[0,"wl_callback","wayland_server::protocol","callback object",null,null],[3,"WlCallback","wayland_server::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",26,null],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",26,null],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",27,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",27,null],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",27,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",27,null],[4,"Event","wayland_server::protocol::wl_compositor","",null,null],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",28,null],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",28,null],[12,"offset","","",28,null],[12,"width","","",28,null],[12,"height","","",28,null],[12,"stride","","",28,null],[12,"format","","",28,null],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",28,null],[13,"Resize","","change the size of the pool mapping",28,null],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",28,null],[4,"Event","wayland_server::protocol::wl_shm_pool","",null,null],[0,"wl_shm","wayland_server::protocol","shared memory support",null,null],[3,"WlShm","wayland_server::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",29,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",29,null],[13,"InvalidFd","","mmapping the file descriptor failed",29,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",30,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",30,null],[13,"C8","","8-bit color index format, [7:0] C",30,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",30,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",30,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",30,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",30,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",30,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",30,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",30,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",30,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",30,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",30,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",30,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",30,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",30,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",30,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",30,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",30,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",30,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",30,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",30,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",30,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",30,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",30,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",30,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",30,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",30,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",30,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",30,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",30,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",30,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",30,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",30,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",30,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",30,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",30,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",30,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",30,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",30,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",30,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",30,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",30,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",30,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",30,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",30,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",30,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",30,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",30,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",30,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",30,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",30,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",30,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",30,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",30,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",30,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",30,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",30,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",31,null],[12,"id","wayland_server::protocol::wl_shm::Request","",31,null],[12,"fd","","",31,null],[12,"size","","",31,null],[4,"Event","wayland_server::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",32,null],[12,"format","wayland_server::protocol::wl_shm::Event","",32,null],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",33,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",34,null],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",35,null],[13,"InvalidActionMask","","action mask contains invalid values",35,null],[13,"InvalidAction","","action argument has an invalid value",35,null],[13,"InvalidOffer","","offer doesn't accept this request",35,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",36,null],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",36,null],[12,"mime_type","","",36,null],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",36,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",36,null],[12,"fd","","",36,null],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",36,null],[13,"Finish","","the offer will no longer be used",36,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",36,null],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",36,null],[12,"preferred_action","","",36,null],[4,"Event","wayland_server::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",37,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",37,null],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",37,null],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",37,null],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",37,null],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",37,null],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",38,null],[13,"InvalidSource","","source doesn't accept this request",38,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",39,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",39,null],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",39,null],[13,"SetActions","","set the available drag-and-drop actions",39,null],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",39,null],[4,"Event","wayland_server::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",40,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",40,null],[13,"Send","wayland_server::protocol::wl_data_source","send the data",40,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",40,null],[12,"fd","","",40,null],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",40,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",40,null],[13,"DndFinished","","the drag-and-drop operation concluded",40,null],[13,"Action","","notify the selected action",40,null],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",40,null],[0,"wl_data_device","wayland_server::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",41,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",42,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",42,null],[12,"origin","","",42,null],[12,"icon","","",42,null],[12,"serial","","",42,null],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",42,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",42,null],[12,"serial","","",42,null],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",42,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",43,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",43,null],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",43,null],[12,"serial","wayland_server::protocol::wl_data_device::Event","",43,null],[12,"surface","","",43,null],[12,"x","","",43,null],[12,"y","","",43,null],[12,"id","","",43,null],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",43,null],[13,"Motion","","drag-and-drop session motion",43,null],[12,"time","wayland_server::protocol::wl_data_device::Event","",43,null],[12,"x","","",43,null],[12,"y","","",43,null],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",43,null],[13,"Selection","","advertise new selection",43,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",43,null],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",null,null],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",44,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",44,null],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",44,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",44,null],[12,"seat","","",44,null],[4,"Event","wayland_server::protocol::wl_data_device_manager","",null,null],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_server::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",45,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",46,null],[12,"id","wayland_server::protocol::wl_shell::Request","",46,null],[12,"surface","","",46,null],[4,"Event","wayland_server::protocol::wl_shell","",null,null],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",47,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",47,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",47,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",47,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",48,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",48,null],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",48,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",48,null],[12,"serial","","",48,null],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",48,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",48,null],[12,"serial","","",48,null],[12,"edges","","",48,null],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",48,null],[13,"SetTransient","","make the surface a transient surface",48,null],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",48,null],[12,"x","","",48,null],[12,"y","","",48,null],[12,"flags","","",48,null],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",48,null],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",48,null],[12,"framerate","","",48,null],[12,"output","","",48,null],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",48,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",48,null],[12,"serial","","",48,null],[12,"parent","","",48,null],[12,"x","","",48,null],[12,"y","","",48,null],[12,"flags","","",48,null],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",48,null],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",48,null],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",48,null],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",48,null],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",48,null],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",48,null],[4,"Event","wayland_server::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",49,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",49,null],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",49,null],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",49,null],[12,"width","","",49,null],[12,"height","","",49,null],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",49,null],[0,"wl_surface","wayland_server::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_server::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",50,null],[13,"InvalidTransform","","buffer transform value is invalid",50,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",51,null],[13,"Attach","","set the surface contents",51,null],[12,"buffer","wayland_server::protocol::wl_surface::Request","",51,null],[12,"x","","",51,null],[12,"y","","",51,null],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",51,null],[12,"x","wayland_server::protocol::wl_surface::Request","",51,null],[12,"y","","",51,null],[12,"width","","",51,null],[12,"height","","",51,null],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",51,null],[12,"callback","wayland_server::protocol::wl_surface::Request","",51,null],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",51,null],[12,"region","wayland_server::protocol::wl_surface::Request","",51,null],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",51,null],[12,"region","wayland_server::protocol::wl_surface::Request","",51,null],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",51,null],[13,"SetBufferTransform","","sets the buffer transformation",51,null],[12,"transform","wayland_server::protocol::wl_surface::Request","",51,null],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",51,null],[12,"scale","wayland_server::protocol::wl_surface::Request","",51,null],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",51,null],[12,"x","wayland_server::protocol::wl_surface::Request","",51,null],[12,"y","","",51,null],[12,"width","","",51,null],[12,"height","","",51,null],[4,"Event","wayland_server::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",52,null],[12,"output","wayland_server::protocol::wl_surface::Event","",52,null],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",52,null],[12,"output","wayland_server::protocol::wl_surface::Event","",52,null],[0,"wl_seat","wayland_server::protocol","group of input devices",null,null],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",53,null],[12,"id","wayland_server::protocol::wl_seat::Request","",53,null],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",53,null],[12,"id","wayland_server::protocol::wl_seat::Request","",53,null],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",53,null],[12,"id","wayland_server::protocol::wl_seat::Request","",53,null],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",53,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",54,null],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",54,null],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",54,null],[12,"name","wayland_server::protocol::wl_seat::Event","",54,null],[0,"wl_pointer","wayland_server::protocol","pointer input device",null,null],[3,"WlPointer","wayland_server::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",55,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",56,null],[13,"Pressed","","the button is pressed",56,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",57,null],[13,"HorizontalScroll","","horizontal axis",57,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel",58,null],[13,"Finger","","finger on a touch surface",58,null],[13,"Continuous","","continuous coordinate space",58,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",59,null],[12,"serial","wayland_server::protocol::wl_pointer::Request","",59,null],[12,"surface","","",59,null],[12,"hotspot_x","","",59,null],[12,"hotspot_y","","",59,null],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",59,null],[4,"Event","","",null,null],[13,"Enter","","enter event",60,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",60,null],[12,"surface","","",60,null],[12,"surface_x","","",60,null],[12,"surface_y","","",60,null],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",60,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",60,null],[12,"surface","","",60,null],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",60,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",60,null],[12,"surface_x","","",60,null],[12,"surface_y","","",60,null],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",60,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",60,null],[12,"time","","",60,null],[12,"button","","",60,null],[12,"state","","",60,null],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",60,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",60,null],[12,"axis","","",60,null],[12,"value","","",60,null],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",60,null],[13,"AxisSource","","axis source event",60,null],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",60,null],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",60,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",60,null],[12,"axis","","",60,null],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",60,null],[12,"axis","wayland_server::protocol::wl_pointer::Event","",60,null],[12,"discrete","","",60,null],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",61,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",61,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",62,null],[13,"Pressed","","key is pressed",62,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",63,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",64,null],[12,"format","wayland_server::protocol::wl_keyboard::Event","",64,null],[12,"fd","","",64,null],[12,"size","","",64,null],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",64,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",64,null],[12,"surface","","",64,null],[12,"keys","","",64,null],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",64,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",64,null],[12,"surface","","",64,null],[13,"Key","wayland_server::protocol::wl_keyboard","key event",64,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",64,null],[12,"time","","",64,null],[12,"key","","",64,null],[12,"state","","",64,null],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",64,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",64,null],[12,"mods_depressed","","",64,null],[12,"mods_latched","","",64,null],[12,"mods_locked","","",64,null],[12,"group","","",64,null],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",64,null],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",64,null],[12,"delay","","",64,null],[0,"wl_touch","wayland_server::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_server::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",65,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",66,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",66,null],[12,"time","","",66,null],[12,"surface","","",66,null],[12,"id","","",66,null],[12,"x","","",66,null],[12,"y","","",66,null],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",66,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",66,null],[12,"time","","",66,null],[12,"id","","",66,null],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",66,null],[12,"time","wayland_server::protocol::wl_touch::Event","",66,null],[12,"id","","",66,null],[12,"x","","",66,null],[12,"y","","",66,null],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",66,null],[13,"Cancel","","touch session cancelled",66,null],[0,"wl_output","wayland_server::protocol","compositor output region",null,null],[3,"Mode","wayland_server::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",67,null],[13,"None","","no geometry",67,null],[13,"HorizontalRgb","","horizontal RGB",67,null],[13,"HorizontalBgr","","horizontal BGR",67,null],[13,"VerticalRgb","","vertical RGB",67,null],[13,"VerticalBgr","","vertical BGR",67,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",68,null],[13,"_90","","90 degrees counter-clockwise",68,null],[13,"_180","","180 degrees counter-clockwise",68,null],[13,"_270","","270 degrees counter-clockwise",68,null],[13,"Flipped","","180 degree flip around a vertical axis",68,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",68,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",68,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",68,null],[4,"Request","","",null,null],[13,"Release","","release the output object",69,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",70,null],[12,"x","wayland_server::protocol::wl_output::Event","",70,null],[12,"y","","",70,null],[12,"physical_width","","",70,null],[12,"physical_height","","",70,null],[12,"subpixel","","",70,null],[12,"make","","",70,null],[12,"model","","",70,null],[12,"transform","","",70,null],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",70,null],[12,"flags","wayland_server::protocol::wl_output::Event","",70,null],[12,"width","","",70,null],[12,"height","","",70,null],[12,"refresh","","",70,null],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",70,null],[13,"Scale","","output scaling properties",70,null],[12,"factor","wayland_server::protocol::wl_output::Event","",70,null],[0,"wl_region","wayland_server::protocol","region interface",null,null],[3,"WlRegion","wayland_server::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",71,null],[13,"Add","","add rectangle to region",71,null],[12,"x","wayland_server::protocol::wl_region::Request","",71,null],[12,"y","","",71,null],[12,"width","","",71,null],[12,"height","","",71,null],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",71,null],[12,"x","wayland_server::protocol::wl_region::Request","",71,null],[12,"y","","",71,null],[12,"width","","",71,null],[12,"height","","",71,null],[4,"Event","wayland_server::protocol::wl_region","",null,null],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",72,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",73,null],[13,"GetSubsurface","","give a surface the role sub-surface",73,null],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",73,null],[12,"surface","","",73,null],[12,"parent","","",73,null],[4,"Event","wayland_server::protocol::wl_subcompositor","",null,null],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",74,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",75,null],[13,"SetPosition","","reposition the sub-surface",75,null],[12,"x","wayland_server::protocol::wl_subsurface::Request","",75,null],[12,"y","","",75,null],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",75,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",75,null],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",75,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",75,null],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",75,null],[13,"SetDesync","","set sub-surface to desynchronized mode",75,null],[4,"Event","","",null,null],[11,"is_destructor","wayland_server::protocol::wl_callback","",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",76,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",76,null],[11,"into_raw","","",76,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",76,null],[11,"as_raw_c_in","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",26,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",26,null],[11,"into_raw","","",26,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",26,null],[11,"as_raw_c_in","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",77,null],[11,"is_destructor","wayland_server::protocol::wl_compositor","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",27,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",27,null],[11,"into_raw","","",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",27,null],[11,"as_raw_c_in","","",27,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",78,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",78,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",78,null],[11,"into_raw","","",78,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",78,null],[11,"as_raw_c_in","","",78,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",79,null],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",28,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",28,null],[11,"into_raw","","",28,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",28,null],[11,"as_raw_c_in","","",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",80,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",80,null],[11,"into_raw","","",80,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",80,null],[11,"as_raw_c_in","","",80,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",81,null],[11,"clone","wayland_server::protocol::wl_shm","",29,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",29,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"from_raw","","",30,{"inputs":[{"name":"u32"}],"output":{"generics":["format"],"name":"option"}}],[11,"to_raw","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",31,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",31,null],[11,"into_raw","","",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",31,null],[11,"as_raw_c_in","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",32,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",32,null],[11,"into_raw","","",32,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",32,null],[11,"as_raw_c_in","","",32,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",82,null],[11,"is_destructor","wayland_server::protocol::wl_buffer","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",33,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",33,null],[11,"into_raw","","",33,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",33,null],[11,"as_raw_c_in","","",33,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",34,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",34,null],[11,"into_raw","","",34,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",34,null],[11,"as_raw_c_in","","",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",83,null],[11,"clone","wayland_server::protocol::wl_data_offer","",35,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",35,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",36,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",36,null],[11,"into_raw","","",36,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",36,null],[11,"as_raw_c_in","","",36,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",37,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",37,null],[11,"into_raw","","",37,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",37,null],[11,"as_raw_c_in","","",37,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",84,null],[11,"clone","wayland_server::protocol::wl_data_source","",38,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",38,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",39,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",39,null],[11,"into_raw","","",39,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",39,null],[11,"as_raw_c_in","","",39,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",40,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",40,null],[11,"into_raw","","",40,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",40,null],[11,"as_raw_c_in","","",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",85,null],[11,"clone","wayland_server::protocol::wl_data_device","",41,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",41,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",42,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",42,null],[11,"into_raw","","",42,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",42,null],[11,"as_raw_c_in","","",42,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",43,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",43,null],[11,"into_raw","","",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",43,null],[11,"as_raw_c_in","","",43,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",86,null],[11,"eq","wayland_server::protocol::wl_data_device_manager","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"partial_cmp","","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"le","","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"gt","","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ge","","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"cmp","","",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"ordering"}}],[11,"hash","","",87,null],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no action",87,null],[18,"Copy","","copy action",87,null],[18,"Move","","move action",87,null],[18,"Ask","","ask action",87,null],[11,"empty","","Returns an empty set of flags.",87,{"inputs":[],"output":{"name":"dndaction"}}],[11,"all","","Returns the set containing all flags.",87,{"inputs":[],"output":{"name":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",87,{"inputs":[{"name":"u32"}],"output":{"generics":["dndaction"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",87,{"inputs":[{"name":"u32"}],"output":{"name":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",87,{"inputs":[{"name":"self"},{"name":"dndaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",87,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",87,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"extend","","",87,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",87,{"inputs":[{"name":"t"}],"output":{"name":"dndaction"}}],[11,"from_raw","","",87,{"inputs":[{"name":"u32"}],"output":{"generics":["dndaction"],"name":"option"}}],[11,"to_raw","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",44,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",44,null],[11,"into_raw","","",44,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",44,null],[11,"as_raw_c_in","","",44,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",88,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",88,null],[11,"into_raw","","",88,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",88,null],[11,"as_raw_c_in","","",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",89,null],[11,"clone","wayland_server::protocol::wl_shell","",45,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",45,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",46,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",46,null],[11,"into_raw","","",46,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",46,null],[11,"as_raw_c_in","","",46,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",90,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",90,null],[11,"into_raw","","",90,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",90,null],[11,"as_raw_c_in","","",90,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",91,null],[11,"eq","wayland_server::protocol::wl_shell_surface","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"le","","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"gt","","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ge","","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"cmp","","",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"ordering"}}],[11,"hash","","",92,null],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no edge",92,null],[18,"Top","","top edge",92,null],[18,"Bottom","","bottom edge",92,null],[18,"Left","","left edge",92,null],[18,"TopLeft","","top and left edges",92,null],[18,"BottomLeft","","bottom and left edges",92,null],[18,"Right","","right edge",92,null],[18,"TopRight","","top and right edges",92,null],[18,"BottomRight","","bottom and right edges",92,null],[11,"empty","","Returns an empty set of flags.",92,{"inputs":[],"output":{"name":"resize"}}],[11,"all","","Returns the set containing all flags.",92,{"inputs":[],"output":{"name":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",92,{"inputs":[{"name":"u32"}],"output":{"generics":["resize"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",92,{"inputs":[{"name":"u32"}],"output":{"name":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",92,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",92,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",92,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"extend","","",92,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",92,{"inputs":[{"name":"t"}],"output":{"name":"resize"}}],[11,"from_raw","","",92,{"inputs":[{"name":"u32"}],"output":{"generics":["resize"],"name":"option"}}],[11,"to_raw","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"cmp","","",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"ordering"}}],[11,"hash","","",93,null],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Inactive","","do not set keyboard focus",93,null],[11,"empty","","Returns an empty set of flags.",93,{"inputs":[],"output":{"name":"transient"}}],[11,"all","","Returns the set containing all flags.",93,{"inputs":[],"output":{"name":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",93,{"inputs":[{"name":"u32"}],"output":{"generics":["transient"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",93,{"inputs":[{"name":"u32"}],"output":{"name":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",93,{"inputs":[{"name":"self"},{"name":"transient"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",93,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",93,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"extend","","",93,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",93,{"inputs":[{"name":"t"}],"output":{"name":"transient"}}],[11,"from_raw","","",93,{"inputs":[{"name":"u32"}],"output":{"generics":["transient"],"name":"option"}}],[11,"to_raw","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmethod"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",47,{"inputs":[{"name":"u32"}],"output":{"generics":["fullscreenmethod"],"name":"option"}}],[11,"to_raw","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",48,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",48,null],[11,"into_raw","","",48,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",48,null],[11,"as_raw_c_in","","",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",49,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",49,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",49,null],[11,"into_raw","","",49,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",49,null],[11,"as_raw_c_in","","",49,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",94,null],[11,"clone","wayland_server::protocol::wl_surface","",50,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",50,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",51,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",51,null],[11,"into_raw","","",51,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",51,null],[11,"as_raw_c_in","","",51,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",52,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",52,null],[11,"into_raw","","",52,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",52,null],[11,"as_raw_c_in","","",52,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",95,null],[11,"eq","wayland_server::protocol::wl_seat","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"cmp","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"ordering"}}],[11,"hash","","",96,null],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Pointer","","the seat has pointer devices",96,null],[18,"Keyboard","","the seat has one or more keyboards",96,null],[18,"Touch","","the seat has touch devices",96,null],[11,"empty","","Returns an empty set of flags.",96,{"inputs":[],"output":{"name":"capability"}}],[11,"all","","Returns the set containing all flags.",96,{"inputs":[],"output":{"name":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",96,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",96,{"inputs":[{"name":"u32"}],"output":{"name":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",96,{"inputs":[{"name":"self"},{"name":"capability"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",96,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"extend","","",96,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",96,{"inputs":[{"name":"t"}],"output":{"name":"capability"}}],[11,"from_raw","","",96,{"inputs":[{"name":"u32"}],"output":{"generics":["capability"],"name":"option"}}],[11,"to_raw","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",53,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",53,null],[11,"into_raw","","",53,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",53,null],[11,"as_raw_c_in","","",53,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",54,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",54,null],[11,"into_raw","","",54,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",54,null],[11,"as_raw_c_in","","",54,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",97,null],[11,"clone","wayland_server::protocol::wl_pointer","",55,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",55,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",56,{"inputs":[{"name":"u32"}],"output":{"generics":["buttonstate"],"name":"option"}}],[11,"to_raw","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"from_raw","","",57,{"inputs":[{"name":"u32"}],"output":{"generics":["axis"],"name":"option"}}],[11,"to_raw","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"axissource"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"bool"}}],[11,"from_raw","","",58,{"inputs":[{"name":"u32"}],"output":{"generics":["axissource"],"name":"option"}}],[11,"to_raw","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",59,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",59,null],[11,"into_raw","","",59,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",59,null],[11,"as_raw_c_in","","",59,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",60,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",60,null],[11,"into_raw","","",60,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",60,null],[11,"as_raw_c_in","","",60,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",98,null],[11,"clone","wayland_server::protocol::wl_keyboard","",61,{"inputs":[{"name":"self"}],"output":{"name":"keymapformat"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"from_raw","","",61,{"inputs":[{"name":"u32"}],"output":{"generics":["keymapformat"],"name":"option"}}],[11,"to_raw","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"keystate"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"from_raw","","",62,{"inputs":[{"name":"u32"}],"output":{"generics":["keystate"],"name":"option"}}],[11,"to_raw","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",63,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",63,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",63,null],[11,"into_raw","","",63,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",63,null],[11,"as_raw_c_in","","",63,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",64,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",64,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",64,null],[11,"into_raw","","",64,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",64,null],[11,"as_raw_c_in","","",64,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",99,null],[11,"is_destructor","wayland_server::protocol::wl_touch","",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",65,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",65,null],[11,"into_raw","","",65,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",65,null],[11,"as_raw_c_in","","",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",66,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",66,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",66,null],[11,"into_raw","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",66,null],[11,"as_raw_c_in","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",100,null],[11,"clone","wayland_server::protocol::wl_output","",67,{"inputs":[{"name":"self"}],"output":{"name":"subpixel"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"subpixel"}],"output":{"name":"bool"}}],[11,"from_raw","","",67,{"inputs":[{"name":"u32"}],"output":{"generics":["subpixel"],"name":"option"}}],[11,"to_raw","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_raw","","",68,{"inputs":[{"name":"u32"}],"output":{"generics":["transform"],"name":"option"}}],[11,"to_raw","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",101,null],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Current","","indicates this is the current mode",101,null],[18,"Preferred","","indicates this is the preferred mode",101,null],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",101,{"inputs":[{"name":"u32"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",101,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",101,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",101,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",101,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[11,"from_raw","","",101,{"inputs":[{"name":"u32"}],"output":{"generics":["mode"],"name":"option"}}],[11,"to_raw","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",69,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",69,null],[11,"into_raw","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",69,null],[11,"as_raw_c_in","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",70,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",70,null],[11,"into_raw","","",70,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",70,null],[11,"as_raw_c_in","","",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",102,null],[11,"is_destructor","wayland_server::protocol::wl_region","",71,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",71,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",71,null],[11,"into_raw","","",71,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",71,null],[11,"as_raw_c_in","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",103,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",103,null],[11,"into_raw","","",103,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",103,null],[11,"as_raw_c_in","","",103,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",104,null],[11,"clone","wayland_server::protocol::wl_subcompositor","",72,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",72,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",73,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",73,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",73,null],[11,"into_raw","","",73,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",73,null],[11,"as_raw_c_in","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",105,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",105,null],[11,"into_raw","","",105,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",105,null],[11,"as_raw_c_in","","",105,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",106,null],[11,"clone","wayland_server::protocol::wl_subsurface","",74,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",74,{"inputs":[{"name":"u32"}],"output":{"generics":["error"],"name":"option"}}],[11,"to_raw","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_destructor","","",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",75,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",75,null],[11,"into_raw","","",75,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",75,null],[11,"as_raw_c_in","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"is_destructor","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",107,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"meta"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",107,null],[11,"into_raw","","",107,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",107,null],[11,"as_raw_c_in","","",107,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",108,null],[11,"is_destructor","wayland_server","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",109,{"inputs":[{"name":"u16"},{"name":"u32"},{"name":"m"}],"output":{"generics":["object"],"name":"option"}}],[11,"from_raw","","",109,null],[11,"into_raw","","",109,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"message"}}],[11,"from_raw_c","","",109,null],[11,"as_raw_c_in","","",109,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"c_interface","","",110,null],[11,"deref","wayland_server::sys::server","",111,{"inputs":[{"name":"self"}],"output":{"name":"waylandserver"}}],[11,"deref","","",112,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",112,null],[11,"initialize","","",111,null],[11,"is","wayland_server","Returns true if the trait object wraps an object of type `__T`.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast","","Returns a boxed object from a boxed trait object if the underlying object is of type `__T`. Returns the original boxed trait if it isn't.",0,{"inputs":[{"generics":["implementation"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[11,"downcast_ref","","Returns a reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns a mutable reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"open","wayland_server::sys::server","",24,{"inputs":[{"name":"str"}],"output":{"generics":["waylandserver","dlerror"],"name":"result"}}]],"paths":[[8,"Implementation"],[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"Display"],[3,"LoopToken"],[3,"LoopSignal"],[3,"EventLoop"],[3,"Global"],[3,"Resource"],[3,"NewResource"],[3,"SignalEvent"],[4,"FdEvent"],[3,"FdInterest"],[3,"Source"],[3,"TimerEvent"],[3,"IdleSource"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[4,"ResourceMap"],[4,"Event"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WAYLAND_SERVER_OPTION"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[6,"gid_t","wayland_sys","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[0,"common","","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[19,"wl_argument","","",null,null],[12,"i","","",4,null],[12,"u","","",4,null],[12,"f","","",4,null],[12,"s","","",4,null],[12,"o","","",4,null],[12,"n","","",4,null],[12,"a","","",4,null],[12,"h","","",4,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",5,null],[12,"wl_display_connect","","",5,null],[12,"wl_display_disconnect","","",5,null],[12,"wl_display_get_fd","","",5,null],[12,"wl_display_roundtrip","","",5,null],[12,"wl_display_read_events","","",5,null],[12,"wl_display_prepare_read","","",5,null],[12,"wl_display_cancel_read","","",5,null],[12,"wl_display_dispatch","","",5,null],[12,"wl_display_dispatch_pending","","",5,null],[12,"wl_display_get_error","","",5,null],[12,"wl_display_get_protocol_error","","",5,null],[12,"wl_display_flush","","",5,null],[12,"wl_event_queue_destroy","","",5,null],[12,"wl_display_create_queue","","",5,null],[12,"wl_display_roundtrip_queue","","",5,null],[12,"wl_display_prepare_read_queue","","",5,null],[12,"wl_display_dispatch_queue","","",5,null],[12,"wl_display_dispatch_queue_pending","","",5,null],[12,"wl_proxy_create","","",5,null],[12,"wl_proxy_destroy","","",5,null],[12,"wl_proxy_add_listener","","",5,null],[12,"wl_proxy_get_listener","","",5,null],[12,"wl_proxy_add_dispatcher","","",5,null],[12,"wl_proxy_marshal_array_constructor","","",5,null],[12,"wl_proxy_marshal_array_constructor_versioned","","",5,null],[12,"wl_proxy_marshal_array","","",5,null],[12,"wl_proxy_set_user_data","","",5,null],[12,"wl_proxy_get_user_data","","",5,null],[12,"wl_proxy_get_id","","",5,null],[12,"wl_proxy_get_class","","",5,null],[12,"wl_proxy_set_queue","","",5,null],[12,"wl_proxy_get_version","","",5,null],[12,"wl_proxy_create_wrapper","","",5,null],[12,"wl_proxy_wrapper_destroy","","",5,null],[12,"wl_log_set_handler_client","","",5,null],[12,"wl_list_init","","",5,null],[12,"wl_list_insert","","",5,null],[12,"wl_list_remove","","",5,null],[12,"wl_list_length","","",5,null],[12,"wl_list_empty","","",5,null],[12,"wl_list_insert_list","","",5,null],[12,"wl_array_init","","",5,null],[12,"wl_array_release","","",5,null],[12,"wl_array_add","","",5,null],[12,"wl_array_copy","","",5,null],[12,"wl_proxy_marshal_constructor","","",5,null],[12,"wl_proxy_marshal_constructor_versioned","","",5,null],[12,"wl_proxy_marshal","","",5,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",5,{"inputs":[{"name":"str"}],"output":{"generics":["waylandclient","dlerror"],"name":"result"}}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"waylandclient"}}],[11,"initialize","","",7,{"inputs":[{"name":"self"}],"output":null}],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",null,null],[3,"wl_listener","wayland_sys::server","",null,null],[12,"link","","",8,null],[12,"notify","","",8,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",9,null],[3,"WaylandServer","","",null,null],[12,"wl_client_flush","","",10,null],[12,"wl_client_destroy","","",10,null],[12,"wl_client_get_display","","",10,null],[12,"wl_client_get_credentials","","",10,null],[12,"wl_client_get_object","","",10,null],[12,"wl_client_add_destroy_listener","","",10,null],[12,"wl_client_get_destroy_listener","","",10,null],[12,"wl_client_post_no_memory","","",10,null],[12,"wl_resource_create","","",10,null],[12,"wl_client_create","","",10,null],[12,"wl_display_create","","",10,null],[12,"wl_display_destroy","","",10,null],[12,"wl_display_get_serial","","",10,null],[12,"wl_display_next_serial","","",10,null],[12,"wl_display_add_socket","","",10,null],[12,"wl_display_add_socket_auto","","",10,null],[12,"wl_display_add_socket_fd","","",10,null],[12,"wl_display_add_shm_format","","",10,null],[12,"wl_display_get_event_loop","","",10,null],[12,"wl_display_terminate","","",10,null],[12,"wl_display_run","","",10,null],[12,"wl_display_flush_clients","","",10,null],[12,"wl_display_add_destroy_listener","","",10,null],[12,"wl_display_get_destroy_listener","","",10,null],[12,"wl_global_create","","",10,null],[12,"wl_display_init_shm","","",10,null],[12,"wl_display_add_client_created_listener","","",10,null],[12,"wl_event_loop_create","","",10,null],[12,"wl_event_loop_destroy","","",10,null],[12,"wl_event_loop_add_fd","","",10,null],[12,"wl_event_loop_add_timer","","",10,null],[12,"wl_event_loop_add_signal","","",10,null],[12,"wl_event_loop_dispatch","","",10,null],[12,"wl_event_loop_dispatch_idle","","",10,null],[12,"wl_event_loop_add_idle","","",10,null],[12,"wl_event_loop_get_fd","","",10,null],[12,"wl_event_loop_add_destroy_listener","","",10,null],[12,"wl_event_loop_get_destroy_listener","","",10,null],[12,"wl_event_source_fd_update","","",10,null],[12,"wl_event_source_timer_update","","",10,null],[12,"wl_event_source_remove","","",10,null],[12,"wl_event_source_check","","",10,null],[12,"wl_global_destroy","","",10,null],[12,"wl_resource_post_event_array","","",10,null],[12,"wl_resource_queue_event_array","","",10,null],[12,"wl_resource_post_no_memory","","",10,null],[12,"wl_resource_set_implementation","","",10,null],[12,"wl_resource_set_dispatcher","","",10,null],[12,"wl_resource_destroy","","",10,null],[12,"wl_resource_get_client","","",10,null],[12,"wl_resource_get_id","","",10,null],[12,"wl_resource_get_link","","",10,null],[12,"wl_resource_from_link","","",10,null],[12,"wl_resource_find_for_client","","",10,null],[12,"wl_resource_set_user_data","","",10,null],[12,"wl_resource_get_user_data","","",10,null],[12,"wl_resource_get_version","","",10,null],[12,"wl_resource_set_destructor","","",10,null],[12,"wl_resource_instance_of","","",10,null],[12,"wl_resource_add_destroy_listener","","",10,null],[12,"wl_resource_get_destroy_listener","","",10,null],[12,"wl_shm_buffer_begin_access","","",10,null],[12,"wl_shm_buffer_end_access","","",10,null],[12,"wl_shm_buffer_get","","",10,null],[12,"wl_shm_buffer_get_data","","",10,null],[12,"wl_shm_buffer_get_stride","","",10,null],[12,"wl_shm_buffer_get_format","","",10,null],[12,"wl_shm_buffer_get_width","","",10,null],[12,"wl_shm_buffer_get_height","","",10,null],[12,"wl_log_set_handler_server","","",10,null],[12,"wl_list_init","","",10,null],[12,"wl_list_insert","","",10,null],[12,"wl_list_remove","","",10,null],[12,"wl_list_length","","",10,null],[12,"wl_list_empty","","",10,null],[12,"wl_list_insert_list","","",10,null],[12,"wl_array_init","","",10,null],[12,"wl_array_release","","",10,null],[12,"wl_array_add","","",10,null],[12,"wl_array_copy","","",10,null],[12,"wl_resource_post_event","","",10,null],[12,"wl_resource_queue_event","","",10,null],[12,"wl_resource_post_error","","",10,null],[3,"WAYLAND_SERVER_OPTION","","",null,null],[3,"WAYLAND_SERVER_HANDLE","","",null,null],[4,"wl_client","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"signal","","",null,null],[5,"wl_signal_init","wayland_sys::server::signal","",null,null],[5,"wl_signal_add","","",null,null],[5,"wl_signal_get","","",null,null],[5,"wl_signal_emit","","",null,null],[5,"rust_listener_create","","",null,null],[5,"rust_listener_get_user_data","","",null,null],[5,"rust_listener_set_user_data","","",null,null],[5,"rust_listener_destroy","","",null,null],[6,"wl_event_loop_fd_func_t","wayland_sys::server","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[11,"open","","",10,{"inputs":[{"name":"str"}],"output":{"generics":["waylandserver","dlerror"],"name":"result"}}],[11,"deref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",12,{"inputs":[{"name":"self"}],"output":{"name":"waylandserver"}}],[11,"initialize","","",12,{"inputs":[{"name":"self"}],"output":null}],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",13,null],[12,"wl_egl_window_destroy","","",13,null],[12,"wl_egl_window_resize","","",13,null],[12,"wl_egl_window_get_attached_size","","",13,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",13,{"inputs":[{"name":"str"}],"output":{"generics":["waylandegl","dlerror"],"name":"result"}}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",15,{"inputs":[{"name":"self"}],"output":{"name":"waylandegl"}}],[11,"initialize","","",15,{"inputs":[{"name":"self"}],"output":null}],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",null,null],[3,"wl_cursor_image","wayland_sys::cursor","",null,null],[12,"width","","actual width",16,null],[12,"height","","actual height",16,null],[12,"hotspot_x","","hot spot x (must be inside image)",16,null],[12,"hotspot_y","","hot spot y (must be inside image)",16,null],[12,"delay","","animation delay to next frame",16,null],[3,"wl_cursor","","",null,null],[12,"image_count","","",17,null],[12,"images","","",17,null],[12,"name","","",17,null],[3,"WaylandCursor","","",null,null],[12,"wl_cursor_theme_load","","",18,null],[12,"wl_cursor_theme_destroy","","",18,null],[12,"wl_cursor_theme_get_cursor","","",18,null],[12,"wl_cursor_image_get_buffer","","",18,null],[12,"wl_cursor_frame","","",18,null],[12,"wl_cursor_frame_and_duration","","",18,null],[3,"WAYLAND_CURSOR_OPTION","","",null,null],[3,"WAYLAND_CURSOR_HANDLE","","",null,null],[4,"wl_cursor_theme","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",18,{"inputs":[{"name":"str"}],"output":{"generics":["waylandcursor","dlerror"],"name":"result"}}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"waylandcursor"}}],[11,"initialize","","",20,{"inputs":[{"name":"self"}],"output":null}],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",null,null],[14,"ffi_dispatch","","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
initSearch(searchIndex);
